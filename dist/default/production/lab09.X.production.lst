

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Mar 11 12:07:44 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    74  0000                     
    75                           ; Version 2.10
    76                           ; Generated 31/07/2019 GMT
    77                           ; 
    78                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F26K22 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     
   110 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   111  0000                     
   112 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   113  0000                     
   114 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   115  0000                     
   116                           	psect	idataCOMRAM
   117  002788                     __pidataCOMRAM:
   118                           	opt callstack 0
   119                           
   120                           ;initializer for myTMR0ISR@activeBuffer
   121  002788  01                 	db	1
   122                           
   123                           	psect	idataBANK0
   124  002784                     __pidataBANK0:
   125                           	opt callstack 0
   126                           
   127                           ;initializer for _sampleRate
   128  002784  0640               	dw	1600
   129                           
   130                           	psect	mediumconst
   131  00F9EC                     __pmediumconst:
   132                           	opt callstack 0
   133  00F9EC  00                 	db	0
   134  00F9ED                     _sin:
   135                           	opt callstack 0
   136  00F9ED  80                 	db	128
   137  00F9EE  BB                 	db	187
   138  00F9EF  D5                 	db	213
   139  00F9F0  E9                 	db	233
   140  00F9F1  F8                 	db	248
   141  00F9F2  FF                 	db	255
   142  00F9F3  FF                 	db	255
   143  00F9F4  F8                 	db	248
   144  00F9F5  E9                 	db	233
   145  00F9F6  D5                 	db	213
   146  00F9F7  BB                 	db	187
   147  00F9F8  9F                 	db	159
   148  00F9F9  80                 	db	128
   149  00F9FA  61                 	db	97
   150  00F9FB  45                 	db	69
   151  00F9FC  2B                 	db	43
   152  00F9FD  17                 	db	23
   153  00F9FE  08                 	db	8
   154  00F9FF  01                 	db	1
   155  00FA00  01                 	db	1
   156  00FA01  08                 	db	8
   157  00FA02  17                 	db	23
   158  00FA03  2B                 	db	43
   159  00FA04  45                 	db	69
   160  00FA05  61                 	db	97
   161  00FA06  00                 	db	0
   162  00FA07                     __end_of_sin:
   163                           	opt callstack 0
   164  00FA07                     _spi2_configuration:
   165                           	opt callstack 0
   166  00FA07  01                 	db	1
   167  00FA08  40                 	db	64
   168  00FA09  01                 	db	1
   169  00FA0A  00                 	db	0
   170  00FA0B                     __end_of_spi2_configuration:
   171                           	opt callstack 0
   172  0000                     _ANSELA	set	3896
   173  0000                     _ANSELB	set	3897
   174  0000                     _ANSELC	set	3898
   175  0000                     _LATBbits	set	3978
   176  0000                     _ADCON0bits	set	4034
   177  0000                     _ADRESH	set	4036
   178  0000                     _ADRESL	set	4035
   179  0000                     _ADCON2	set	4032
   180  0000                     _ADCON1	set	4033
   181  0000                     _ADCON0	set	4034
   182  0000                     _INTCON2bits	set	4081
   183  0000                     _WPUB	set	3937
   184  0000                     _TRISC	set	3988
   185  0000                     _TRISB	set	3987
   186  0000                     _TRISA	set	3986
   187  0000                     _LATC	set	3979
   188  0000                     _LATB	set	3978
   189  0000                     _LATA	set	3977
   190  0000                     _OSCTUNE	set	3995
   191  0000                     _OSCCON2	set	4050
   192  0000                     _OSCCON	set	4051
   193  0000                     _RCONbits	set	4048
   194  0000                     _TXREG1	set	4013
   195  0000                     _RCREG1	set	4014
   196  0000                     _RCSTA1bits	set	4011
   197  0000                     _TXSTA1bits	set	4012
   198  0000                     _PIR1bits	set	3998
   199  0000                     _SPBRGH1	set	4016
   200  0000                     _SPBRG1	set	4015
   201  0000                     _TXSTA1	set	4012
   202  0000                     _RCSTA1	set	4011
   203  0000                     _BAUDCON1	set	4024
   204  0000                     _PIR3bits	set	4004
   205  0000                     _SSP2BUF	set	3951
   206  0000                     _SSP2CON2	set	3947
   207  0000                     _SSP2CON1bits	set	3948
   208  0000                     _TRISBbits	set	3987
   209  0000                     _SSP2ADD	set	3950
   210  0000                     _SSP2CON1	set	3948
   211  0000                     _SSP2STAT	set	3949
   212  0000                     _T0CON	set	4053
   213  0000                     _INTCONbits	set	4082
   214  0000                     _TMR0L	set	4054
   215  0000                     _TMR0H	set	4055
   216  0000                     _T0CONbits	set	4053
   217  0000                     _PLLRDY	set	32407
   218  00FA0B                     STR_52:
   219  00FA0B  50                 	db	80	;'P'
   220  00FA0C  72                 	db	114	;'r'
   221  00FA0D  65                 	db	101	;'e'
   222  00FA0E  73                 	db	115	;'s'
   223  00FA0F  73                 	db	115	;'s'
   224  00FA10  20                 	db	32
   225  00FA11  61                 	db	97	;'a'
   226  00FA12  6E                 	db	110	;'n'
   227  00FA13  79                 	db	121	;'y'
   228  00FA14  20                 	db	32
   229  00FA15  6B                 	db	107	;'k'
   230  00FA16  65                 	db	101	;'e'
   231  00FA17  79                 	db	121	;'y'
   232  00FA18  20                 	db	32
   233  00FA19  74                 	db	116	;'t'
   234  00FA1A  6F                 	db	111	;'o'
   235  00FA1B  20                 	db	32
   236  00FA1C  73                 	db	115	;'s'
   237  00FA1D  74                 	db	116	;'t'
   238  00FA1E  61                 	db	97	;'a'
   239  00FA1F  72                 	db	114	;'r'
   240  00FA20  74                 	db	116	;'t'
   241  00FA21  20                 	db	32
   242  00FA22  72                 	db	114	;'r'
   243  00FA23  65                 	db	101	;'e'
   244  00FA24  63                 	db	99	;'c'
   245  00FA25  6F                 	db	111	;'o'
   246  00FA26  72                 	db	114	;'r'
   247  00FA27  64                 	db	100	;'d'
   248  00FA28  69                 	db	105	;'i'
   249  00FA29  6E                 	db	110	;'n'
   250  00FA2A  67                 	db	103	;'g'
   251  00FA2B  20                 	db	32
   252  00FA2C  61                 	db	97	;'a'
   253  00FA2D  75                 	db	117	;'u'
   254  00FA2E  64                 	db	100	;'d'
   255  00FA2F  69                 	db	105	;'i'
   256  00FA30  6F                 	db	111	;'o'
   257  00FA31  20                 	db	32
   258  00FA32  61                 	db	97	;'a'
   259  00FA33  6E                 	db	110	;'n'
   260  00FA34  64                 	db	100	;'d'
   261  00FA35  20                 	db	32
   262  00FA36  70                 	db	112	;'p'
   263  00FA37  72                 	db	114	;'r'
   264  00FA38  65                 	db	101	;'e'
   265  00FA39  73                 	db	115	;'s'
   266  00FA3A  73                 	db	115	;'s'
   267  00FA3B  20                 	db	32
   268  00FA3C  61                 	db	97	;'a'
   269  00FA3D  6E                 	db	110	;'n'
   270  00FA3E  79                 	db	121	;'y'
   271  00FA3F  20                 	db	32
   272  00FA40  6B                 	db	107	;'k'
   273  00FA41  65                 	db	101	;'e'
   274  00FA42  79                 	db	121	;'y'
   275  00FA43  20                 	db	32
   276  00FA44  74                 	db	116	;'t'
   277  00FA45  6F                 	db	111	;'o'
   278  00FA46  20                 	db	32
   279  00FA47  73                 	db	115	;'s'
   280  00FA48  74                 	db	116	;'t'
   281  00FA49  6F                 	db	111	;'o'
   282  00FA4A  70                 	db	112	;'p'
   283  00FA4B  20                 	db	32
   284  00FA4C  72                 	db	114	;'r'
   285  00FA4D  65                 	db	101	;'e'
   286  00FA4E  63                 	db	99	;'c'
   287  00FA4F  6F                 	db	111	;'o'
   288  00FA50  72                 	db	114	;'r'
   289  00FA51  64                 	db	100	;'d'
   290  00FA52  69                 	db	105	;'i'
   291  00FA53  6E                 	db	110	;'n'
   292  00FA54  67                 	db	103	;'g'
   293  00FA55  2E                 	db	46
   294  00FA56  0D                 	db	13
   295  00FA57  0A                 	db	10
   296  00FA58  00                 	db	0
   297  00FA59                     STR_72:
   298  00FA59  4C                 	db	76	;'L'
   299  00FA5A  6F                 	db	111	;'o'
   300  00FA5B  67                 	db	103	;'g'
   301  00FA5C  20                 	db	32
   302  00FA5D  66                 	db	102	;'f'
   303  00FA5E  69                 	db	105	;'i'
   304  00FA5F  6C                 	db	108	;'l'
   305  00FA60  65                 	db	101	;'e'
   306  00FA61  20                 	db	32
   307  00FA62  6E                 	db	110	;'n'
   308  00FA63  61                 	db	97	;'a'
   309  00FA64  6D                 	db	109	;'m'
   310  00FA65  65                 	db	101	;'e'
   311  00FA66  3A                 	db	58	;':'
   312  00FA67  20                 	db	32
   313  00FA68  42                 	db	66	;'B'
   314  00FA69  72                 	db	114	;'r'
   315  00FA6A  6F                 	db	111	;'o'
   316  00FA6B  77                 	db	119	;'w'
   317  00FA6C  73                 	db	115	;'s'
   318  00FA6D  65                 	db	101	;'e'
   319  00FA6E  20                 	db	32
   320  00FA6F  61                 	db	97	;'a'
   321  00FA70  6E                 	db	110	;'n'
   322  00FA71  64                 	db	100	;'d'
   323  00FA72  20                 	db	32
   324  00FA73  70                 	db	112	;'p'
   325  00FA74  72                 	db	114	;'r'
   326  00FA75  6F                 	db	111	;'o'
   327  00FA76  76                 	db	118	;'v'
   328  00FA77  69                 	db	105	;'i'
   329  00FA78  64                 	db	100	;'d'
   330  00FA79  65                 	db	101	;'e'
   331  00FA7A  20                 	db	32
   332  00FA7B  61                 	db	97	;'a'
   333  00FA7C  20                 	db	32
   334  00FA7D  2E                 	db	46
   335  00FA7E  63                 	db	99	;'c'
   336  00FA7F  73                 	db	115	;'s'
   337  00FA80  76                 	db	118	;'v'
   338  00FA81  20                 	db	32
   339  00FA82  65                 	db	101	;'e'
   340  00FA83  78                 	db	120	;'x'
   341  00FA84  74                 	db	116	;'t'
   342  00FA85  65                 	db	101	;'e'
   343  00FA86  6E                 	db	110	;'n'
   344  00FA87  73                 	db	115	;'s'
   345  00FA88  69                 	db	105	;'i'
   346  00FA89  6F                 	db	111	;'o'
   347  00FA8A  6E                 	db	110	;'n'
   348  00FA8B  20                 	db	32
   349  00FA8C  74                 	db	116	;'t'
   350  00FA8D  6F                 	db	111	;'o'
   351  00FA8E  20                 	db	32
   352  00FA8F  79                 	db	121	;'y'
   353  00FA90  6F                 	db	111	;'o'
   354  00FA91  75                 	db	117	;'u'
   355  00FA92  72                 	db	114	;'r'
   356  00FA93  20                 	db	32
   357  00FA94  66                 	db	102	;'f'
   358  00FA95  69                 	db	105	;'i'
   359  00FA96  6C                 	db	108	;'l'
   360  00FA97  65                 	db	101	;'e'
   361  00FA98  20                 	db	32
   362  00FA99  6E                 	db	110	;'n'
   363  00FA9A  61                 	db	97	;'a'
   364  00FA9B  6D                 	db	109	;'m'
   365  00FA9C  65                 	db	101	;'e'
   366  00FA9D  0D                 	db	13
   367  00FA9E  0A                 	db	10
   368  00FA9F  00                 	db	0
   369  00FAA0                     STR_66:
   370  00FAA0  54                 	db	84	;'T'
   371  00FAA1  6F                 	db	111	;'o'
   372  00FAA2  20                 	db	32
   373  00FAA3  73                 	db	115	;'s'
   374  00FAA4  70                 	db	112	;'p'
   375  00FAA5  6F                 	db	111	;'o'
   376  00FAA6  6F                 	db	111	;'o'
   377  00FAA7  6C                 	db	108	;'l'
   378  00FAA8  20                 	db	32
   379  00FAA9  74                 	db	116	;'t'
   380  00FAAA  65                 	db	101	;'e'
   381  00FAAB  72                 	db	114	;'r'
   382  00FAAC  6D                 	db	109	;'m'
   383  00FAAD  69                 	db	105	;'i'
   384  00FAAE  6E                 	db	110	;'n'
   385  00FAAF  61                 	db	97	;'a'
   386  00FAB0  6C                 	db	108	;'l'
   387  00FAB1  20                 	db	32
   388  00FAB2  63                 	db	99	;'c'
   389  00FAB3  6F                 	db	111	;'o'
   390  00FAB4  6E                 	db	110	;'n'
   391  00FAB5  74                 	db	116	;'t'
   392  00FAB6  65                 	db	101	;'e'
   393  00FAB7  6E                 	db	110	;'n'
   394  00FAB8  74                 	db	116	;'t'
   395  00FAB9  73                 	db	115	;'s'
   396  00FABA  20                 	db	32
   397  00FABB  69                 	db	105	;'i'
   398  00FABC  6E                 	db	110	;'n'
   399  00FABD  74                 	db	116	;'t'
   400  00FABE  6F                 	db	111	;'o'
   401  00FABF  20                 	db	32
   402  00FAC0  61                 	db	97	;'a'
   403  00FAC1  20                 	db	32
   404  00FAC2  66                 	db	102	;'f'
   405  00FAC3  69                 	db	105	;'i'
   406  00FAC4  6C                 	db	108	;'l'
   407  00FAC5  65                 	db	101	;'e'
   408  00FAC6  20                 	db	32
   409  00FAC7  66                 	db	102	;'f'
   410  00FAC8  6F                 	db	111	;'o'
   411  00FAC9  6C                 	db	108	;'l'
   412  00FACA  6C                 	db	108	;'l'
   413  00FACB  6F                 	db	111	;'o'
   414  00FACC  77                 	db	119	;'w'
   415  00FACD  20                 	db	32
   416  00FACE  74                 	db	116	;'t'
   417  00FACF  68                 	db	104	;'h'
   418  00FAD0  65                 	db	101	;'e'
   419  00FAD1  73                 	db	115	;'s'
   420  00FAD2  65                 	db	101	;'e'
   421  00FAD3  20                 	db	32
   422  00FAD4  69                 	db	105	;'i'
   423  00FAD5  6E                 	db	110	;'n'
   424  00FAD6  73                 	db	115	;'s'
   425  00FAD7  74                 	db	116	;'t'
   426  00FAD8  72                 	db	114	;'r'
   427  00FAD9  75                 	db	117	;'u'
   428  00FADA  63                 	db	99	;'c'
   429  00FADB  74                 	db	116	;'t'
   430  00FADC  69                 	db	105	;'i'
   431  00FADD  6F                 	db	111	;'o'
   432  00FADE  6E                 	db	110	;'n'
   433  00FADF  73                 	db	115	;'s'
   434  00FAE0  3A                 	db	58	;':'
   435  00FAE1  0D                 	db	13
   436  00FAE2  0A                 	db	10
   437  00FAE3  00                 	db	0
   438  00FAE4                     STR_68:
   439  00FAE4  52                 	db	82	;'R'
   440  00FAE5  69                 	db	105	;'i'
   441  00FAE6  67                 	db	103	;'g'
   442  00FAE7  68                 	db	104	;'h'
   443  00FAE8  74                 	db	116	;'t'
   444  00FAE9  20                 	db	32
   445  00FAEA  6D                 	db	109	;'m'
   446  00FAEB  6F                 	db	111	;'o'
   447  00FAEC  75                 	db	117	;'u'
   448  00FAED  73                 	db	115	;'s'
   449  00FAEE  65                 	db	101	;'e'
   450  00FAEF  20                 	db	32
   451  00FAF0  63                 	db	99	;'c'
   452  00FAF1  6C                 	db	108	;'l'
   453  00FAF2  69                 	db	105	;'i'
   454  00FAF3  63                 	db	99	;'c'
   455  00FAF4  6B                 	db	107	;'k'
   456  00FAF5  20                 	db	32
   457  00FAF6  6F                 	db	111	;'o'
   458  00FAF7  6E                 	db	110	;'n'
   459  00FAF8  20                 	db	32
   460  00FAF9  74                 	db	116	;'t'
   461  00FAFA  68                 	db	104	;'h'
   462  00FAFB  65                 	db	101	;'e'
   463  00FAFC  20                 	db	32
   464  00FAFD  75                 	db	117	;'u'
   465  00FAFE  70                 	db	112	;'p'
   466  00FAFF  70                 	db	112	;'p'
   467  00FB00  65                 	db	101	;'e'
   468  00FB01  72                 	db	114	;'r'
   469  00FB02  20                 	db	32
   470  00FB03  6C                 	db	108	;'l'
   471  00FB04  65                 	db	101	;'e'
   472  00FB05  66                 	db	102	;'f'
   473  00FB06  74                 	db	116	;'t'
   474  00FB07  20                 	db	32
   475  00FB08  6F                 	db	111	;'o'
   476  00FB09  66                 	db	102	;'f'
   477  00FB0A  20                 	db	32
   478  00FB0B  74                 	db	116	;'t'
   479  00FB0C  68                 	db	104	;'h'
   480  00FB0D  65                 	db	101	;'e'
   481  00FB0E  20                 	db	32
   482  00FB0F  50                 	db	80	;'P'
   483  00FB10  75                 	db	117	;'u'
   484  00FB11  54                 	db	84	;'T'
   485  00FB12  54                 	db	84	;'T'
   486  00FB13  59                 	db	89	;'Y'
   487  00FB14  20                 	db	32
   488  00FB15  77                 	db	119	;'w'
   489  00FB16  69                 	db	105	;'i'
   490  00FB17  6E                 	db	110	;'n'
   491  00FB18  64                 	db	100	;'d'
   492  00FB19  6F                 	db	111	;'o'
   493  00FB1A  77                 	db	119	;'w'
   494  00FB1B  0D                 	db	13
   495  00FB1C  0A                 	db	10
   496  00FB1D  00                 	db	0
   497  00FB1E                     STR_65:
   498  00FB1E  59                 	db	89	;'Y'
   499  00FB1F  6F                 	db	111	;'o'
   500  00FB20  75                 	db	117	;'u'
   501  00FB21  20                 	db	32
   502  00FB22  6D                 	db	109	;'m'
   503  00FB23  61                 	db	97	;'a'
   504  00FB24  79                 	db	121	;'y'
   505  00FB25  20                 	db	32
   506  00FB26  74                 	db	116	;'t'
   507  00FB27  65                 	db	101	;'e'
   508  00FB28  72                 	db	114	;'r'
   509  00FB29  6D                 	db	109	;'m'
   510  00FB2A  69                 	db	105	;'i'
   511  00FB2B  6E                 	db	110	;'n'
   512  00FB2C  61                 	db	97	;'a'
   513  00FB2D  74                 	db	116	;'t'
   514  00FB2E  65                 	db	101	;'e'
   515  00FB2F  20                 	db	32
   516  00FB30  73                 	db	115	;'s'
   517  00FB31  70                 	db	112	;'p'
   518  00FB32  6F                 	db	111	;'o'
   519  00FB33  6F                 	db	111	;'o'
   520  00FB34  6C                 	db	108	;'l'
   521  00FB35  69                 	db	105	;'i'
   522  00FB36  6E                 	db	110	;'n'
   523  00FB37  67                 	db	103	;'g'
   524  00FB38  20                 	db	32
   525  00FB39  61                 	db	97	;'a'
   526  00FB3A  74                 	db	116	;'t'
   527  00FB3B  20                 	db	32
   528  00FB3C  61                 	db	97	;'a'
   529  00FB3D  6E                 	db	110	;'n'
   530  00FB3E  79                 	db	121	;'y'
   531  00FB3F  74                 	db	116	;'t'
   532  00FB40  69                 	db	105	;'i'
   533  00FB41  6D                 	db	109	;'m'
   534  00FB42  65                 	db	101	;'e'
   535  00FB43  20                 	db	32
   536  00FB44  77                 	db	119	;'w'
   537  00FB45  69                 	db	105	;'i'
   538  00FB46  74                 	db	116	;'t'
   539  00FB47  68                 	db	104	;'h'
   540  00FB48  20                 	db	32
   541  00FB49  61                 	db	97	;'a'
   542  00FB4A  20                 	db	32
   543  00FB4B  6B                 	db	107	;'k'
   544  00FB4C  65                 	db	101	;'e'
   545  00FB4D  79                 	db	121	;'y'
   546  00FB4E  70                 	db	112	;'p'
   547  00FB4F  72                 	db	114	;'r'
   548  00FB50  65                 	db	101	;'e'
   549  00FB51  73                 	db	115	;'s'
   550  00FB52  73                 	db	115	;'s'
   551  00FB53  2E                 	db	46
   552  00FB54  0D                 	db	13
   553  00FB55  0A                 	db	10
   554  00FB56  00                 	db	0
   555  00FB57                     STR_21:
   556  00FB57  31                 	db	49	;'1'
   557  00FB58  3A                 	db	58	;':'
   558  00FB59  20                 	db	32
   559  00FB5A  77                 	db	119	;'w'
   560  00FB5B  72                 	db	114	;'r'
   561  00FB5C  69                 	db	105	;'i'
   562  00FB5D  74                 	db	116	;'t'
   563  00FB5E  65                 	db	101	;'e'
   564  00FB5F  20                 	db	32
   565  00FB60  61                 	db	97	;'a'
   566  00FB61  20                 	db	32
   567  00FB62  70                 	db	112	;'p'
   568  00FB63  65                 	db	101	;'e'
   569  00FB64  72                 	db	114	;'r'
   570  00FB65  66                 	db	102	;'f'
   571  00FB66  65                 	db	101	;'e'
   572  00FB67  63                 	db	99	;'c'
   573  00FB68  74                 	db	116	;'t'
   574  00FB69  20                 	db	32
   575  00FB6A  32                 	db	50	;'2'
   576  00FB6B  36                 	db	54	;'6'
   577  00FB6C  20                 	db	32
   578  00FB6D  76                 	db	118	;'v'
   579  00FB6E  61                 	db	97	;'a'
   580  00FB6F  6C                 	db	108	;'l'
   581  00FB70  75                 	db	117	;'u'
   582  00FB71  65                 	db	101	;'e'
   583  00FB72  20                 	db	32
   584  00FB73  73                 	db	115	;'s'
   585  00FB74  69                 	db	105	;'i'
   586  00FB75  6E                 	db	110	;'n'
   587  00FB76  65                 	db	101	;'e'
   588  00FB77  20                 	db	32
   589  00FB78  77                 	db	119	;'w'
   590  00FB79  61                 	db	97	;'a'
   591  00FB7A  76                 	db	118	;'v'
   592  00FB7B  65                 	db	101	;'e'
   593  00FB7C  20                 	db	32
   594  00FB7D  74                 	db	116	;'t'
   595  00FB7E  6F                 	db	111	;'o'
   596  00FB7F  20                 	db	32
   597  00FB80  74                 	db	116	;'t'
   598  00FB81  68                 	db	104	;'h'
   599  00FB82  65                 	db	101	;'e'
   600  00FB83  20                 	db	32
   601  00FB84  53                 	db	83	;'S'
   602  00FB85  44                 	db	68	;'D'
   603  00FB86  20                 	db	32
   604  00FB87  63                 	db	99	;'c'
   605  00FB88  61                 	db	97	;'a'
   606  00FB89  72                 	db	114	;'r'
   607  00FB8A  64                 	db	100	;'d'
   608  00FB8B  0D                 	db	13
   609  00FB8C  0A                 	db	10
   610  00FB8D  00                 	db	0
   611  00FB8E                     STR_5:
   612  00FB8E  0D                 	db	13
   613  00FB8F  0A                 	db	10
   614  00FB90  2D                 	db	45
   615  00FB91  2D                 	db	45
   616  00FB92  2D                 	db	45
   617  00FB93  2D                 	db	45
   618  00FB94  2D                 	db	45
   619  00FB95  2D                 	db	45
   620  00FB96  2D                 	db	45
   621  00FB97  2D                 	db	45
   622  00FB98  2D                 	db	45
   623  00FB99  2D                 	db	45
   624  00FB9A  2D                 	db	45
   625  00FB9B  2D                 	db	45
   626  00FB9C  2D                 	db	45
   627  00FB9D  2D                 	db	45
   628  00FB9E  2D                 	db	45
   629  00FB9F  2D                 	db	45
   630  00FBA0  2D                 	db	45
   631  00FBA1  2D                 	db	45
   632  00FBA2  2D                 	db	45
   633  00FBA3  2D                 	db	45
   634  00FBA4  2D                 	db	45
   635  00FBA5  2D                 	db	45
   636  00FBA6  2D                 	db	45
   637  00FBA7  2D                 	db	45
   638  00FBA8  2D                 	db	45
   639  00FBA9  2D                 	db	45
   640  00FBAA  2D                 	db	45
   641  00FBAB  2D                 	db	45
   642  00FBAC  2D                 	db	45
   643  00FBAD  2D                 	db	45
   644  00FBAE  2D                 	db	45
   645  00FBAF  2D                 	db	45
   646  00FBB0  2D                 	db	45
   647  00FBB1  2D                 	db	45
   648  00FBB2  2D                 	db	45
   649  00FBB3  2D                 	db	45
   650  00FBB4  2D                 	db	45
   651  00FBB5  2D                 	db	45
   652  00FBB6  2D                 	db	45
   653  00FBB7  2D                 	db	45
   654  00FBB8  2D                 	db	45
   655  00FBB9  2D                 	db	45
   656  00FBBA  2D                 	db	45
   657  00FBBB  2D                 	db	45
   658  00FBBC  2D                 	db	45
   659  00FBBD  2D                 	db	45
   660  00FBBE  2D                 	db	45
   661  00FBBF  2D                 	db	45
   662  00FBC0  2D                 	db	45
   663  00FBC1  0D                 	db	13
   664  00FBC2  0A                 	db	10
   665  00FBC3  00                 	db	0
   666  00FBC4                     STR_23:
   667  00FBC4  2B                 	db	43
   668  00FBC5  2F                 	db	47
   669  00FBC6  2D                 	db	45
   670  00FBC7  3A                 	db	58	;':'
   671  00FBC8  20                 	db	32
   672  00FBC9  49                 	db	73	;'I'
   673  00FBCA  6E                 	db	110	;'n'
   674  00FBCB  63                 	db	99	;'c'
   675  00FBCC  72                 	db	114	;'r'
   676  00FBCD  65                 	db	101	;'e'
   677  00FBCE  61                 	db	97	;'a'
   678  00FBCF  73                 	db	115	;'s'
   679  00FBD0  65                 	db	101	;'e'
   680  00FBD1  2F                 	db	47
   681  00FBD2  44                 	db	68	;'D'
   682  00FBD3  65                 	db	101	;'e'
   683  00FBD4  63                 	db	99	;'c'
   684  00FBD5  72                 	db	114	;'r'
   685  00FBD6  65                 	db	101	;'e'
   686  00FBD7  61                 	db	97	;'a'
   687  00FBD8  73                 	db	115	;'s'
   688  00FBD9  65                 	db	101	;'e'
   689  00FBDA  20                 	db	32
   690  00FBDB  74                 	db	116	;'t'
   691  00FBDC  68                 	db	104	;'h'
   692  00FBDD  65                 	db	101	;'e'
   693  00FBDE  20                 	db	32
   694  00FBDF  73                 	db	115	;'s'
   695  00FBE0  61                 	db	97	;'a'
   696  00FBE1  6D                 	db	109	;'m'
   697  00FBE2  70                 	db	112	;'p'
   698  00FBE3  6C                 	db	108	;'l'
   699  00FBE4  65                 	db	101	;'e'
   700  00FBE5  20                 	db	32
   701  00FBE6  72                 	db	114	;'r'
   702  00FBE7  61                 	db	97	;'a'
   703  00FBE8  74                 	db	116	;'t'
   704  00FBE9  65                 	db	101	;'e'
   705  00FBEA  20                 	db	32
   706  00FBEB  62                 	db	98	;'b'
   707  00FBEC  79                 	db	121	;'y'
   708  00FBED  20                 	db	32
   709  00FBEE  31                 	db	49	;'1'
   710  00FBEF  30                 	db	48	;'0'
   711  00FBF0  20                 	db	32
   712  00FBF1  75                 	db	117	;'u'
   713  00FBF2  73                 	db	115	;'s'
   714  00FBF3  0D                 	db	13
   715  00FBF4  0A                 	db	10
   716  00FBF5  00                 	db	0
   717  00FBF6                     STR_71:
   718  00FBF6  53                 	db	83	;'S'
   719  00FBF7  65                 	db	101	;'e'
   720  00FBF8  6C                 	db	108	;'l'
   721  00FBF9  65                 	db	101	;'e'
   722  00FBFA  63                 	db	99	;'c'
   723  00FBFB  74                 	db	116	;'t'
   724  00FBFC  3A                 	db	58	;':'
   725  00FBFD  20                 	db	32
   726  00FBFE  20                 	db	32
   727  00FBFF  20                 	db	32
   728  00FC00  20                 	db	32
   729  00FC01  20                 	db	32
   730  00FC02  53                 	db	83	;'S'
   731  00FC03  65                 	db	101	;'e'
   732  00FC04  73                 	db	115	;'s'
   733  00FC05  73                 	db	115	;'s'
   734  00FC06  69                 	db	105	;'i'
   735  00FC07  6F                 	db	111	;'o'
   736  00FC08  6E                 	db	110	;'n'
   737  00FC09  20                 	db	32
   738  00FC0A  6C                 	db	108	;'l'
   739  00FC0B  6F                 	db	111	;'o'
   740  00FC0C  67                 	db	103	;'g'
   741  00FC0D  67                 	db	103	;'g'
   742  00FC0E  69                 	db	105	;'i'
   743  00FC0F  6E                 	db	110	;'n'
   744  00FC10  67                 	db	103	;'g'
   745  00FC11  3A                 	db	58	;':'
   746  00FC12  20                 	db	32
   747  00FC13  41                 	db	65	;'A'
   748  00FC14  6C                 	db	108	;'l'
   749  00FC15  6C                 	db	108	;'l'
   750  00FC16  20                 	db	32
   751  00FC17  73                 	db	115	;'s'
   752  00FC18  65                 	db	101	;'e'
   753  00FC19  73                 	db	115	;'s'
   754  00FC1A  73                 	db	115	;'s'
   755  00FC1B  69                 	db	105	;'i'
   756  00FC1C  6F                 	db	111	;'o'
   757  00FC1D  6E                 	db	110	;'n'
   758  00FC1E  20                 	db	32
   759  00FC1F  6F                 	db	111	;'o'
   760  00FC20  75                 	db	117	;'u'
   761  00FC21  74                 	db	116	;'t'
   762  00FC22  70                 	db	112	;'p'
   763  00FC23  75                 	db	117	;'u'
   764  00FC24  74                 	db	116	;'t'
   765  00FC25  0D                 	db	13
   766  00FC26  0A                 	db	10
   767  00FC27  00                 	db	0
   768  00FC28                     STR_77:
   769  00FC28  54                 	db	84	;'T'
   770  00FC29  6F                 	db	111	;'o'
   771  00FC2A  20                 	db	32
   772  00FC2B  63                 	db	99	;'c'
   773  00FC2C  6C                 	db	108	;'l'
   774  00FC2D  6F                 	db	111	;'o'
   775  00FC2E  73                 	db	115	;'s'
   776  00FC2F  65                 	db	101	;'e'
   777  00FC30  20                 	db	32
   778  00FC31  74                 	db	116	;'t'
   779  00FC32  68                 	db	104	;'h'
   780  00FC33  65                 	db	101	;'e'
   781  00FC34  20                 	db	32
   782  00FC35  66                 	db	102	;'f'
   783  00FC36  69                 	db	105	;'i'
   784  00FC37  6C                 	db	108	;'l'
   785  00FC38  65                 	db	101	;'e'
   786  00FC39  20                 	db	32
   787  00FC3A  66                 	db	102	;'f'
   788  00FC3B  6F                 	db	111	;'o'
   789  00FC3C  6C                 	db	108	;'l'
   790  00FC3D  6C                 	db	108	;'l'
   791  00FC3E  6F                 	db	111	;'o'
   792  00FC3F  77                 	db	119	;'w'
   793  00FC40  20                 	db	32
   794  00FC41  74                 	db	116	;'t'
   795  00FC42  68                 	db	104	;'h'
   796  00FC43  65                 	db	101	;'e'
   797  00FC44  73                 	db	115	;'s'
   798  00FC45  65                 	db	101	;'e'
   799  00FC46  20                 	db	32
   800  00FC47  69                 	db	105	;'i'
   801  00FC48  6E                 	db	110	;'n'
   802  00FC49  73                 	db	115	;'s'
   803  00FC4A  74                 	db	116	;'t'
   804  00FC4B  72                 	db	114	;'r'
   805  00FC4C  75                 	db	117	;'u'
   806  00FC4D  63                 	db	99	;'c'
   807  00FC4E  74                 	db	116	;'t'
   808  00FC4F  69                 	db	105	;'i'
   809  00FC50  6F                 	db	111	;'o'
   810  00FC51  6E                 	db	110	;'n'
   811  00FC52  73                 	db	115	;'s'
   812  00FC53  3A                 	db	58	;':'
   813  00FC54  0D                 	db	13
   814  00FC55  0A                 	db	10
   815  00FC56  00                 	db	0
   816  00FC57                     STR_51:
   817  00FC57  54                 	db	84	;'T'
   818  00FC58  68                 	db	104	;'h'
   819  00FC59  65                 	db	101	;'e'
   820  00FC5A  72                 	db	114	;'r'
   821  00FC5B  65                 	db	101	;'e'
   822  00FC5C  20                 	db	32
   823  00FC5D  77                 	db	119	;'w'
   824  00FC5E  65                 	db	101	;'e'
   825  00FC5F  72                 	db	114	;'r'
   826  00FC60  65                 	db	101	;'e'
   827  00FC61  20                 	db	32
   828  00FC62  25                 	db	37
   829  00FC63  64                 	db	100	;'d'
   830  00FC64  20                 	db	32
   831  00FC65  62                 	db	98	;'b'
   832  00FC66  6C                 	db	108	;'l'
   833  00FC67  6F                 	db	111	;'o'
   834  00FC68  63                 	db	99	;'c'
   835  00FC69  6B                 	db	107	;'k'
   836  00FC6A  73                 	db	115	;'s'
   837  00FC6B  20                 	db	32
   838  00FC6C  77                 	db	119	;'w'
   839  00FC6D  72                 	db	114	;'r'
   840  00FC6E  69                 	db	105	;'i'
   841  00FC6F  74                 	db	116	;'t'
   842  00FC70  74                 	db	116	;'t'
   843  00FC71  65                 	db	101	;'e'
   844  00FC72  6E                 	db	110	;'n'
   845  00FC73  20                 	db	32
   846  00FC74  74                 	db	116	;'t'
   847  00FC75  6F                 	db	111	;'o'
   848  00FC76  20                 	db	32
   849  00FC77  74                 	db	116	;'t'
   850  00FC78  68                 	db	104	;'h'
   851  00FC79  65                 	db	101	;'e'
   852  00FC7A  20                 	db	32
   853  00FC7B  53                 	db	83	;'S'
   854  00FC7C  44                 	db	68	;'D'
   855  00FC7D  20                 	db	32
   856  00FC7E  63                 	db	99	;'c'
   857  00FC7F  61                 	db	97	;'a'
   858  00FC80  72                 	db	114	;'r'
   859  00FC81  64                 	db	100	;'d'
   860  00FC82  00                 	db	0
   861  00FC83                     STR_20:
   862  00FC83  72                 	db	114	;'r'
   863  00FC84  3A                 	db	58	;':'
   864  00FC85  20                 	db	32
   865  00FC86  72                 	db	114	;'r'
   866  00FC87  65                 	db	101	;'e'
   867  00FC88  61                 	db	97	;'a'
   868  00FC89  64                 	db	100	;'d'
   869  00FC8A  20                 	db	32
   870  00FC8B  61                 	db	97	;'a'
   871  00FC8C  20                 	db	32
   872  00FC8D  62                 	db	98	;'b'
   873  00FC8E  6C                 	db	108	;'l'
   874  00FC8F  6F                 	db	111	;'o'
   875  00FC90  63                 	db	99	;'c'
   876  00FC91  6B                 	db	107	;'k'
   877  00FC92  20                 	db	32
   878  00FC93  6F                 	db	111	;'o'
   879  00FC94  66                 	db	102	;'f'
   880  00FC95  20                 	db	32
   881  00FC96  25                 	db	37
   882  00FC97  64                 	db	100	;'d'
   883  00FC98  20                 	db	32
   884  00FC99  62                 	db	98	;'b'
   885  00FC9A  79                 	db	121	;'y'
   886  00FC9B  74                 	db	116	;'t'
   887  00FC9C  65                 	db	101	;'e'
   888  00FC9D  73                 	db	115	;'s'
   889  00FC9E  20                 	db	32
   890  00FC9F  66                 	db	102	;'f'
   891  00FCA0  72                 	db	114	;'r'
   892  00FCA1  6F                 	db	111	;'o'
   893  00FCA2  6D                 	db	109	;'m'
   894  00FCA3  20                 	db	32
   895  00FCA4  53                 	db	83	;'S'
   896  00FCA5  44                 	db	68	;'D'
   897  00FCA6  20                 	db	32
   898  00FCA7  63                 	db	99	;'c'
   899  00FCA8  61                 	db	97	;'a'
   900  00FCA9  72                 	db	114	;'r'
   901  00FCAA  64                 	db	100	;'d'
   902  00FCAB  0D                 	db	13
   903  00FCAC  0A                 	db	10
   904  00FCAD  00                 	db	0
   905  00FCAE                     STR_30:
   906  00FCAE  4D                 	db	77	;'M'
   907  00FCAF  61                 	db	97	;'a'
   908  00FCB0  6B                 	db	107	;'k'
   909  00FCB1  65                 	db	101	;'e'
   910  00FCB2  20                 	db	32
   911  00FCB3  73                 	db	115	;'s'
   912  00FCB4  75                 	db	117	;'u'
   913  00FCB5  72                 	db	114	;'r'
   914  00FCB6  65                 	db	101	;'e'
   915  00FCB7  20                 	db	32
   916  00FCB8  53                 	db	83	;'S'
   917  00FCB9  44                 	db	68	;'D'
   918  00FCBA  20                 	db	32
   919  00FCBB  63                 	db	99	;'c'
   920  00FCBC  61                 	db	97	;'a'
   921  00FCBD  72                 	db	114	;'r'
   922  00FCBE  64                 	db	100	;'d'
   923  00FCBF  20                 	db	32
   924  00FCC0  69                 	db	105	;'i'
   925  00FCC1  73                 	db	115	;'s'
   926  00FCC2  20                 	db	32
   927  00FCC3  70                 	db	112	;'p'
   928  00FCC4  72                 	db	114	;'r'
   929  00FCC5  6F                 	db	111	;'o'
   930  00FCC6  70                 	db	112	;'p'
   931  00FCC7  65                 	db	101	;'e'
   932  00FCC8  72                 	db	114	;'r'
   933  00FCC9  6C                 	db	108	;'l'
   934  00FCCA  79                 	db	121	;'y'
   935  00FCCB  20                 	db	32
   936  00FCCC  69                 	db	105	;'i'
   937  00FCCD  6E                 	db	110	;'n'
   938  00FCCE  73                 	db	115	;'s'
   939  00FCCF  65                 	db	101	;'e'
   940  00FCD0  72                 	db	114	;'r'
   941  00FCD1  74                 	db	116	;'t'
   942  00FCD2  65                 	db	101	;'e'
   943  00FCD3  64                 	db	100	;'d'
   944  00FCD4  2E                 	db	46
   945  00FCD5  0D                 	db	13
   946  00FCD6  0A                 	db	10
   947  00FCD7  00                 	db	0
   948  00FCD8                     STR_24:
   949  00FCD8  57                 	db	87	;'W'
   950  00FCD9  3A                 	db	58	;':'
   951  00FCDA  20                 	db	32
   952  00FCDB  57                 	db	87	;'W'
   953  00FCDC  72                 	db	114	;'r'
   954  00FCDD  69                 	db	105	;'i'
   955  00FCDE  74                 	db	116	;'t'
   956  00FCDF  65                 	db	101	;'e'
   957  00FCE0  20                 	db	32
   958  00FCE1  6D                 	db	109	;'m'
   959  00FCE2  69                 	db	105	;'i'
   960  00FCE3  63                 	db	99	;'c'
   961  00FCE4  72                 	db	114	;'r'
   962  00FCE5  6F                 	db	111	;'o'
   963  00FCE6  70                 	db	112	;'p'
   964  00FCE7  68                 	db	104	;'h'
   965  00FCE8  6F                 	db	111	;'o'
   966  00FCE9  6E                 	db	110	;'n'
   967  00FCEA  65                 	db	101	;'e'
   968  00FCEB  20                 	db	32
   969  00FCEC  3D                 	db	61	;'='
   970  00FCED  3E                 	db	62	;'>'
   971  00FCEE  20                 	db	32
   972  00FCEF  53                 	db	83	;'S'
   973  00FCF0  44                 	db	68	;'D'
   974  00FCF1  20                 	db	32
   975  00FCF2  63                 	db	99	;'c'
   976  00FCF3  61                 	db	97	;'a'
   977  00FCF4  72                 	db	114	;'r'
   978  00FCF5  64                 	db	100	;'d'
   979  00FCF6  20                 	db	32
   980  00FCF7  61                 	db	97	;'a'
   981  00FCF8  74                 	db	116	;'t'
   982  00FCF9  20                 	db	32
   983  00FCFA  25                 	db	37
   984  00FCFB  64                 	db	100	;'d'
   985  00FCFC  20                 	db	32
   986  00FCFD  75                 	db	117	;'u'
   987  00FCFE  73                 	db	115	;'s'
   988  00FCFF  0D                 	db	13
   989  00FD00  0A                 	db	10
   990  00FD01  00                 	db	0
   991  00FD02                     STR_19:
   992  00FD02  61                 	db	97	;'a'
   993  00FD03  2F                 	db	47
   994  00FD04  41                 	db	65	;'A'
   995  00FD05  20                 	db	32
   996  00FD06  64                 	db	100	;'d'
   997  00FD07  65                 	db	101	;'e'
   998  00FD08  63                 	db	99	;'c'
   999  00FD09  72                 	db	114	;'r'
  1000  00FD0A  65                 	db	101	;'e'
  1001  00FD0B  61                 	db	97	;'a'
  1002  00FD0C  73                 	db	115	;'s'
  1003  00FD0D  65                 	db	101	;'e'
  1004  00FD0E  2F                 	db	47
  1005  00FD0F  69                 	db	105	;'i'
  1006  00FD10  6E                 	db	110	;'n'
  1007  00FD11  63                 	db	99	;'c'
  1008  00FD12  72                 	db	114	;'r'
  1009  00FD13  65                 	db	101	;'e'
  1010  00FD14  61                 	db	97	;'a'
  1011  00FD15  73                 	db	115	;'s'
  1012  00FD16  65                 	db	101	;'e'
  1013  00FD17  20                 	db	32
  1014  00FD18  72                 	db	114	;'r'
  1015  00FD19  65                 	db	101	;'e'
  1016  00FD1A  61                 	db	97	;'a'
  1017  00FD1B  64                 	db	100	;'d'
  1018  00FD1C  20                 	db	32
  1019  00FD1D  61                 	db	97	;'a'
  1020  00FD1E  64                 	db	100	;'d'
  1021  00FD1F  64                 	db	100	;'d'
  1022  00FD20  72                 	db	114	;'r'
  1023  00FD21  65                 	db	101	;'e'
  1024  00FD22  73                 	db	115	;'s'
  1025  00FD23  73                 	db	115	;'s'
  1026  00FD24  0D                 	db	13
  1027  00FD25  0A                 	db	10
  1028  00FD26  00                 	db	0
  1029  00FD27                     STR_92:
  1030  00FD27  53                 	db	83	;'S'
  1031  00FD28  75                 	db	117	;'u'
  1032  00FD29  63                 	db	99	;'c'
  1033  00FD2A  63                 	db	99	;'c'
  1034  00FD2B  65                 	db	101	;'e'
  1035  00FD2C  73                 	db	115	;'s'
  1036  00FD2D  73                 	db	115	;'s'
  1037  00FD2E  66                 	db	102	;'f'
  1038  00FD2F  75                 	db	117	;'u'
  1039  00FD30  6C                 	db	108	;'l'
  1040  00FD31  6C                 	db	108	;'l'
  1041  00FD32  79                 	db	121	;'y'
  1042  00FD33  20                 	db	32
  1043  00FD34  49                 	db	73	;'I'
  1044  00FD35  6E                 	db	110	;'n'
  1045  00FD36  69                 	db	105	;'i'
  1046  00FD37  74                 	db	116	;'t'
  1047  00FD38  69                 	db	105	;'i'
  1048  00FD39  61                 	db	97	;'a'
  1049  00FD3A  6C                 	db	108	;'l'
  1050  00FD3B  69                 	db	105	;'i'
  1051  00FD3C  7A                 	db	122	;'z'
  1052  00FD3D  65                 	db	101	;'e'
  1053  00FD3E  64                 	db	100	;'d'
  1054  00FD3F  20                 	db	32
  1055  00FD40  53                 	db	83	;'S'
  1056  00FD41  44                 	db	68	;'D'
  1057  00FD42  20                 	db	32
  1058  00FD43  43                 	db	67	;'C'
  1059  00FD44  61                 	db	97	;'a'
  1060  00FD45  72                 	db	114	;'r'
  1061  00FD46  64                 	db	100	;'d'
  1062  00FD47  0D                 	db	13
  1063  00FD48  0A                 	db	10
  1064  00FD49  00                 	db	0
  1065  00FD4A                     STR_76:
  1066  00FD4A  53                 	db	83	;'S'
  1067  00FD4B  70                 	db	112	;'p'
  1068  00FD4C  6F                 	db	111	;'o'
  1069  00FD4D  6F                 	db	111	;'o'
  1070  00FD4E  6C                 	db	108	;'l'
  1071  00FD4F  65                 	db	101	;'e'
  1072  00FD50  64                 	db	100	;'d'
  1073  00FD51  20                 	db	32
  1074  00FD52  25                 	db	37
  1075  00FD53  64                 	db	100	;'d'
  1076  00FD54  20                 	db	32
  1077  00FD55  6F                 	db	111	;'o'
  1078  00FD56  75                 	db	117	;'u'
  1079  00FD57  74                 	db	116	;'t'
  1080  00FD58  20                 	db	32
  1081  00FD59  6F                 	db	111	;'o'
  1082  00FD5A  66                 	db	102	;'f'
  1083  00FD5B  20                 	db	32
  1084  00FD5C  74                 	db	116	;'t'
  1085  00FD5D  68                 	db	104	;'h'
  1086  00FD5E  65                 	db	101	;'e'
  1087  00FD5F  20                 	db	32
  1088  00FD60  25                 	db	37
  1089  00FD61  64                 	db	100	;'d'
  1090  00FD62  20                 	db	32
  1091  00FD63  62                 	db	98	;'b'
  1092  00FD64  6C                 	db	108	;'l'
  1093  00FD65  6F                 	db	111	;'o'
  1094  00FD66  63                 	db	99	;'c'
  1095  00FD67  6B                 	db	107	;'k'
  1096  00FD68  73                 	db	115	;'s'
  1097  00FD69  2E                 	db	46
  1098  00FD6A  0D                 	db	13
  1099  00FD6B  0A                 	db	10
  1100  00FD6C  00                 	db	0
  1101  00FD6D                     STR_69:
  1102  00FD6D  53                 	db	83	;'S'
  1103  00FD6E  65                 	db	101	;'e'
  1104  00FD6F  6C                 	db	108	;'l'
  1105  00FD70  65                 	db	101	;'e'
  1106  00FD71  63                 	db	99	;'c'
  1107  00FD72  74                 	db	116	;'t'
  1108  00FD73  3A                 	db	58	;':'
  1109  00FD74  20                 	db	32
  1110  00FD75  20                 	db	32
  1111  00FD76  20                 	db	32
  1112  00FD77  20                 	db	32
  1113  00FD78  20                 	db	32
  1114  00FD79  43                 	db	67	;'C'
  1115  00FD7A  68                 	db	104	;'h'
  1116  00FD7B  61                 	db	97	;'a'
  1117  00FD7C  6E                 	db	110	;'n'
  1118  00FD7D  67                 	db	103	;'g'
  1119  00FD7E  65                 	db	101	;'e'
  1120  00FD7F  20                 	db	32
  1121  00FD80  73                 	db	115	;'s'
  1122  00FD81  65                 	db	101	;'e'
  1123  00FD82  74                 	db	116	;'t'
  1124  00FD83  74                 	db	116	;'t'
  1125  00FD84  69                 	db	105	;'i'
  1126  00FD85  6E                 	db	110	;'n'
  1127  00FD86  67                 	db	103	;'g'
  1128  00FD87  73                 	db	115	;'s'
  1129  00FD88  2E                 	db	46
  1130  00FD89  2E                 	db	46
  1131  00FD8A  2E                 	db	46
  1132  00FD8B  0D                 	db	13
  1133  00FD8C  0A                 	db	10
  1134  00FD8D  00                 	db	0
  1135  00FD8E                     STR_25:
  1136  00FD8E  73                 	db	115	;'s'
  1137  00FD8F  3A                 	db	58	;':'
  1138  00FD90  20                 	db	32
  1139  00FD91  73                 	db	115	;'s'
  1140  00FD92  70                 	db	112	;'p'
  1141  00FD93  6F                 	db	111	;'o'
  1142  00FD94  6F                 	db	111	;'o'
  1143  00FD95  6C                 	db	108	;'l'
  1144  00FD96  20                 	db	32
  1145  00FD97  6D                 	db	109	;'m'
  1146  00FD98  65                 	db	101	;'e'
  1147  00FD99  6D                 	db	109	;'m'
  1148  00FD9A  6F                 	db	111	;'o'
  1149  00FD9B  72                 	db	114	;'r'
  1150  00FD9C  79                 	db	121	;'y'
  1151  00FD9D  20                 	db	32
  1152  00FD9E  74                 	db	116	;'t'
  1153  00FD9F  6F                 	db	111	;'o'
  1154  00FDA0  20                 	db	32
  1155  00FDA1  61                 	db	97	;'a'
  1156  00FDA2  20                 	db	32
  1157  00FDA3  63                 	db	99	;'c'
  1158  00FDA4  73                 	db	115	;'s'
  1159  00FDA5  76                 	db	118	;'v'
  1160  00FDA6  20                 	db	32
  1161  00FDA7  66                 	db	102	;'f'
  1162  00FDA8  69                 	db	105	;'i'
  1163  00FDA9  6C                 	db	108	;'l'
  1164  00FDAA  65                 	db	101	;'e'
  1165  00FDAB  0D                 	db	13
  1166  00FDAC  0A                 	db	10
  1167  00FDAD  00                 	db	0
  1168  00FDAE                     STR_93:
  1169  00FDAE  45                 	db	69	;'E'
  1170  00FDAF  72                 	db	114	;'r'
  1171  00FDB0  72                 	db	114	;'r'
  1172  00FDB1  6F                 	db	111	;'o'
  1173  00FDB2  72                 	db	114	;'r'
  1174  00FDB3  20                 	db	32
  1175  00FDB4  49                 	db	73	;'I'
  1176  00FDB5  6E                 	db	110	;'n'
  1177  00FDB6  69                 	db	105	;'i'
  1178  00FDB7  74                 	db	116	;'t'
  1179  00FDB8  69                 	db	105	;'i'
  1180  00FDB9  61                 	db	97	;'a'
  1181  00FDBA  6C                 	db	108	;'l'
  1182  00FDBB  69                 	db	105	;'i'
  1183  00FDBC  7A                 	db	122	;'z'
  1184  00FDBD  69                 	db	105	;'i'
  1185  00FDBE  6E                 	db	110	;'n'
  1186  00FDBF  67                 	db	103	;'g'
  1187  00FDC0  20                 	db	32
  1188  00FDC1  53                 	db	83	;'S'
  1189  00FDC2  44                 	db	68	;'D'
  1190  00FDC3  20                 	db	32
  1191  00FDC4  43                 	db	67	;'C'
  1192  00FDC5  61                 	db	97	;'a'
  1193  00FDC6  72                 	db	114	;'r'
  1194  00FDC7  64                 	db	100	;'d'
  1195  00FDC8  0D                 	db	13
  1196  00FDC9  0A                 	db	10
  1197  00FDCA  00                 	db	0
  1198  00FDCB                     STR_31:
  1199  00FDCB  50                 	db	80	;'P'
  1200  00FDCC  72                 	db	114	;'r'
  1201  00FDCD  65                 	db	101	;'e'
  1202  00FDCE  73                 	db	115	;'s'
  1203  00FDCF  73                 	db	115	;'s'
  1204  00FDD0  20                 	db	32
  1205  00FDD1  61                 	db	97	;'a'
  1206  00FDD2  6E                 	db	110	;'n'
  1207  00FDD3  79                 	db	121	;'y'
  1208  00FDD4  20                 	db	32
  1209  00FDD5  6B                 	db	107	;'k'
  1210  00FDD6  65                 	db	101	;'e'
  1211  00FDD7  79                 	db	121	;'y'
  1212  00FDD8  20                 	db	32
  1213  00FDD9  74                 	db	116	;'t'
  1214  00FDDA  6F                 	db	111	;'o'
  1215  00FDDB  20                 	db	32
  1216  00FDDC  63                 	db	99	;'c'
  1217  00FDDD  6F                 	db	111	;'o'
  1218  00FDDE  6E                 	db	110	;'n'
  1219  00FDDF  74                 	db	116	;'t'
  1220  00FDE0  69                 	db	105	;'i'
  1221  00FDE1  6E                 	db	110	;'n'
  1222  00FDE2  75                 	db	117	;'u'
  1223  00FDE3  65                 	db	101	;'e'
  1224  00FDE4  2E                 	db	46
  1225  00FDE5  0D                 	db	13
  1226  00FDE6  0A                 	db	10
  1227  00FDE7  00                 	db	0
  1228  00FDE8  42                 	db	66	;'B'
  1229  00FDE9  6C                 	db	108	;'l'
  1230  00FDEA  6F                 	db	111	;'o'
  1231  00FDEB  63                 	db	99	;'c'
  1232  00FDEC  6B                 	db	107	;'k'
  1233  00FDED  20                 	db	32
  1234  00FDEE  4C                 	db	76	;'L'
  1235  00FDEF  65                 	db	101	;'e'
  1236  00FDF0  6E                 	db	110	;'n'
  1237  00FDF1  67                 	db	103	;'g'
  1238  00FDF2  74                 	db	116	;'t'
  1239  00FDF3  68                 	db	104	;'h'
  1240  00FDF4  20                 	db	32
  1241  00FDF5  52                 	db	82	;'R'
  1242  00FDF6  65                 	db	101	;'e'
  1243  00FDF7  73                 	db	115	;'s'
  1244  00FDF8  70                 	db	112	;'p'
  1245  00FDF9  6F                 	db	111	;'o'
  1246  00FDFA  6E                 	db	110	;'n'
  1247  00FDFB  73                 	db	115	;'s'
  1248  00FDFC  65                 	db	101	;'e'
  1249  00FDFD  3A                 	db	58	;':'
  1250  00FDFE  20                 	db	32
  1251  00FDFF  25                 	db	37
  1252  00FE00  78                 	db	120	;'x'
  1253  00FE01  0D                 	db	13
  1254  00FE02  0A                 	db	10
  1255  00FE03  00                 	db	0
  1256  00FE04                     STR_94:
  1257  00FE04  43                 	db	67	;'C'
  1258  00FE05  4D                 	db	77	;'M'
  1259  00FE06  44                 	db	68	;'D'
  1260  00FE07  30                 	db	48	;'0'
  1261  00FE08  2C                 	db	44
  1262  00FE09  20                 	db	32
  1263  00FE0A  52                 	db	82	;'R'
  1264  00FE0B  65                 	db	101	;'e'
  1265  00FE0C  73                 	db	115	;'s'
  1266  00FE0D  65                 	db	101	;'e'
  1267  00FE0E  74                 	db	116	;'t'
  1268  00FE0F  20                 	db	32
  1269  00FE10  52                 	db	82	;'R'
  1270  00FE11  65                 	db	101	;'e'
  1271  00FE12  73                 	db	115	;'s'
  1272  00FE13  70                 	db	112	;'p'
  1273  00FE14  6F                 	db	111	;'o'
  1274  00FE15  6E                 	db	110	;'n'
  1275  00FE16  73                 	db	115	;'s'
  1276  00FE17  65                 	db	101	;'e'
  1277  00FE18  3A                 	db	58	;':'
  1278  00FE19  20                 	db	32
  1279  00FE1A  25                 	db	37
  1280  00FE1B  78                 	db	120	;'x'
  1281  00FE1C  0D                 	db	13
  1282  00FE1D  0A                 	db	10
  1283  00FE1E  00                 	db	0
  1284  00FE1F  43                 	db	67	;'C'
  1285  00FE20  4D                 	db	77	;'M'
  1286  00FE21  44                 	db	68	;'D'
  1287  00FE22  31                 	db	49	;'1'
  1288  00FE23  2C                 	db	44
  1289  00FE24  20                 	db	32
  1290  00FE25  49                 	db	73	;'I'
  1291  00FE26  6E                 	db	110	;'n'
  1292  00FE27  69                 	db	105	;'i'
  1293  00FE28  74                 	db	116	;'t'
  1294  00FE29  20                 	db	32
  1295  00FE2A  52                 	db	82	;'R'
  1296  00FE2B  65                 	db	101	;'e'
  1297  00FE2C  73                 	db	115	;'s'
  1298  00FE2D  70                 	db	112	;'p'
  1299  00FE2E  6F                 	db	111	;'o'
  1300  00FE2F  6E                 	db	110	;'n'
  1301  00FE30  73                 	db	115	;'s'
  1302  00FE31  65                 	db	101	;'e'
  1303  00FE32  3A                 	db	58	;':'
  1304  00FE33  20                 	db	32
  1305  00FE34  25                 	db	37
  1306  00FE35  78                 	db	120	;'x'
  1307  00FE36  0D                 	db	13
  1308  00FE37  0A                 	db	10
  1309  00FE38  00                 	db	0
  1310  00FE39                     STR_74:
  1311  00FE39  50                 	db	80	;'P'
  1312  00FE3A  72                 	db	114	;'r'
  1313  00FE3B  65                 	db	101	;'e'
  1314  00FE3C  73                 	db	115	;'s'
  1315  00FE3D  73                 	db	115	;'s'
  1316  00FE3E  20                 	db	32
  1317  00FE3F  61                 	db	97	;'a'
  1318  00FE40  6E                 	db	110	;'n'
  1319  00FE41  79                 	db	121	;'y'
  1320  00FE42  20                 	db	32
  1321  00FE43  6B                 	db	107	;'k'
  1322  00FE44  65                 	db	101	;'e'
  1323  00FE45  79                 	db	121	;'y'
  1324  00FE46  20                 	db	32
  1325  00FE47  74                 	db	116	;'t'
  1326  00FE48  6F                 	db	111	;'o'
  1327  00FE49  20                 	db	32
  1328  00FE4A  73                 	db	115	;'s'
  1329  00FE4B  74                 	db	116	;'t'
  1330  00FE4C  61                 	db	97	;'a'
  1331  00FE4D  72                 	db	114	;'r'
  1332  00FE4E  74                 	db	116	;'t'
  1333  00FE4F  0D                 	db	13
  1334  00FE50  0A                 	db	10
  1335  00FE51  00                 	db	0
  1336  00FE52                     STR_17:
  1337  00FE52  69                 	db	105	;'i'
  1338  00FE53  3A                 	db	58	;':'
  1339  00FE54  20                 	db	32
  1340  00FE55  49                 	db	73	;'I'
  1341  00FE56  6E                 	db	110	;'n'
  1342  00FE57  69                 	db	105	;'i'
  1343  00FE58  74                 	db	116	;'t'
  1344  00FE59  69                 	db	105	;'i'
  1345  00FE5A  61                 	db	97	;'a'
  1346  00FE5B  6C                 	db	108	;'l'
  1347  00FE5C  69                 	db	105	;'i'
  1348  00FE5D  7A                 	db	122	;'z'
  1349  00FE5E  65                 	db	101	;'e'
  1350  00FE5F  20                 	db	32
  1351  00FE60  53                 	db	83	;'S'
  1352  00FE61  44                 	db	68	;'D'
  1353  00FE62  20                 	db	32
  1354  00FE63  63                 	db	99	;'c'
  1355  00FE64  61                 	db	97	;'a'
  1356  00FE65  72                 	db	114	;'r'
  1357  00FE66  64                 	db	100	;'d'
  1358  00FE67  0D                 	db	13
  1359  00FE68  0A                 	db	10
  1360  00FE69  00                 	db	0
  1361  00FE6A                     STR_82:
  1362  00FE6A  53                 	db	83	;'S'
  1363  00FE6B  65                 	db	101	;'e'
  1364  00FE6C  73                 	db	115	;'s'
  1365  00FE6D  73                 	db	115	;'s'
  1366  00FE6E  69                 	db	105	;'i'
  1367  00FE6F  6F                 	db	111	;'o'
  1368  00FE70  6E                 	db	110	;'n'
  1369  00FE71  20                 	db	32
  1370  00FE72  6C                 	db	108	;'l'
  1371  00FE73  6F                 	db	111	;'o'
  1372  00FE74  67                 	db	103	;'g'
  1373  00FE75  67                 	db	103	;'g'
  1374  00FE76  69                 	db	105	;'i'
  1375  00FE77  6E                 	db	110	;'n'
  1376  00FE78  67                 	db	103	;'g'
  1377  00FE79  3A                 	db	58	;':'
  1378  00FE7A  20                 	db	32
  1379  00FE7B  4E                 	db	78	;'N'
  1380  00FE7C  6F                 	db	111	;'o'
  1381  00FE7D  6E                 	db	110	;'n'
  1382  00FE7E  65                 	db	101	;'e'
  1383  00FE7F  0D                 	db	13
  1384  00FE80  0A                 	db	10
  1385  00FE81  00                 	db	0
  1386  00FE82                     STR_15:
  1387  00FE82  7A                 	db	122	;'z'
  1388  00FE83  3A                 	db	58	;':'
  1389  00FE84  20                 	db	32
  1390  00FE85  43                 	db	67	;'C'
  1391  00FE86  6C                 	db	108	;'l'
  1392  00FE87  65                 	db	101	;'e'
  1393  00FE88  61                 	db	97	;'a'
  1394  00FE89  72                 	db	114	;'r'
  1395  00FE8A  20                 	db	32
  1396  00FE8B  74                 	db	116	;'t'
  1397  00FE8C  68                 	db	104	;'h'
  1398  00FE8D  65                 	db	101	;'e'
  1399  00FE8E  20                 	db	32
  1400  00FE8F  74                 	db	116	;'t'
  1401  00FE90  65                 	db	101	;'e'
  1402  00FE91  72                 	db	114	;'r'
  1403  00FE92  6D                 	db	109	;'m'
  1404  00FE93  69                 	db	105	;'i'
  1405  00FE94  6E                 	db	110	;'n'
  1406  00FE95  61                 	db	97	;'a'
  1407  00FE96  6C                 	db	108	;'l'
  1408  00FE97  0D                 	db	13
  1409  00FE98  0A                 	db	10
  1410  00FE99  00                 	db	0
  1411  00FE9A                     STR_91:
  1412  00FE9A  41                 	db	65	;'A'
  1413  00FE9B  43                 	db	67	;'C'
  1414  00FE9C  4D                 	db	77	;'M'
  1415  00FE9D  44                 	db	68	;'D'
  1416  00FE9E  20                 	db	32
  1417  00FE9F  34                 	db	52	;'4'
  1418  00FEA0  31                 	db	49	;'1'
  1419  00FEA1  20                 	db	32
  1420  00FEA2  52                 	db	82	;'R'
  1421  00FEA3  65                 	db	101	;'e'
  1422  00FEA4  73                 	db	115	;'s'
  1423  00FEA5  70                 	db	112	;'p'
  1424  00FEA6  6F                 	db	111	;'o'
  1425  00FEA7  6E                 	db	110	;'n'
  1426  00FEA8  73                 	db	115	;'s'
  1427  00FEA9  65                 	db	101	;'e'
  1428  00FEAA  3A                 	db	58	;':'
  1429  00FEAB  20                 	db	32
  1430  00FEAC  25                 	db	37
  1431  00FEAD  78                 	db	120	;'x'
  1432  00FEAE  0D                 	db	13
  1433  00FEAF  0A                 	db	10
  1434  00FEB0  00                 	db	0
  1435  00FEB1                     STR_90:
  1436  00FEB1  43                 	db	67	;'C'
  1437  00FEB2  4D                 	db	77	;'M'
  1438  00FEB3  44                 	db	68	;'D'
  1439  00FEB4  20                 	db	32
  1440  00FEB5  35                 	db	53	;'5'
  1441  00FEB6  35                 	db	53	;'5'
  1442  00FEB7  20                 	db	32
  1443  00FEB8  52                 	db	82	;'R'
  1444  00FEB9  65                 	db	101	;'e'
  1445  00FEBA  73                 	db	115	;'s'
  1446  00FEBB  70                 	db	112	;'p'
  1447  00FEBC  6F                 	db	111	;'o'
  1448  00FEBD  6E                 	db	110	;'n'
  1449  00FEBE  73                 	db	115	;'s'
  1450  00FEBF  65                 	db	101	;'e'
  1451  00FEC0  3A                 	db	58	;':'
  1452  00FEC1  20                 	db	32
  1453  00FEC2  25                 	db	37
  1454  00FEC3  78                 	db	120	;'x'
  1455  00FEC4  0D                 	db	13
  1456  00FEC5  0A                 	db	10
  1457  00FEC6  00                 	db	0
  1458  00FEC7                     STR_70:
  1459  00FEC7  53                 	db	83	;'S'
  1460  00FEC8  65                 	db	101	;'e'
  1461  00FEC9  6C                 	db	108	;'l'
  1462  00FECA  65                 	db	101	;'e'
  1463  00FECB  63                 	db	99	;'c'
  1464  00FECC  74                 	db	116	;'t'
  1465  00FECD  3A                 	db	58	;':'
  1466  00FECE  20                 	db	32
  1467  00FECF  20                 	db	32
  1468  00FED0  20                 	db	32
  1469  00FED1  20                 	db	32
  1470  00FED2  20                 	db	32
  1471  00FED3  4C                 	db	76	;'L'
  1472  00FED4  6F                 	db	111	;'o'
  1473  00FED5  67                 	db	103	;'g'
  1474  00FED6  67                 	db	103	;'g'
  1475  00FED7  69                 	db	105	;'i'
  1476  00FED8  6E                 	db	110	;'n'
  1477  00FED9  67                 	db	103	;'g'
  1478  00FEDA  0D                 	db	13
  1479  00FEDB  0A                 	db	10
  1480  00FEDC  00                 	db	0
  1481  00FEDD                     STR_89:
  1482  00FEDD  43                 	db	67	;'C'
  1483  00FEDE  4D                 	db	77	;'M'
  1484  00FEDF  44                 	db	68	;'D'
  1485  00FEE0  20                 	db	32
  1486  00FEE1  38                 	db	56	;'8'
  1487  00FEE2  20                 	db	32
  1488  00FEE3  52                 	db	82	;'R'
  1489  00FEE4  65                 	db	101	;'e'
  1490  00FEE5  73                 	db	115	;'s'
  1491  00FEE6  70                 	db	112	;'p'
  1492  00FEE7  6F                 	db	111	;'o'
  1493  00FEE8  6E                 	db	110	;'n'
  1494  00FEE9  73                 	db	115	;'s'
  1495  00FEEA  65                 	db	101	;'e'
  1496  00FEEB  3A                 	db	58	;':'
  1497  00FEEC  20                 	db	32
  1498  00FEED  25                 	db	37
  1499  00FEEE  78                 	db	120	;'x'
  1500  00FEEF  0D                 	db	13
  1501  00FEF0  0A                 	db	10
  1502  00FEF1  00                 	db	0
  1503  00FEF2                     STR_14:
  1504  00FEF2  5A                 	db	90	;'Z'
  1505  00FEF3  3A                 	db	58	;':'
  1506  00FEF4  20                 	db	32
  1507  00FEF5  52                 	db	82	;'R'
  1508  00FEF6  65                 	db	101	;'e'
  1509  00FEF7  73                 	db	115	;'s'
  1510  00FEF8  65                 	db	101	;'e'
  1511  00FEF9  74                 	db	116	;'t'
  1512  00FEFA  20                 	db	32
  1513  00FEFB  70                 	db	112	;'p'
  1514  00FEFC  72                 	db	114	;'r'
  1515  00FEFD  6F                 	db	111	;'o'
  1516  00FEFE  63                 	db	99	;'c'
  1517  00FEFF  65                 	db	101	;'e'
  1518  00FF00  73                 	db	115	;'s'
  1519  00FF01  73                 	db	115	;'s'
  1520  00FF02  6F                 	db	111	;'o'
  1521  00FF03  72                 	db	114	;'r'
  1522  00FF04  0D                 	db	13
  1523  00FF05  0A                 	db	10
  1524  00FF06  00                 	db	0
  1525  00FF07                     STR_1:
  1526  00FF07  44                 	db	68	;'D'
  1527  00FF08  65                 	db	101	;'e'
  1528  00FF09  76                 	db	118	;'v'
  1529  00FF0A  65                 	db	101	;'e'
  1530  00FF0B  6C                 	db	108	;'l'
  1531  00FF0C  6F                 	db	111	;'o'
  1532  00FF0D  70                 	db	112	;'p'
  1533  00FF0E  6D                 	db	109	;'m'
  1534  00FF0F  65                 	db	101	;'e'
  1535  00FF10  6E                 	db	110	;'n'
  1536  00FF11  74                 	db	116	;'t'
  1537  00FF12  20                 	db	32
  1538  00FF13  42                 	db	66	;'B'
  1539  00FF14  6F                 	db	111	;'o'
  1540  00FF15  61                 	db	97	;'a'
  1541  00FF16  72                 	db	114	;'r'
  1542  00FF17  64                 	db	100	;'d'
  1543  00FF18  0D                 	db	13
  1544  00FF19  0A                 	db	10
  1545  00FF1A  00                 	db	0
  1546  00FF1B                     STR_2:
  1547  00FF1B  69                 	db	105	;'i'
  1548  00FF1C  6E                 	db	110	;'n'
  1549  00FF1D  4C                 	db	76	;'L'
  1550  00FF1E  61                 	db	97	;'a'
  1551  00FF1F  62                 	db	98	;'b'
  1552  00FF20  20                 	db	32
  1553  00FF21  30                 	db	48	;'0'
  1554  00FF22  39                 	db	57	;'9'
  1555  00FF23  20                 	db	32
  1556  00FF24  74                 	db	116	;'t'
  1557  00FF25  65                 	db	101	;'e'
  1558  00FF26  72                 	db	114	;'r'
  1559  00FF27  6D                 	db	109	;'m'
  1560  00FF28  69                 	db	105	;'i'
  1561  00FF29  6E                 	db	110	;'n'
  1562  00FF2A  61                 	db	97	;'a'
  1563  00FF2B  6C                 	db	108	;'l'
  1564  00FF2C  0D                 	db	13
  1565  00FF2D  0A                 	db	10
  1566  00FF2E  00                 	db	0
  1567  00FF2F                     STR_73:
  1568  00FF2F  53                 	db	83	;'S'
  1569  00FF30  65                 	db	101	;'e'
  1570  00FF31  6C                 	db	108	;'l'
  1571  00FF32  65                 	db	101	;'e'
  1572  00FF33  63                 	db	99	;'c'
  1573  00FF34  74                 	db	116	;'t'
  1574  00FF35  3A                 	db	58	;':'
  1575  00FF36  20                 	db	32
  1576  00FF37  20                 	db	32
  1577  00FF38  20                 	db	32
  1578  00FF39  20                 	db	32
  1579  00FF3A  20                 	db	32
  1580  00FF3B  41                 	db	65	;'A'
  1581  00FF3C  70                 	db	112	;'p'
  1582  00FF3D  70                 	db	112	;'p'
  1583  00FF3E  6C                 	db	108	;'l'
  1584  00FF3F  79                 	db	121	;'y'
  1585  00FF40  0D                 	db	13
  1586  00FF41  0A                 	db	10
  1587  00FF42  00                 	db	0
  1588  00FF43                     STR_6:
  1589  00FF43  53                 	db	83	;'S'
  1590  00FF44  44                 	db	68	;'D'
  1591  00FF45  20                 	db	32
  1592  00FF46  63                 	db	99	;'c'
  1593  00FF47  61                 	db	97	;'a'
  1594  00FF48  72                 	db	114	;'r'
  1595  00FF49  64                 	db	100	;'d'
  1596  00FF4A  20                 	db	32
  1597  00FF4B  61                 	db	97	;'a'
  1598  00FF4C  64                 	db	100	;'d'
  1599  00FF4D  64                 	db	100	;'d'
  1600  00FF4E  72                 	db	114	;'r'
  1601  00FF4F  65                 	db	101	;'e'
  1602  00FF50  73                 	db	115	;'s'
  1603  00FF51  73                 	db	115	;'s'
  1604  00FF52  3A                 	db	58	;':'
  1605  00FF53  20                 	db	32
  1606  00FF54  20                 	db	32
  1607  00FF55  00                 	db	0
  1608  00FF56                     STR_3:
  1609  00FF56  53                 	db	83	;'S'
  1610  00FF57  44                 	db	68	;'D'
  1611  00FF58  20                 	db	32
  1612  00FF59  63                 	db	99	;'c'
  1613  00FF5A  61                 	db	97	;'a'
  1614  00FF5B  72                 	db	114	;'r'
  1615  00FF5C  64                 	db	100	;'d'
  1616  00FF5D  20                 	db	32
  1617  00FF5E  74                 	db	116	;'t'
  1618  00FF5F  65                 	db	101	;'e'
  1619  00FF60  73                 	db	115	;'s'
  1620  00FF61  74                 	db	116	;'t'
  1621  00FF62  69                 	db	105	;'i'
  1622  00FF63  6E                 	db	110	;'n'
  1623  00FF64  67                 	db	103	;'g'
  1624  00FF65  0D                 	db	13
  1625  00FF66  0A                 	db	10
  1626  00FF67  00                 	db	0
  1627  00FF68                     STR_84:
  1628  00FF68  55                 	db	85	;'U'
  1629  00FF69  6E                 	db	110	;'n'
  1630  00FF6A  6B                 	db	107	;'k'
  1631  00FF6B  6E                 	db	110	;'n'
  1632  00FF6C  6F                 	db	111	;'o'
  1633  00FF6D  77                 	db	119	;'w'
  1634  00FF6E  6E                 	db	110	;'n'
  1635  00FF6F  20                 	db	32
  1636  00FF70  6B                 	db	107	;'k'
  1637  00FF71  65                 	db	101	;'e'
  1638  00FF72  79                 	db	121	;'y'
  1639  00FF73  20                 	db	32
  1640  00FF74  25                 	db	37
  1641  00FF75  63                 	db	99	;'c'
  1642  00FF76  0D                 	db	13
  1643  00FF77  0A                 	db	10
  1644  00FF78  00                 	db	0
  1645  00FF79                     STR_40:
  1646  00FF79  20                 	db	32
  1647  00FF7A  20                 	db	32
  1648  00FF7B  20                 	db	32
  1649  00FF7C  20                 	db	32
  1650  00FF7D  41                 	db	65	;'A'
  1651  00FF7E  64                 	db	100	;'d'
  1652  00FF7F  64                 	db	100	;'d'
  1653  00FF80  72                 	db	114	;'r'
  1654  00FF81  65                 	db	101	;'e'
  1655  00FF82  73                 	db	115	;'s'
  1656  00FF83  73                 	db	115	;'s'
  1657  00FF84  3A                 	db	58	;':'
  1658  00FF85  20                 	db	32
  1659  00FF86  20                 	db	32
  1660  00FF87  20                 	db	32
  1661  00FF88  20                 	db	32
  1662  00FF89  00                 	db	0
  1663  00FF8A                     STR_39:
  1664  00FF8A  52                 	db	82	;'R'
  1665  00FF8B  65                 	db	101	;'e'
  1666  00FF8C  61                 	db	97	;'a'
  1667  00FF8D  64                 	db	100	;'d'
  1668  00FF8E  20                 	db	32
  1669  00FF8F  62                 	db	98	;'b'
  1670  00FF90  6C                 	db	108	;'l'
  1671  00FF91  6F                 	db	111	;'o'
  1672  00FF92  63                 	db	99	;'c'
  1673  00FF93  6B                 	db	107	;'k'
  1674  00FF94  3A                 	db	58	;':'
  1675  00FF95  20                 	db	32
  1676  00FF96  0D                 	db	13
  1677  00FF97  0A                 	db	10
  1678  00FF98  00                 	db	0
  1679  00FF99                     STR_45:
  1680  00FF99  57                 	db	87	;'W'
  1681  00FF9A  72                 	db	114	;'r'
  1682  00FF9B  69                 	db	105	;'i'
  1683  00FF9C  74                 	db	116	;'t'
  1684  00FF9D  65                 	db	101	;'e'
  1685  00FF9E  20                 	db	32
  1686  00FF9F  62                 	db	98	;'b'
  1687  00FFA0  6C                 	db	108	;'l'
  1688  00FFA1  6F                 	db	111	;'o'
  1689  00FFA2  63                 	db	99	;'c'
  1690  00FFA3  6B                 	db	107	;'k'
  1691  00FFA4  3A                 	db	58	;':'
  1692  00FFA5  0D                 	db	13
  1693  00FFA6  0A                 	db	10
  1694  00FFA7  00                 	db	0
  1695  00FFA8                     STR_12:
  1696  00FFA8  3F                 	db	63	;'?'
  1697  00FFA9  3A                 	db	58	;':'
  1698  00FFAA  20                 	db	32
  1699  00FFAB  68                 	db	104	;'h'
  1700  00FFAC  65                 	db	101	;'e'
  1701  00FFAD  6C                 	db	108	;'l'
  1702  00FFAE  70                 	db	112	;'p'
  1703  00FFAF  20                 	db	32
  1704  00FFB0  6D                 	db	109	;'m'
  1705  00FFB1  65                 	db	101	;'e'
  1706  00FFB2  6E                 	db	110	;'n'
  1707  00FFB3  75                 	db	117	;'u'
  1708  00FFB4  0D                 	db	13
  1709  00FFB5  0A                 	db	10
  1710  00FFB6  00                 	db	0
  1711  00FFB7                     STR_32:
  1712  00FFB7  44                 	db	68	;'D'
  1713  00FFB8  65                 	db	101	;'e'
  1714  00FFB9  63                 	db	99	;'c'
  1715  00FFBA  72                 	db	114	;'r'
  1716  00FFBB  65                 	db	101	;'e'
  1717  00FFBC  61                 	db	97	;'a'
  1718  00FFBD  73                 	db	115	;'s'
  1719  00FFBE  65                 	db	101	;'e'
  1720  00FFBF  64                 	db	100	;'d'
  1721  00FFC0  20                 	db	32
  1722  00FFC1  00                 	db	0
  1723  00FFC2                     STR_33:
  1724  00FFC2  49                 	db	73	;'I'
  1725  00FFC3  6E                 	db	110	;'n'
  1726  00FFC4  63                 	db	99	;'c'
  1727  00FFC5  72                 	db	114	;'r'
  1728  00FFC6  65                 	db	101	;'e'
  1729  00FFC7  61                 	db	97	;'a'
  1730  00FFC8  73                 	db	115	;'s'
  1731  00FFC9  65                 	db	101	;'e'
  1732  00FFCA  64                 	db	100	;'d'
  1733  00FFCB  20                 	db	32
  1734  00FFCC  00                 	db	0
  1735  00FFCD                     STR_27:
  1736  00FFCD  6F                 	db	111	;'o'
  1737  00FFCE  3A                 	db	58	;':'
  1738  00FFCF  09                 	db	9
  1739  00FFD0  6F                 	db	111	;'o'
  1740  00FFD1  6B                 	db	107	;'k'
  1741  00FFD2  0D                 	db	13
  1742  00FFD3  0A                 	db	10
  1743  00FFD4  00                 	db	0
  1744  00FFD5                     STR_13:
  1745  00FFD5  6F                 	db	111	;'o'
  1746  00FFD6  3A                 	db	58	;':'
  1747  00FFD7  20                 	db	32
  1748  00FFD8  6B                 	db	107	;'k'
  1749  00FFD9  0D                 	db	13
  1750  00FFDA  0A                 	db	10
  1751  00FFDB  00                 	db	0
  1752  00FFDC                     STR_101:
  1753  00FFDC  25                 	db	37
  1754  00FFDD  30                 	db	48	;'0'
  1755  00FFDE  32                 	db	50	;'2'
  1756  00FFDF  78                 	db	120	;'x'
  1757  00FFE0  20                 	db	32
  1758  00FFE1  00                 	db	0
  1759  00FFE2                     STR_75:
  1760  00FFE2  25                 	db	37
  1761  00FFE3  64                 	db	100	;'d'
  1762  00FFE4  0D                 	db	13
  1763  00FFE5  0A                 	db	10
  1764  00FFE6  00                 	db	0
  1765  00FFE7                     STR_4:
  1766  00FFE7  0D                 	db	13
  1767  00FFE8  0A                 	db	10
  1768  00FFE9  3E                 	db	62	;'>'
  1769  00FFEA  20                 	db	32
  1770  00FFEB  00                 	db	0
  1771  00FFEC                     STR_7:
  1772  00FFEC  25                 	db	37
  1773  00FFED  30                 	db	48	;'0'
  1774  00FFEE  34                 	db	52	;'4'
  1775  00FFEF  78                 	db	120	;'x'
  1776  00FFF0  00                 	db	0
  1777  00FFF1                     STR_95:
  1778  00FFF1  0D                 	db	13
  1779  00FFF2  0A                 	db	10
  1780  00FFF3  0A                 	db	10
  1781  00FFF4  00                 	db	0
  1782  00FFF5                     STR_99:
  1783  00FFF5  25                 	db	37
  1784  00FFF6  63                 	db	99	;'c'
  1785  00FFF7  00                 	db	0
  1786  00FFF8                     STR_87:
  1787  00FFF8  25                 	db	37
  1788  00FFF9  78                 	db	120	;'x'
  1789  00FFFA  00                 	db	0
  1790  00FFFB                     STR_98:
  1791  00FFFB  2E                 	db	46
  1792  00FFFC  00                 	db	0
  1793  00FFFD                     STR_8:
  1794  00FFFD  3A                 	db	58	;':'
  1795  00FFFE  00                 	db	0
  1796  0000                     
  1797                           ; #config settings
  1798  00FFFF  00                 	db	0	; dummy byte at the end
  1799  0000                     
  1800                           	psect	cinit
  1801  0021E8                     __pcinit:
  1802                           	opt callstack 0
  1803  0021E8                     start_initialization:
  1804                           	opt callstack 0
  1805  0021E8                     __initialization:
  1806                           	opt callstack 0
  1807                           
  1808                           ; Initialize objects allocated to BANK0 (2 bytes)
  1809                           ; load TBLPTR registers with __pidataBANK0
  1810  0021E8  0E84               	movlw	low __pidataBANK0
  1811  0021EA  6EF6               	movwf	tblptrl,c
  1812  0021EC  0E27               	movlw	high __pidataBANK0
  1813  0021EE  6EF7               	movwf	tblptrh,c
  1814  0021F0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1815  0021F2  6EF8               	movwf	tblptru,c
  1816  0021F4  0009               	tblrd		*+	;fetch initializer
  1817  0021F6  CFF5 F0F2          	movff	tablat,__pdataBANK0
  1818  0021FA  0009               	tblrd		*+	;fetch initializer
  1819  0021FC  CFF5 F0F3          	movff	tablat,__pdataBANK0+1
  1820                           
  1821                           ; Initialize objects allocated to COMRAM (1 bytes)
  1822                           ; load TBLPTR registers with __pidataCOMRAM
  1823  002200  0E88               	movlw	low __pidataCOMRAM
  1824  002202  6EF6               	movwf	tblptrl,c
  1825  002204  0E27               	movlw	high __pidataCOMRAM
  1826  002206  6EF7               	movwf	tblptrh,c
  1827  002208  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1828  00220A  6EF8               	movwf	tblptru,c
  1829  00220C  0009               	tblrd		*+	;fetch initializer
  1830  00220E  CFF5 F04E          	movff	tablat,__pdataCOMRAM
  1831                           
  1832                           ; Clear objects allocated to BIGRAM (1024 bytes)
  1833  002212  EE00  F0F4         	lfsr	0,__pbssBIGRAM
  1834  002216  EE14 F000          	lfsr	1,1024
  1835  00221A                     clear_0:
  1836  00221A  6AEE               	clrf	postinc0,c
  1837  00221C  50E5               	movf	postdec1,w,c
  1838  00221E  50E1               	movf	fsr1l,w,c
  1839  002220  E1FC               	bnz	clear_0
  1840  002222  50E2               	movf	fsr1h,w,c
  1841  002224  E1FA               	bnz	clear_0
  1842                           
  1843                           ; Clear objects allocated to BANK0 (44 bytes)
  1844  002226  EE00  F0C6         	lfsr	0,__pbssBANK0
  1845  00222A  0E2C               	movlw	44
  1846  00222C                     clear_1:
  1847  00222C  6AEE               	clrf	postinc0,c
  1848  00222E  06E8               	decf	wreg,f,c
  1849  002230  E1FD               	bnz	clear_1
  1850                           
  1851                           ; Clear objects allocated to COMRAM (14 bytes)
  1852  002232  EE00  F040         	lfsr	0,__pbssCOMRAM
  1853  002236  0E0E               	movlw	14
  1854  002238                     clear_2:
  1855  002238  6AEE               	clrf	postinc0,c
  1856  00223A  06E8               	decf	wreg,f,c
  1857  00223C  E1FD               	bnz	clear_2
  1858  00223E                     end_of_initialization:
  1859                           	opt callstack 0
  1860  00223E                     __end_of__initialization:
  1861                           	opt callstack 0
  1862  00223E  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1863  002240  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1864  002242  0100               	movlb	0
  1865  002244  EF29  F000         	goto	_main	;jump to C main() function
  1866                           
  1867                           	psect	bssCOMRAM
  1868  000040                     __pbssCOMRAM:
  1869                           	opt callstack 0
  1870  000040                     _width:
  1871                           	opt callstack 0
  1872  000040                     	ds	2
  1873  000042                     _prec:
  1874                           	opt callstack 0
  1875  000042                     	ds	2
  1876  000044                     _flags:
  1877                           	opt callstack 0
  1878  000044                     	ds	2
  1879  000046                     myTMR0ISR@bufferIndex:
  1880                           	opt callstack 0
  1881  000046                     	ds	2
  1882  000048                     _timer0ReloadVal:
  1883                           	opt callstack 0
  1884  000048                     	ds	2
  1885  00004A                     _TMR0_InterruptHandler:
  1886                           	opt callstack 0
  1887  00004A                     	ds	2
  1888  00004C                     _collectSamples:
  1889                           	opt callstack 0
  1890  00004C                     	ds	1
  1891  00004D                     _eusart1RxLastError:
  1892                           	opt callstack 0
  1893  00004D                     	ds	1
  1894                           
  1895                           	psect	dataCOMRAM
  1896  00004E                     __pdataCOMRAM:
  1897                           	opt callstack 0
  1898  00004E                     myTMR0ISR@activeBuffer:
  1899                           	opt callstack 0
  1900  00004E                     	ds	1
  1901                           
  1902                           	psect	bssBANK0
  1903  0000C6                     __pbssBANK0:
  1904                           	opt callstack 0
  1905  0000C6                     _nout:
  1906                           	opt callstack 0
  1907  0000C6                     	ds	2
  1908  0000C8                     _ADC_InterruptHandler:
  1909                           	opt callstack 0
  1910  0000C8                     	ds	2
  1911  0000CA                     _EUSART1_ErrorHandler:
  1912                           	opt callstack 0
  1913  0000CA                     	ds	2
  1914  0000CC                     _EUSART1_OverrunErrorHandler:
  1915                           	opt callstack 0
  1916  0000CC                     	ds	2
  1917  0000CE                     _EUSART1_FramingErrorHandler:
  1918                           	opt callstack 0
  1919  0000CE                     	ds	2
  1920  0000D0                     _blueBufferFull:
  1921                           	opt callstack 0
  1922  0000D0                     	ds	1
  1923  0000D1                     _redBufferFull:
  1924                           	opt callstack 0
  1925  0000D1                     	ds	1
  1926  0000D2                     _dbuf:
  1927                           	opt callstack 0
  1928  0000D2                     	ds	32
  1929                           
  1930                           	psect	dataBANK0
  1931  0000F2                     __pdataBANK0:
  1932                           	opt callstack 0
  1933  0000F2                     _sampleRate:
  1934                           	opt callstack 0
  1935  0000F2                     	ds	2
  1936                           
  1937                           	psect	bssBIGRAM
  1938  0000F4                     __pbssBIGRAM:
  1939                           	opt callstack 0
  1940  0000F4                     _sdCardBufferBlue:
  1941                           	opt callstack 0
  1942  0000F4                     	ds	512
  1943  0002F4                     _sdCardBufferRed:
  1944                           	opt callstack 0
  1945  0002F4                     	ds	512
  1946                           
  1947                           	psect	cstackBANK0
  1948  000060                     __pcstackBANK0:
  1949                           	opt callstack 0
  1950  000060                     ??_xtoa:
  1951  000060                     _dtoa$1353:
  1952                           	opt callstack 0
  1953                           
  1954                           ; 2 bytes @ 0x0
  1955  000060                     	ds	2
  1956  000062                     dtoa@p:
  1957                           	opt callstack 0
  1958                           
  1959                           ; 2 bytes @ 0x2
  1960  000062                     	ds	2
  1961  000064                     dtoa@w:
  1962                           	opt callstack 0
  1963                           
  1964                           ; 2 bytes @ 0x4
  1965  000064                     	ds	2
  1966  000066                     dtoa@s:
  1967                           	opt callstack 0
  1968                           
  1969                           ; 2 bytes @ 0x6
  1970  000066                     	ds	2
  1971  000068                     _xtoa$1363:
  1972                           	opt callstack 0
  1973  000068                     dtoa@n:
  1974                           	opt callstack 0
  1975                           
  1976                           ; 8 bytes @ 0x8
  1977  000068                     	ds	2
  1978  00006A                     _xtoa$1364:
  1979                           	opt callstack 0
  1980                           
  1981                           ; 2 bytes @ 0xA
  1982  00006A                     	ds	2
  1983  00006C                     xtoa@p:
  1984                           	opt callstack 0
  1985                           
  1986                           ; 2 bytes @ 0xC
  1987  00006C                     	ds	2
  1988  00006E                     xtoa@w:
  1989                           	opt callstack 0
  1990                           
  1991                           ; 2 bytes @ 0xE
  1992  00006E                     	ds	2
  1993  000070                     dtoa@i:
  1994                           	opt callstack 0
  1995  000070                     xtoa@n:
  1996                           	opt callstack 0
  1997                           
  1998                           ; 8 bytes @ 0x10
  1999  000070                     	ds	8
  2000  000078                     xtoa@i:
  2001                           	opt callstack 0
  2002                           
  2003                           ; 2 bytes @ 0x18
  2004  000078                     	ds	2
  2005  00007A                     xtoa@c:
  2006                           	opt callstack 0
  2007                           
  2008                           ; 2 bytes @ 0x1A
  2009  00007A                     	ds	2
  2010  00007C                     ?_vfpfcnvrt:
  2011                           	opt callstack 0
  2012  00007C                     vfpfcnvrt@fp:
  2013                           	opt callstack 0
  2014                           
  2015                           ; 2 bytes @ 0x1C
  2016  00007C                     	ds	2
  2017  00007E                     vfpfcnvrt@fmt:
  2018                           	opt callstack 0
  2019                           
  2020                           ; 2 bytes @ 0x1E
  2021  00007E                     	ds	2
  2022  000080                     vfpfcnvrt@ap:
  2023                           	opt callstack 0
  2024                           
  2025                           ; 2 bytes @ 0x20
  2026  000080                     	ds	2
  2027  000082                     ??_vfpfcnvrt:
  2028                           
  2029                           ; 1 bytes @ 0x22
  2030  000082                     	ds	4
  2031  000086                     vfpfcnvrt@ll:
  2032                           	opt callstack 0
  2033                           
  2034                           ; 8 bytes @ 0x26
  2035  000086                     	ds	8
  2036  00008E                     vfpfcnvrt@llu:
  2037                           	opt callstack 0
  2038                           
  2039                           ; 8 bytes @ 0x2E
  2040  00008E                     	ds	8
  2041  000096                     vfpfcnvrt@done:
  2042                           	opt callstack 0
  2043                           
  2044                           ; 2 bytes @ 0x36
  2045  000096                     	ds	2
  2046  000098                     _vfpfcnvrt$1378:
  2047                           	opt callstack 0
  2048                           
  2049                           ; 2 bytes @ 0x38
  2050  000098                     	ds	2
  2051  00009A                     vfpfcnvrt@c:
  2052                           	opt callstack 0
  2053                           
  2054                           ; 1 bytes @ 0x3A
  2055  00009A                     	ds	1
  2056  00009B                     ?_vfprintf:
  2057                           	opt callstack 0
  2058  00009B                     vfprintf@fp:
  2059                           	opt callstack 0
  2060                           
  2061                           ; 2 bytes @ 0x3B
  2062  00009B                     	ds	2
  2063  00009D                     vfprintf@fmt:
  2064                           	opt callstack 0
  2065                           
  2066                           ; 2 bytes @ 0x3D
  2067  00009D                     	ds	2
  2068  00009F                     vfprintf@ap:
  2069                           	opt callstack 0
  2070                           
  2071                           ; 2 bytes @ 0x3F
  2072  00009F                     	ds	2
  2073  0000A1                     vfprintf@cfmt:
  2074                           	opt callstack 0
  2075                           
  2076                           ; 2 bytes @ 0x41
  2077  0000A1                     	ds	2
  2078  0000A3                     ?_printf:
  2079                           	opt callstack 0
  2080  0000A3                     printf@fmt:
  2081                           	opt callstack 0
  2082                           
  2083                           ; 2 bytes @ 0x43
  2084  0000A3                     	ds	8
  2085  0000AB                     printf@ap:
  2086                           	opt callstack 0
  2087                           
  2088                           ; 2 bytes @ 0x4B
  2089  0000AB                     	ds	2
  2090  0000AD                     SDCARD_SetIdle@verbose:
  2091                           	opt callstack 0
  2092  0000AD                     hexDumpBuffer@sdCardBuffer:
  2093                           	opt callstack 0
  2094                           
  2095                           ; 2 bytes @ 0x4D
  2096  0000AD                     	ds	1
  2097  0000AE                     SDCARD_SetIdle@response:
  2098                           	opt callstack 0
  2099                           
  2100                           ; 1 bytes @ 0x4E
  2101  0000AE                     	ds	1
  2102  0000AF                     ??_hexDumpBuffer:
  2103  0000AF                     SDCARD_SetIdle@i:
  2104                           	opt callstack 0
  2105                           
  2106                           ; 2 bytes @ 0x4F
  2107  0000AF                     	ds	2
  2108  0000B1                     ??_SDCARD_HCInitialize:
  2109  0000B1                     hexDumpBuffer@j:
  2110                           	opt callstack 0
  2111                           
  2112                           ; 2 bytes @ 0x51
  2113  0000B1                     	ds	1
  2114  0000B2                     SDCARD_HCInitialize@verbose:
  2115                           	opt callstack 0
  2116                           
  2117                           ; 1 bytes @ 0x52
  2118  0000B2                     	ds	1
  2119  0000B3                     SDCARD_HCInitialize@i:
  2120                           	opt callstack 0
  2121  0000B3                     hexDumpBuffer@j_1271:
  2122                           	opt callstack 0
  2123                           
  2124                           ; 2 bytes @ 0x53
  2125  0000B3                     	ds	2
  2126  0000B5                     SDCARD_HCInitialize@response:
  2127                           	opt callstack 0
  2128  0000B5                     hexDumpBuffer@i:
  2129                           	opt callstack 0
  2130                           
  2131                           ; 2 bytes @ 0x55
  2132  0000B5                     	ds	2
  2133  0000B7                     ??_main:
  2134                           
  2135                           ; 1 bytes @ 0x57
  2136  0000B7                     	ds	3
  2137  0000BA                     main@status:
  2138                           	opt callstack 0
  2139                           
  2140                           ; 1 bytes @ 0x5A
  2141  0000BA                     	ds	1
  2142  0000BB                     main@recordedBlocks:
  2143                           	opt callstack 0
  2144                           
  2145                           ; 1 bytes @ 0x5B
  2146  0000BB                     	ds	1
  2147  0000BC                     main@readBlocks:
  2148                           	opt callstack 0
  2149                           
  2150                           ; 1 bytes @ 0x5C
  2151  0000BC                     	ds	1
  2152  0000BD                     main@j:
  2153                           	opt callstack 0
  2154                           
  2155                           ; 2 bytes @ 0x5D
  2156  0000BD                     	ds	2
  2157  0000BF                     main@cmd:
  2158                           	opt callstack 0
  2159                           
  2160                           ; 1 bytes @ 0x5F
  2161  0000BF                     	ds	1
  2162  0000C0                     main@i:
  2163                           	opt callstack 0
  2164                           
  2165                           ; 2 bytes @ 0x60
  2166  0000C0                     	ds	2
  2167  0000C2                     main@sdCardAddress:
  2168                           	opt callstack 0
  2169                           
  2170                           ; 4 bytes @ 0x62
  2171  0000C2                     	ds	4
  2172                           
  2173                           	psect	cstackCOMRAM
  2174  000001                     __pcstackCOMRAM:
  2175                           	opt callstack 0
  2176  000001                     ?_TMR0_ReadTimer:
  2177                           	opt callstack 0
  2178                           
  2179                           ; 2 bytes @ 0x0
  2180  000001                     	ds	2
  2181  000003                     ??_TMR0_ReadTimer:
  2182                           
  2183                           ; 1 bytes @ 0x2
  2184  000003                     	ds	2
  2185  000005                     TMR0_ReadTimer@readVal:
  2186                           	opt callstack 0
  2187                           
  2188                           ; 2 bytes @ 0x4
  2189  000005                     	ds	2
  2190  000007                     TMR0_ReadTimer@readValLow:
  2191                           	opt callstack 0
  2192                           
  2193                           ; 1 bytes @ 0x6
  2194  000007                     	ds	1
  2195  000008                     TMR0_ReadTimer@readValHigh:
  2196                           	opt callstack 0
  2197                           
  2198                           ; 1 bytes @ 0x7
  2199  000008                     	ds	1
  2200  000009                     i2TMR0_WriteTimer@timerVal:
  2201                           	opt callstack 0
  2202                           
  2203                           ; 2 bytes @ 0x8
  2204  000009                     	ds	2
  2205  00000B                     ??_myTMR0ISR:
  2206  00000B                     
  2207                           ; 1 bytes @ 0xA
  2208  00000B                     	ds	2
  2209  00000D                     ??_INTERRUPT_InterruptManager:
  2210                           
  2211                           ; 1 bytes @ 0xC
  2212  00000D                     	ds	4
  2213  000011                     ??_SPI2_Open:
  2214  000011                     ?_strlen:
  2215                           	opt callstack 0
  2216  000011                     ?_isupper:
  2217                           	opt callstack 0
  2218  000011                     ?_isalpha:
  2219                           	opt callstack 0
  2220  000011                     ?_isdigit:
  2221                           	opt callstack 0
  2222  000011                     ?_isspace:
  2223                           	opt callstack 0
  2224  000011                     ?_islower:
  2225                           	opt callstack 0
  2226  000011                     ?___wmul:
  2227                           	opt callstack 0
  2228  000011                     ?___aodiv:
  2229                           	opt callstack 0
  2230  000011                     ?___aomod:
  2231                           	opt callstack 0
  2232  000011                     SPI2_ExchangeByte@data:
  2233                           	opt callstack 0
  2234  000011                     EUSART1_Write@txData:
  2235                           	opt callstack 0
  2236  000011                     TMR0_WriteTimer@timerVal:
  2237                           	opt callstack 0
  2238  000011                     TMR0_SetInterruptHandler@InterruptHandler:
  2239                           	opt callstack 0
  2240  000011                     EUSART1_SetFramingErrorHandler@interruptHandler:
  2241                           	opt callstack 0
  2242  000011                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  2243                           	opt callstack 0
  2244  000011                     EUSART1_SetErrorHandler@interruptHandler:
  2245                           	opt callstack 0
  2246  000011                     ___wmul@multiplier:
  2247                           	opt callstack 0
  2248  000011                     isalpha@c:
  2249                           	opt callstack 0
  2250  000011                     isdigit@c:
  2251                           	opt callstack 0
  2252  000011                     isspace@c:
  2253                           	opt callstack 0
  2254  000011                     isupper@c:
  2255                           	opt callstack 0
  2256  000011                     strlen@s:
  2257                           	opt callstack 0
  2258  000011                     islower@c:
  2259                           	opt callstack 0
  2260  000011                     ___aodiv@dividend:
  2261                           	opt callstack 0
  2262  000011                     ___aomod@dividend:
  2263                           	opt callstack 0
  2264                           
  2265                           ; 8 bytes @ 0x10
  2266  000011                     	ds	1
  2267  000012                     SPI2_Open@spi2UniqueConfiguration:
  2268                           	opt callstack 0
  2269  000012                     putch@txData:
  2270                           	opt callstack 0
  2271  000012                     SDCARD_PollWriteComplete@status:
  2272                           	opt callstack 0
  2273  000012                     SDCARD_ReadBlock@addr:
  2274                           	opt callstack 0
  2275  000012                     SDCARD_WriteBlock@addr:
  2276                           	opt callstack 0
  2277                           
  2278                           ; 4 bytes @ 0x11
  2279  000012                     	ds	1
  2280  000013                     ??_isupper:
  2281  000013                     ??_isalpha:
  2282  000013                     ??_isdigit:
  2283  000013                     ??_isspace:
  2284  000013                     ??_islower:
  2285  000013                     ??_TMR0_Initialize:
  2286  000013                     ___wmul@multiplicand:
  2287                           	opt callstack 0
  2288  000013                     fputc@c:
  2289                           	opt callstack 0
  2290  000013                     strlen@a:
  2291                           	opt callstack 0
  2292                           
  2293                           ; 2 bytes @ 0x12
  2294  000013                     	ds	2
  2295  000015                     ___wmul@product:
  2296                           	opt callstack 0
  2297  000015                     fputc@fp:
  2298                           	opt callstack 0
  2299                           
  2300                           ; 2 bytes @ 0x14
  2301  000015                     	ds	1
  2302  000016                     SDCARD_ReadBlock@sdCardBuffer:
  2303                           	opt callstack 0
  2304  000016                     SDCARD_WriteBlock@sdCardBuffer:
  2305                           	opt callstack 0
  2306                           
  2307                           ; 2 bytes @ 0x15
  2308  000016                     	ds	1
  2309  000017                     ??_fputc:
  2310  000017                     ?_toupper:
  2311                           	opt callstack 0
  2312  000017                     _isspace$1864:
  2313                           	opt callstack 0
  2314  000017                     toupper@c:
  2315                           	opt callstack 0
  2316                           
  2317                           ; 2 bytes @ 0x16
  2318  000017                     	ds	1
  2319  000018                     ?_atoi:
  2320                           	opt callstack 0
  2321  000018                     SDCARD_ReadBlock@i:
  2322                           	opt callstack 0
  2323  000018                     SDCARD_WriteBlock@i:
  2324                           	opt callstack 0
  2325  000018                     atoi@s:
  2326                           	opt callstack 0
  2327                           
  2328                           ; 2 bytes @ 0x17
  2329  000018                     	ds	1
  2330  000019                     ??_toupper:
  2331  000019                     ___aodiv@divisor:
  2332                           	opt callstack 0
  2333  000019                     ___aomod@divisor:
  2334                           	opt callstack 0
  2335                           
  2336                           ; 8 bytes @ 0x18
  2337  000019                     	ds	1
  2338  00001A                     ??_atoi:
  2339                           
  2340                           ; 1 bytes @ 0x19
  2341  00001A                     	ds	2
  2342  00001C                     fputs@s:
  2343                           	opt callstack 0
  2344                           
  2345                           ; 2 bytes @ 0x1B
  2346  00001C                     	ds	1
  2347  00001D                     _toupper$1929:
  2348                           	opt callstack 0
  2349                           
  2350                           ; 2 bytes @ 0x1C
  2351  00001D                     	ds	1
  2352  00001E                     atoi@neg:
  2353                           	opt callstack 0
  2354  00001E                     fputs@fp:
  2355                           	opt callstack 0
  2356                           
  2357                           ; 2 bytes @ 0x1D
  2358  00001E                     	ds	2
  2359  000020                     fputs@c:
  2360                           	opt callstack 0
  2361  000020                     _atoi$1837:
  2362                           	opt callstack 0
  2363                           
  2364                           ; 2 bytes @ 0x1F
  2365  000020                     	ds	1
  2366  000021                     ___aodiv@counter:
  2367                           	opt callstack 0
  2368  000021                     ___aomod@counter:
  2369                           	opt callstack 0
  2370  000021                     fputs@i:
  2371                           	opt callstack 0
  2372                           
  2373                           ; 2 bytes @ 0x20
  2374  000021                     	ds	1
  2375  000022                     ___aodiv@sign:
  2376                           	opt callstack 0
  2377  000022                     ___aomod@sign:
  2378                           	opt callstack 0
  2379  000022                     _atoi$1839:
  2380                           	opt callstack 0
  2381                           
  2382                           ; 2 bytes @ 0x21
  2383  000022                     	ds	1
  2384  000023                     ?_abs:
  2385                           	opt callstack 0
  2386  000023                     ?_pad:
  2387                           	opt callstack 0
  2388  000023                     pad@fp:
  2389                           	opt callstack 0
  2390  000023                     abs@a:
  2391                           	opt callstack 0
  2392  000023                     ___aodiv@quotient:
  2393                           	opt callstack 0
  2394                           
  2395                           ; 8 bytes @ 0x22
  2396  000023                     	ds	1
  2397  000024                     _atoi$1838:
  2398                           	opt callstack 0
  2399                           
  2400                           ; 1 bytes @ 0x23
  2401  000024                     	ds	1
  2402  000025                     ??_abs:
  2403  000025                     pad@buf:
  2404                           	opt callstack 0
  2405  000025                     atoi@n:
  2406                           	opt callstack 0
  2407                           
  2408                           ; 2 bytes @ 0x24
  2409  000025                     	ds	2
  2410  000027                     pad@p:
  2411                           	opt callstack 0
  2412                           
  2413                           ; 2 bytes @ 0x26
  2414  000027                     	ds	2
  2415  000029                     ??_pad:
  2416                           
  2417                           ; 1 bytes @ 0x28
  2418  000029                     	ds	1
  2419  00002A                     pad@i:
  2420                           	opt callstack 0
  2421                           
  2422                           ; 2 bytes @ 0x29
  2423  00002A                     	ds	2
  2424  00002C                     pad@w:
  2425                           	opt callstack 0
  2426                           
  2427                           ; 2 bytes @ 0x2B
  2428  00002C                     	ds	2
  2429  00002E                     ?_ctoa:
  2430                           	opt callstack 0
  2431  00002E                     ?_dtoa:
  2432                           	opt callstack 0
  2433  00002E                     ?_xtoa:
  2434                           	opt callstack 0
  2435  00002E                     ctoa@fp:
  2436                           	opt callstack 0
  2437  00002E                     dtoa@fp:
  2438                           	opt callstack 0
  2439  00002E                     xtoa@fp:
  2440                           	opt callstack 0
  2441                           
  2442                           ; 2 bytes @ 0x2D
  2443  00002E                     	ds	2
  2444  000030                     ctoa@c:
  2445                           	opt callstack 0
  2446  000030                     dtoa@d:
  2447                           	opt callstack 0
  2448  000030                     xtoa@d:
  2449                           	opt callstack 0
  2450                           
  2451                           ; 8 bytes @ 0x2F
  2452  000030                     	ds	1
  2453  000031                     ctoa@w:
  2454                           	opt callstack 0
  2455                           
  2456                           ; 2 bytes @ 0x30
  2457  000031                     	ds	7
  2458  000038                     ??_dtoa:
  2459  000038                     xtoa@x:
  2460                           	opt callstack 0
  2461                           
  2462                           ; 1 bytes @ 0x37
  2463  000038                     	ds	8
  2464  000040                     
  2465                           ; 1 bytes @ 0x3F
  2466 ;;
  2467 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2468 ;;
  2469 ;; *************** function _main *****************
  2470 ;; Defined at:
  2471 ;;		line 45 in file "main.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  sdCardAddres    4   98[BANK0 ] unsigned long 
  2476 ;;  i               2   96[BANK0 ] unsigned short 
  2477 ;;  j               2   93[BANK0 ] unsigned short 
  2478 ;;  cmd             1   95[BANK0 ] unsigned char 
  2479 ;;  readBlocks      1   92[BANK0 ] unsigned char 
  2480 ;;  recordedBloc    1   91[BANK0 ] unsigned char 
  2481 ;;  status          1   90[BANK0 ] unsigned char 
  2482 ;;  letter          1    0        unsigned char 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  1    wreg      void 
  2485 ;; Registers used:
  2486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;Total ram usage:       15 bytes
  2497 ;; Hardware stack levels required when called:   15
  2498 ;; This function calls:
  2499 ;;		_EUSART1_Read
  2500 ;;		_EUSART1_is_rx_ready
  2501 ;;		_SDCARD_HCInitialize
  2502 ;;		_SDCARD_PollWriteComplete
  2503 ;;		_SDCARD_ReadBlock
  2504 ;;		_SDCARD_WriteBlock
  2505 ;;		_SPI2_Close
  2506 ;;		_SPI2_Open
  2507 ;;		_SYSTEM_Initialize
  2508 ;;		_TMR0_SetInterruptHandler
  2509 ;;		_TMR0_WriteTimer
  2510 ;;		_hexDumpBuffer
  2511 ;;		_printf
  2512 ;; This function is called by:
  2513 ;;		Startup code after reset
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text0
  2518  000052                     __ptext0:
  2519                           	opt callstack 0
  2520  000052                     _main:
  2521                           	opt callstack 16
  2522  000052                     
  2523                           ;main.c: 47:     TMR0_SetInterruptHandler(myTMR0ISR);;main.c: 48: ;main.c: 49:     (INTC
      +                          ONbits.GIE = 1);;main.c: 50:     (INTCONbits.PEIE = 1);
  2524  000052  0E00               	movlw	0
  2525  000054  0100               	movlb	0	; () banked
  2526  000056  6FC2               	movwf	main@sdCardAddress& (0+255),b
  2527  000058  0E00               	movlw	0
  2528  00005A  6FC3               	movwf	(main@sdCardAddress+1)& (0+255),b
  2529  00005C  0E00               	movlw	0
  2530  00005E  6FC4               	movwf	(main@sdCardAddress+2)& (0+255),b
  2531  000060  0E00               	movlw	0
  2532  000062  6FC5               	movwf	(main@sdCardAddress+3)& (0+255),b
  2533  000064                     
  2534                           ; BSR set to: 0
  2535                           ;main.c: 54:     printf("SD card testing\r\n");;main.c: 55:  printf("\r\n> ");;main.c: 5
      +                          7:  for(;;) {
  2536  000064  EC39  F013         	call	_SYSTEM_Initialize	;wreg free
  2537  000068  888A               	bsf	138,4,c	;volatile
  2538  00006A                     
  2539                           ;main.c: 61:    switch (cmd) {
  2540  00006A  0E00               	movlw	0
  2541  00006C  6E12               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  2542  00006E  0E00               	movlw	0
  2543  000070  6E11               	movwf	TMR0_WriteTimer@timerVal^0,c
  2544  000072  EC9B  F013         	call	_TMR0_WriteTimer	;wreg free
  2545  000076                     
  2546                           ;main.c: 62: 
  2547  000076  94F2               	bcf	242,2,c	;volatile
  2548  000078                     l377:
  2549  000078  A4F2               	btfss	242,2,c	;volatile
  2550  00007A  EF41  F000         	goto	u4191
  2551  00007E  EF43  F000         	goto	u4190
  2552  000082                     u4191:
  2553  000082  EF3C  F000         	goto	l377
  2554  000086                     u4190:
  2555  000086                     
  2556                           ;main.c: 65: 
  2557  000086  0EE6               	movlw	low _myTMR0ISR
  2558  000088  6E11               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  2559  00008A  0E1C               	movlw	high _myTMR0ISR
  2560  00008C  6E12               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  2561  00008E  ECA0  F013         	call	_TMR0_SetInterruptHandler	;wreg free
  2562  000092                     
  2563                           ;main.c: 67:     printf("\r\n-------------------------------------------------\r\n");
  2564  000092  8EF2               	bsf	242,7,c	;volatile
  2565  000094                     
  2566                           ;main.c: 68:                 printf("SD card address:  ");
  2567  000094  8CF2               	bsf	242,6,c	;volatile
  2568  000096                     
  2569                           ;main.c: 70:                 printf("-------------------------------------------------\r
      +                          \n");
  2570  000096  0E07               	movlw	low STR_1
  2571  000098  0100               	movlb	0	; () banked
  2572  00009A  6FA3               	movwf	printf@fmt& (0+255),b
  2573  00009C  0EFF               	movlw	high STR_1
  2574  00009E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2575  0000A0  ECFE  F012         	call	_printf	;wreg free
  2576  0000A4                     
  2577                           ;main.c: 71:                 printf("?: help menu\r\n");
  2578  0000A4  0E1B               	movlw	low STR_2
  2579  0000A6  0100               	movlb	0	; () banked
  2580  0000A8  6FA3               	movwf	printf@fmt& (0+255),b
  2581  0000AA  0EFF               	movlw	high STR_2
  2582  0000AC  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2583  0000AE  ECFE  F012         	call	_printf	;wreg free
  2584  0000B2                     
  2585                           ;main.c: 72:     printf("o: k\r\n");
  2586  0000B2  0E56               	movlw	low STR_3
  2587  0000B4  0100               	movlb	0	; () banked
  2588  0000B6  6FA3               	movwf	printf@fmt& (0+255),b
  2589  0000B8  0EFF               	movlw	high STR_3
  2590  0000BA  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2591  0000BC  ECFE  F012         	call	_printf	;wreg free
  2592  0000C0                     
  2593                           ;main.c: 73:                 printf("Z: Reset processor\r\n");
  2594  0000C0  0EE7               	movlw	low STR_4
  2595  0000C2  0100               	movlb	0	; () banked
  2596  0000C4  6FA3               	movwf	printf@fmt& (0+255),b
  2597  0000C6  0EFF               	movlw	high STR_4
  2598  0000C8  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2599  0000CA  ECFE  F012         	call	_printf	;wreg free
  2600  0000CE                     l4918:
  2601                           
  2602                           ;main.c: 77:                 printf("-------------------------------------------------\r
      +                          \n");
  2603  0000CE  EC88  F013         	call	_EUSART1_is_rx_ready	;wreg free
  2604  0000D2  0900               	iorlw	0
  2605  0000D4  B4D8               	btfsc	status,2,c
  2606  0000D6  EF6F  F000         	goto	u4201
  2607  0000DA  EF71  F000         	goto	u4200
  2608  0000DE                     u4201:
  2609  0000DE  EF67  F000         	goto	l4918
  2610  0000E2                     u4200:
  2611  0000E2                     
  2612                           ;main.c: 78:                 printf("a/A decrease/increase read address\r\n");
  2613  0000E2  EC12  F013         	call	_EUSART1_Read	;wreg free
  2614  0000E6  0100               	movlb	0	; () banked
  2615  0000E8  6FBF               	movwf	main@cmd& (0+255),b
  2616                           
  2617                           ;main.c: 79:                 printf("r: read a block of %d bytes from SD card\r\n", 512)
      +                          ;
  2618  0000EA  EFE8  F004         	goto	l5130
  2619  0000EE                     l4922:
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;main.c: 85:                 printf("-------------------------------------------------\r
      +                          \n");
  2623  0000EE  0E8E               	movlw	low STR_5
  2624  0000F0  6FA3               	movwf	printf@fmt& (0+255),b
  2625  0000F2  0EFB               	movlw	high STR_5
  2626  0000F4  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2627  0000F6  ECFE  F012         	call	_printf	;wreg free
  2628                           
  2629                           ;main.c: 86:     break;
  2630  0000FA  0E43               	movlw	low STR_6
  2631  0000FC  0100               	movlb	0	; () banked
  2632  0000FE  6FA3               	movwf	printf@fmt& (0+255),b
  2633  000100  0EFF               	movlw	high STR_6
  2634  000102  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2635  000104  ECFE  F012         	call	_printf	;wreg free
  2636                           
  2637                           ;main.c: 87: 
  2638  000108  0EEC               	movlw	low STR_7
  2639  00010A  0100               	movlb	0	; () banked
  2640  00010C  6FA3               	movwf	printf@fmt& (0+255),b
  2641  00010E  0EFF               	movlw	high STR_7
  2642  000110  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2643  000112  C0C4  F0A5         	movff	main@sdCardAddress+2,?_printf+2
  2644  000116  C0C5  F0A6         	movff	main@sdCardAddress+3,?_printf+3
  2645  00011A  6BA7               	clrf	(?_printf+4)& (0+255),b
  2646  00011C  6BA8               	clrf	(?_printf+5)& (0+255),b
  2647  00011E  ECFE  F012         	call	_printf	;wreg free
  2648  000122  0EFD               	movlw	low STR_8
  2649  000124  0100               	movlb	0	; () banked
  2650  000126  6FA3               	movwf	printf@fmt& (0+255),b
  2651  000128  0EFF               	movlw	high STR_8
  2652  00012A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2653  00012C  ECFE  F012         	call	_printf	;wreg free
  2654  000130  0EEC               	movlw	low STR_7
  2655  000132  0100               	movlb	0	; () banked
  2656  000134  6FA3               	movwf	printf@fmt& (0+255),b
  2657  000136  0EFF               	movlw	high STR_7
  2658  000138  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2659  00013A  0EFF               	movlw	255
  2660  00013C  15C2               	andwf	main@sdCardAddress& (0+255),w,b
  2661  00013E  6FA5               	movwf	(?_printf+2)& (0+255),b
  2662  000140  0EFF               	movlw	255
  2663  000142  15C3               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  2664  000144  6FA6               	movwf	(?_printf+3)& (0+255),b
  2665  000146  0E00               	movlw	0
  2666  000148  15C4               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  2667  00014A  6FA7               	movwf	(?_printf+4)& (0+255),b
  2668  00014C  0E00               	movlw	0
  2669  00014E  15C5               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  2670  000150  6FA8               	movwf	(?_printf+5)& (0+255),b
  2671  000152  ECFE  F012         	call	_printf	;wreg free
  2672  000156  0E96               	movlw	low (STR_39+12)
  2673  000158  0100               	movlb	0	; () banked
  2674  00015A  6FA3               	movwf	printf@fmt& (0+255),b
  2675  00015C  0EFF               	movlw	high (STR_39+12)
  2676  00015E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2677  000160  ECFE  F012         	call	_printf	;wreg free
  2678                           
  2679                           ;main.c: 88: 
  2680  000164  0E90               	movlw	low (STR_5+2)
  2681  000166  0100               	movlb	0	; () banked
  2682  000168  6FA3               	movwf	printf@fmt& (0+255),b
  2683  00016A  0EFB               	movlw	high (STR_5+2)
  2684  00016C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2685  00016E  ECFE  F012         	call	_printf	;wreg free
  2686                           
  2687                           ;main.c: 89: 
  2688  000172  0EA8               	movlw	low STR_12
  2689  000174  0100               	movlb	0	; () banked
  2690  000176  6FA3               	movwf	printf@fmt& (0+255),b
  2691  000178  0EFF               	movlw	high STR_12
  2692  00017A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2693  00017C  ECFE  F012         	call	_printf	;wreg free
  2694                           
  2695                           ;main.c: 90: 
  2696  000180  0ED5               	movlw	low STR_13
  2697  000182  0100               	movlb	0	; () banked
  2698  000184  6FA3               	movwf	printf@fmt& (0+255),b
  2699  000186  0EFF               	movlw	high STR_13
  2700  000188  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2701  00018A  ECFE  F012         	call	_printf	;wreg free
  2702                           
  2703                           ;main.c: 91:    case 'o':
  2704  00018E  0EF2               	movlw	low STR_14
  2705  000190  0100               	movlb	0	; () banked
  2706  000192  6FA3               	movwf	printf@fmt& (0+255),b
  2707  000194  0EFE               	movlw	high STR_14
  2708  000196  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2709  000198  ECFE  F012         	call	_printf	;wreg free
  2710                           
  2711                           ;main.c: 92:     printf("o:	ok\r\n");
  2712  00019C  0E82               	movlw	low STR_15
  2713  00019E  0100               	movlb	0	; () banked
  2714  0001A0  6FA3               	movwf	printf@fmt& (0+255),b
  2715  0001A2  0EFE               	movlw	high STR_15
  2716  0001A4  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2717  0001A6  ECFE  F012         	call	_printf	;wreg free
  2718                           
  2719                           ;main.c: 93:     break;
  2720  0001AA  0E90               	movlw	low (STR_5+2)
  2721  0001AC  0100               	movlb	0	; () banked
  2722  0001AE  6FA3               	movwf	printf@fmt& (0+255),b
  2723  0001B0  0EFB               	movlw	high (STR_5+2)
  2724  0001B2  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2725  0001B4  ECFE  F012         	call	_printf	;wreg free
  2726                           
  2727                           ;main.c: 94: 
  2728  0001B8  0E52               	movlw	low STR_17
  2729  0001BA  0100               	movlb	0	; () banked
  2730  0001BC  6FA3               	movwf	printf@fmt& (0+255),b
  2731  0001BE  0EFE               	movlw	high STR_17
  2732  0001C0  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2733  0001C2  ECFE  F012         	call	_printf	;wreg free
  2734                           
  2735                           ;main.c: 95: 
  2736  0001C6  0E90               	movlw	low (STR_5+2)
  2737  0001C8  0100               	movlb	0	; () banked
  2738  0001CA  6FA3               	movwf	printf@fmt& (0+255),b
  2739  0001CC  0EFB               	movlw	high (STR_5+2)
  2740  0001CE  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2741  0001D0  ECFE  F012         	call	_printf	;wreg free
  2742                           
  2743                           ;main.c: 96: 
  2744  0001D4  0E02               	movlw	low STR_19
  2745  0001D6  0100               	movlb	0	; () banked
  2746  0001D8  6FA3               	movwf	printf@fmt& (0+255),b
  2747  0001DA  0EFD               	movlw	high STR_19
  2748  0001DC  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2749  0001DE  ECFE  F012         	call	_printf	;wreg free
  2750                           
  2751                           ;main.c: 97: 
  2752  0001E2  0E83               	movlw	low STR_20
  2753  0001E4  0100               	movlb	0	; () banked
  2754  0001E6  6FA3               	movwf	printf@fmt& (0+255),b
  2755  0001E8  0EFC               	movlw	high STR_20
  2756  0001EA  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2757  0001EC  0E02               	movlw	2
  2758  0001EE  6FA6               	movwf	(?_printf+3)& (0+255),b
  2759  0001F0  0E00               	movlw	0
  2760  0001F2  6FA5               	movwf	(?_printf+2)& (0+255),b
  2761  0001F4  ECFE  F012         	call	_printf	;wreg free
  2762                           
  2763                           ;main.c: 98:             case 'Z':
  2764  0001F8  0E57               	movlw	low STR_21
  2765  0001FA  0100               	movlb	0	; () banked
  2766  0001FC  6FA3               	movwf	printf@fmt& (0+255),b
  2767  0001FE  0EFB               	movlw	high STR_21
  2768  000200  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2769  000202  0E02               	movlw	2
  2770  000204  6FA6               	movwf	(?_printf+3)& (0+255),b
  2771  000206  0E00               	movlw	0
  2772  000208  6FA5               	movwf	(?_printf+2)& (0+255),b
  2773  00020A  ECFE  F012         	call	_printf	;wreg free
  2774                           
  2775                           ;main.c: 99:                 for (i=0; i<40; i++) printf("\n");
  2776  00020E  0E90               	movlw	low (STR_5+2)
  2777  000210  0100               	movlb	0	; () banked
  2778  000212  6FA3               	movwf	printf@fmt& (0+255),b
  2779  000214  0EFB               	movlw	high (STR_5+2)
  2780  000216  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2781  000218  ECFE  F012         	call	_printf	;wreg free
  2782                           
  2783                           ;main.c: 100:                 __asm("reset");
  2784  00021C  0EC4               	movlw	low STR_23
  2785  00021E  0100               	movlb	0	; () banked
  2786  000220  6FA3               	movwf	printf@fmt& (0+255),b
  2787  000222  0EFB               	movlw	high STR_23
  2788  000224  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2789  000226  ECFE  F012         	call	_printf	;wreg free
  2790                           
  2791                           ;main.c: 101:                 break;
  2792  00022A  0ED8               	movlw	low STR_24
  2793  00022C  0100               	movlb	0	; () banked
  2794  00022E  6FA3               	movwf	printf@fmt& (0+255),b
  2795  000230  0EFC               	movlw	high STR_24
  2796  000232  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2797  000234  C0F2  F0A5         	movff	_sampleRate,?_printf+2
  2798  000238  C0F3  F0A6         	movff	_sampleRate+1,?_printf+3
  2799  00023C  ECFE  F012         	call	_printf	;wreg free
  2800                           
  2801                           ;main.c: 102: 
  2802  000240  0E8E               	movlw	low STR_25
  2803  000242  0100               	movlb	0	; () banked
  2804  000244  6FA3               	movwf	printf@fmt& (0+255),b
  2805  000246  0EFD               	movlw	high STR_25
  2806  000248  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2807  00024A  ECFE  F012         	call	_printf	;wreg free
  2808                           
  2809                           ;main.c: 103: 
  2810  00024E  0E90               	movlw	low (STR_5+2)
  2811  000250  0100               	movlb	0	; () banked
  2812  000252  6FA3               	movwf	printf@fmt& (0+255),b
  2813  000254  0EFB               	movlw	high (STR_5+2)
  2814  000256  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2815  000258  ECFE  F012         	call	_printf	;wreg free
  2816                           
  2817                           ;main.c: 104: 
  2818  00025C  EF67  F000         	goto	l4918
  2819  000260                     l4924:
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;main.c: 110: 
  2823  000260  0ECD               	movlw	low STR_27
  2824  000262  6FA3               	movwf	printf@fmt& (0+255),b
  2825  000264  0EFF               	movlw	high STR_27
  2826  000266  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2827  000268  ECFE  F012         	call	_printf	;wreg free
  2828                           
  2829                           ;main.c: 111: 
  2830  00026C  EF67  F000         	goto	l4918
  2831  000270                     l4926:
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;main.c: 117:                 SPI2_Close();
  2835  000270  0E00               	movlw	0
  2836  000272  6FC1               	movwf	(main@i+1)& (0+255),b
  2837  000274  0E00               	movlw	0
  2838  000276  6FC0               	movwf	main@i& (0+255),b
  2839  000278                     l4932:
  2840                           
  2841                           ; BSR set to: 0
  2842  000278  0EF3               	movlw	low (STR_95+2)
  2843  00027A  6FA3               	movwf	printf@fmt& (0+255),b
  2844  00027C  0EFF               	movlw	high (STR_95+2)
  2845  00027E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2846  000280  ECFE  F012         	call	_printf	;wreg free
  2847  000284  0100               	movlb	0	; () banked
  2848  000286  4BC0               	infsnz	main@i& (0+255),f,b
  2849  000288  2BC1               	incf	(main@i+1)& (0+255),f,b
  2850  00028A                     
  2851                           ; BSR set to: 0
  2852  00028A  51C1               	movf	(main@i+1)& (0+255),w,b
  2853  00028C  E109               	bnz	u4210
  2854  00028E  0E28               	movlw	40
  2855  000290  5DC0               	subwf	main@i& (0+255),w,b
  2856  000292  A0D8               	btfss	status,0,c
  2857  000294  EF4E  F001         	goto	u4211
  2858  000298  EF50  F001         	goto	u4210
  2859  00029C                     u4211:
  2860  00029C  EF3C  F001         	goto	l4932
  2861  0002A0                     u4210:
  2862  0002A0                     
  2863                           ; BSR set to: 0
  2864  0002A0  00FF               	reset		;# 
  2865                           
  2866                           ;main.c: 119:                 while ((EUSART1_is_rx_ready()) == 0);
  2867  0002A2  EF67  F000         	goto	l4918
  2868  0002A6                     l4938:
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;main.c: 125: 
  2872  0002A6  0E00               	movlw	0
  2873  0002A8  6FC1               	movwf	(main@i+1)& (0+255),b
  2874  0002AA  0E00               	movlw	0
  2875  0002AC  6FC0               	movwf	main@i& (0+255),b
  2876  0002AE                     l4944:
  2877                           
  2878                           ; BSR set to: 0
  2879  0002AE  0EF3               	movlw	low (STR_95+2)
  2880  0002B0  6FA3               	movwf	printf@fmt& (0+255),b
  2881  0002B2  0EFF               	movlw	high (STR_95+2)
  2882  0002B4  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2883  0002B6  ECFE  F012         	call	_printf	;wreg free
  2884  0002BA  0100               	movlb	0	; () banked
  2885  0002BC  4BC0               	infsnz	main@i& (0+255),f,b
  2886  0002BE  2BC1               	incf	(main@i+1)& (0+255),f,b
  2887  0002C0                     
  2888                           ; BSR set to: 0
  2889  0002C0  51C1               	movf	(main@i+1)& (0+255),w,b
  2890  0002C2  E109               	bnz	u4220
  2891  0002C4  0E28               	movlw	40
  2892  0002C6  5DC0               	subwf	main@i& (0+255),w,b
  2893  0002C8  A0D8               	btfss	status,0,c
  2894  0002CA  EF69  F001         	goto	u4221
  2895  0002CE  EF6B  F001         	goto	u4220
  2896  0002D2                     u4221:
  2897  0002D2  EF57  F001         	goto	l4944
  2898  0002D6                     u4220:
  2899  0002D6  EF67  F000         	goto	l4918
  2900  0002DA                     l4950:
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;main.c: 133:                     sdCardAddress += 512;
  2904  0002DA  0EAE               	movlw	low STR_30
  2905  0002DC  6FA3               	movwf	printf@fmt& (0+255),b
  2906  0002DE  0EFC               	movlw	high STR_30
  2907  0002E0  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2908  0002E2  ECFE  F012         	call	_printf	;wreg free
  2909                           
  2910                           ;main.c: 134:                     printf("Increased ");
  2911  0002E6  0ECB               	movlw	low STR_31
  2912  0002E8  0100               	movlb	0	; () banked
  2913  0002EA  6FA3               	movwf	printf@fmt& (0+255),b
  2914  0002EC  0EFD               	movlw	high STR_31
  2915  0002EE  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2916  0002F0  ECFE  F012         	call	_printf	;wreg free
  2917  0002F4                     
  2918                           ;main.c: 135:                 }
  2919  0002F4  ECC0  F013         	call	_SPI2_Close	;wreg free
  2920  0002F8                     
  2921                           ;main.c: 136:                 printf("SD card address:  ");
  2922  0002F8  0E00               	movlw	0
  2923  0002FA  EC41  F00F         	call	_SPI2_Open
  2924  0002FE                     l4956:
  2925  0002FE  EC88  F013         	call	_EUSART1_is_rx_ready	;wreg free
  2926  000302  0900               	iorlw	0
  2927  000304  B4D8               	btfsc	status,2,c
  2928  000306  EF87  F001         	goto	u4231
  2929  00030A  EF89  F001         	goto	u4230
  2930  00030E                     u4231:
  2931  00030E  EF7F  F001         	goto	l4956
  2932  000312                     u4230:
  2933  000312                     
  2934                           ;main.c: 138:                 break;
  2935  000312  EC12  F013         	call	_EUSART1_Read	;wreg free
  2936  000316                     
  2937                           ;main.c: 139: 
  2938  000316  0E01               	movlw	1
  2939  000318  ECFE  F00C         	call	_SDCARD_HCInitialize
  2940                           
  2941                           ;main.c: 140: 
  2942  00031C  EF67  F000         	goto	l4918
  2943  000320                     l4962:
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;main.c: 147:                 printf("%04x", sdCardAddress>>16); printf(":"); printf("%0
      +                          4x", sdCardAddress&0X0000FFFF); printf("\r\n");
  2947  000320  0E61               	movlw	97
  2948  000322  19BF               	xorwf	main@cmd& (0+255),w,b
  2949  000324  A4D8               	btfss	status,2,c
  2950  000326  EF97  F001         	goto	u4241
  2951  00032A  EF99  F001         	goto	u4240
  2952  00032E                     u4241:
  2953  00032E  EFA9  F001         	goto	l4968
  2954  000332                     u4240:
  2955  000332                     
  2956                           ; BSR set to: 0
  2957                           ;main.c: 148:                 hexDumpBuffer(sdCardBufferRed);
  2958  000332  0E00               	movlw	0
  2959  000334  5FC2               	subwf	main@sdCardAddress& (0+255),f,b
  2960  000336  0E02               	movlw	2
  2961  000338  5BC3               	subwfb	(main@sdCardAddress+1)& (0+255),f,b
  2962  00033A  0E00               	movlw	0
  2963  00033C  5BC4               	subwfb	(main@sdCardAddress+2)& (0+255),f,b
  2964  00033E  0E00               	movlw	0
  2965  000340  5BC5               	subwfb	(main@sdCardAddress+3)& (0+255),f,b
  2966  000342                     
  2967                           ; BSR set to: 0
  2968                           ;main.c: 149:                 break;
  2969  000342  0EB7               	movlw	low STR_32
  2970  000344  6FA3               	movwf	printf@fmt& (0+255),b
  2971  000346  0EFF               	movlw	high STR_32
  2972  000348  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2973  00034A  ECFE  F012         	call	_printf	;wreg free
  2974                           
  2975                           ;main.c: 150: 
  2976  00034E  EFB7  F001         	goto	l4972
  2977  000352                     l4968:
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;main.c: 151: 
  2981  000352  0E00               	movlw	0
  2982  000354  27C2               	addwf	main@sdCardAddress& (0+255),f,b
  2983  000356  0E02               	movlw	2
  2984  000358  23C3               	addwfc	(main@sdCardAddress+1)& (0+255),f,b
  2985  00035A  0E00               	movlw	0
  2986  00035C  23C4               	addwfc	(main@sdCardAddress+2)& (0+255),f,b
  2987  00035E  0E00               	movlw	0
  2988  000360  23C5               	addwfc	(main@sdCardAddress+3)& (0+255),f,b
  2989  000362                     
  2990                           ; BSR set to: 0
  2991                           ;main.c: 152: 
  2992  000362  0EC2               	movlw	low STR_33
  2993  000364  6FA3               	movwf	printf@fmt& (0+255),b
  2994  000366  0EFF               	movlw	high STR_33
  2995  000368  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  2996  00036A  ECFE  F012         	call	_printf	;wreg free
  2997  00036E                     l4972:
  2998                           
  2999                           ;main.c: 154:             case '1':
  3000  00036E  0E43               	movlw	low STR_6
  3001  000370  0100               	movlb	0	; () banked
  3002  000372  6FA3               	movwf	printf@fmt& (0+255),b
  3003  000374  0EFF               	movlw	high STR_6
  3004  000376  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3005  000378  ECFE  F012         	call	_printf	;wreg free
  3006  00037C                     
  3007                           ;main.c: 155:                 recordedBlocks = 0;
  3008  00037C  0EEC               	movlw	low STR_7
  3009  00037E  0100               	movlb	0	; () banked
  3010  000380  6FA3               	movwf	printf@fmt& (0+255),b
  3011  000382  0EFF               	movlw	high STR_7
  3012  000384  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3013  000386  C0C4  F0A5         	movff	main@sdCardAddress+2,?_printf+2
  3014  00038A  C0C5  F0A6         	movff	main@sdCardAddress+3,?_printf+3
  3015  00038E  6BA7               	clrf	(?_printf+4)& (0+255),b
  3016  000390  6BA8               	clrf	(?_printf+5)& (0+255),b
  3017  000392  ECFE  F012         	call	_printf	;wreg free
  3018  000396  0EFD               	movlw	low STR_8
  3019  000398  0100               	movlb	0	; () banked
  3020  00039A  6FA3               	movwf	printf@fmt& (0+255),b
  3021  00039C  0EFF               	movlw	high STR_8
  3022  00039E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3023  0003A0  ECFE  F012         	call	_printf	;wreg free
  3024  0003A4  0EEC               	movlw	low STR_7
  3025  0003A6  0100               	movlb	0	; () banked
  3026  0003A8  6FA3               	movwf	printf@fmt& (0+255),b
  3027  0003AA  0EFF               	movlw	high STR_7
  3028  0003AC  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3029  0003AE  0EFF               	movlw	255
  3030  0003B0  15C2               	andwf	main@sdCardAddress& (0+255),w,b
  3031  0003B2  6FA5               	movwf	(?_printf+2)& (0+255),b
  3032  0003B4  0EFF               	movlw	255
  3033  0003B6  15C3               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  3034  0003B8  6FA6               	movwf	(?_printf+3)& (0+255),b
  3035  0003BA  0E00               	movlw	0
  3036  0003BC  15C4               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  3037  0003BE  6FA7               	movwf	(?_printf+4)& (0+255),b
  3038  0003C0  0E00               	movlw	0
  3039  0003C2  15C5               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  3040  0003C4  6FA8               	movwf	(?_printf+5)& (0+255),b
  3041  0003C6  ECFE  F012         	call	_printf	;wreg free
  3042  0003CA  0E96               	movlw	low (STR_39+12)
  3043  0003CC  0100               	movlb	0	; () banked
  3044  0003CE  6FA3               	movwf	printf@fmt& (0+255),b
  3045  0003D0  0EFF               	movlw	high (STR_39+12)
  3046  0003D2  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3047  0003D4  ECFE  F012         	call	_printf	;wreg free
  3048                           
  3049                           ;main.c: 156:                 j = 0;
  3050  0003D8  EF67  F000         	goto	l4918
  3051  0003DC                     l4982:
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;main.c: 162:                         }else{
  3055  0003DC  C0C2  F012         	movff	main@sdCardAddress,SDCARD_ReadBlock@addr
  3056  0003E0  C0C3  F013         	movff	main@sdCardAddress+1,SDCARD_ReadBlock@addr+1
  3057  0003E4  C0C4  F014         	movff	main@sdCardAddress+2,SDCARD_ReadBlock@addr+2
  3058  0003E8  C0C5  F015         	movff	main@sdCardAddress+3,SDCARD_ReadBlock@addr+3
  3059  0003EC  0EF4               	movlw	low _sdCardBufferRed
  3060  0003EE  6E16               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  3061  0003F0  0E02               	movlw	high _sdCardBufferRed
  3062  0003F2  6E17               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  3063  0003F4  EC97  F00F         	call	_SDCARD_ReadBlock	;wreg free
  3064  0003F8                     
  3065                           ;main.c: 163:                             j += 1;
  3066  0003F8  0E8A               	movlw	low STR_39
  3067  0003FA  0100               	movlb	0	; () banked
  3068  0003FC  6FA3               	movwf	printf@fmt& (0+255),b
  3069  0003FE  0EFF               	movlw	high STR_39
  3070  000400  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3071  000402  ECFE  F012         	call	_printf	;wreg free
  3072  000406                     
  3073                           ;main.c: 164:                         }
  3074  000406  0E79               	movlw	low STR_40
  3075  000408  0100               	movlb	0	; () banked
  3076  00040A  6FA3               	movwf	printf@fmt& (0+255),b
  3077  00040C  0EFF               	movlw	high STR_40
  3078  00040E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3079  000410  ECFE  F012         	call	_printf	;wreg free
  3080  000414                     
  3081                           ;main.c: 165:                     }
  3082  000414  0EEC               	movlw	low STR_7
  3083  000416  0100               	movlb	0	; () banked
  3084  000418  6FA3               	movwf	printf@fmt& (0+255),b
  3085  00041A  0EFF               	movlw	high STR_7
  3086  00041C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3087  00041E  C0C4  F0A5         	movff	main@sdCardAddress+2,?_printf+2
  3088  000422  C0C5  F0A6         	movff	main@sdCardAddress+3,?_printf+3
  3089  000426  6BA7               	clrf	(?_printf+4)& (0+255),b
  3090  000428  6BA8               	clrf	(?_printf+5)& (0+255),b
  3091  00042A  ECFE  F012         	call	_printf	;wreg free
  3092  00042E  0EFD               	movlw	low STR_8
  3093  000430  0100               	movlb	0	; () banked
  3094  000432  6FA3               	movwf	printf@fmt& (0+255),b
  3095  000434  0EFF               	movlw	high STR_8
  3096  000436  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3097  000438  ECFE  F012         	call	_printf	;wreg free
  3098  00043C  0EEC               	movlw	low STR_7
  3099  00043E  0100               	movlb	0	; () banked
  3100  000440  6FA3               	movwf	printf@fmt& (0+255),b
  3101  000442  0EFF               	movlw	high STR_7
  3102  000444  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3103  000446  0EFF               	movlw	255
  3104  000448  15C2               	andwf	main@sdCardAddress& (0+255),w,b
  3105  00044A  6FA5               	movwf	(?_printf+2)& (0+255),b
  3106  00044C  0EFF               	movlw	255
  3107  00044E  15C3               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  3108  000450  6FA6               	movwf	(?_printf+3)& (0+255),b
  3109  000452  0E00               	movlw	0
  3110  000454  15C4               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  3111  000456  6FA7               	movwf	(?_printf+4)& (0+255),b
  3112  000458  0E00               	movlw	0
  3113  00045A  15C5               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  3114  00045C  6FA8               	movwf	(?_printf+5)& (0+255),b
  3115  00045E  ECFE  F012         	call	_printf	;wreg free
  3116  000462  0E96               	movlw	low (STR_39+12)
  3117  000464  0100               	movlb	0	; () banked
  3118  000466  6FA3               	movwf	printf@fmt& (0+255),b
  3119  000468  0EFF               	movlw	high (STR_39+12)
  3120  00046A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3121  00046C  ECFE  F012         	call	_printf	;wreg free
  3122  000470                     
  3123                           ;main.c: 166:                     SDCARD_WriteBlock(sdCardAddress, sdCardBufferRed);
  3124  000470  0EF4               	movlw	low _sdCardBufferRed
  3125  000472  0100               	movlb	0	; () banked
  3126  000474  6FAD               	movwf	hexDumpBuffer@sdCardBuffer& (0+255),b
  3127  000476  0E02               	movlw	high _sdCardBufferRed
  3128  000478  6FAE               	movwf	(hexDumpBuffer@sdCardBuffer+1)& (0+255),b
  3129  00047A  EC77  F00A         	call	_hexDumpBuffer	;wreg free
  3130                           
  3131                           ;main.c: 167:                     while((status = SDCARD_PollWriteComplete()) == 0xFF);
  3132  00047E  EF67  F000         	goto	l4918
  3133  000482                     l4998:
  3134                           
  3135                           ; BSR set to: 0
  3136                           ;main.c: 173:                 }
  3137  000482  0E00               	movlw	0
  3138  000484  6FBB               	movwf	main@recordedBlocks& (0+255),b
  3139                           
  3140                           ;main.c: 174:                 (void) EUSART1_Read();
  3141  000486  0E00               	movlw	0
  3142  000488  6FBE               	movwf	(main@j+1)& (0+255),b
  3143  00048A  0E00               	movlw	0
  3144  00048C  6FBD               	movwf	main@j& (0+255),b
  3145                           
  3146                           ;main.c: 175:                 printf("There were %d blocks written to the SD card", reco
      +                          rdedBlocks);
  3147  00048E  EFDC  F002         	goto	l5026
  3148  000492                     l5000:
  3149                           
  3150                           ;main.c: 176:                 break;
  3151  000492  0E00               	movlw	0
  3152  000494  0100               	movlb	0	; () banked
  3153  000496  6FC1               	movwf	(main@i+1)& (0+255),b
  3154  000498  0E00               	movlw	0
  3155  00049A  6FC0               	movwf	main@i& (0+255),b
  3156  00049C                     l5006:
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;main.c: 177: 
  3160  00049C  0EED               	movlw	low _sin
  3161  00049E  25BD               	addwf	main@j& (0+255),w,b
  3162  0004A0  6EF6               	movwf	tblptrl,c
  3163  0004A2  0EF9               	movlw	high _sin
  3164  0004A4  21BE               	addwfc	(main@j+1)& (0+255),w,b
  3165  0004A6  6EF7               	movwf	tblptrh,c
  3166  0004A8                     	if	1	;There are 3 active tblptr bytes
  3167  0004A8  6AF8               	clrf	tblptru,c
  3168  0004AA  0E00               	movlw	low (__mediumconst shr (0+16))
  3169  0004AC  22F8               	addwfc	tblptru,f,c
  3170  0004AE                     	endif
  3171  0004AE  0EF4               	movlw	low _sdCardBufferRed
  3172  0004B0  25C0               	addwf	main@i& (0+255),w,b
  3173  0004B2  6ED9               	movwf	fsr2l,c
  3174  0004B4  0E02               	movlw	high _sdCardBufferRed
  3175  0004B6  21C1               	addwfc	(main@i+1)& (0+255),w,b
  3176  0004B8  6EDA               	movwf	fsr2h,c
  3177  0004BA  0008               	tblrd		*
  3178  0004BC  CFF5 FFDF          	movff	tablat,indf2
  3179  0004C0                     
  3180                           ; BSR set to: 0
  3181                           ;main.c: 178: 
  3182  0004C0  0E1A               	movlw	26
  3183  0004C2  19BD               	xorwf	main@j& (0+255),w,b
  3184  0004C4  11BE               	iorwf	(main@j+1)& (0+255),w,b
  3185  0004C6  A4D8               	btfss	status,2,c
  3186  0004C8  EF68  F002         	goto	u4251
  3187  0004CC  EF6A  F002         	goto	u4250
  3188  0004D0                     u4251:
  3189  0004D0  EF70  F002         	goto	l5012
  3190  0004D4                     u4250:
  3191  0004D4                     
  3192                           ; BSR set to: 0
  3193                           ;main.c: 179: 
  3194  0004D4  0E00               	movlw	0
  3195  0004D6  6FBE               	movwf	(main@j+1)& (0+255),b
  3196  0004D8  0E00               	movlw	0
  3197  0004DA  6FBD               	movwf	main@j& (0+255),b
  3198                           
  3199                           ;main.c: 180: 
  3200  0004DC  EF72  F002         	goto	l407
  3201  0004E0                     l5012:
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;main.c: 181:             case '+':
  3205  0004E0  4BBD               	infsnz	main@j& (0+255),f,b
  3206  0004E2  2BBE               	incf	(main@j+1)& (0+255),f,b
  3207  0004E4                     l407:
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;main.c: 183:                 break;
  3211  0004E4  4BC0               	infsnz	main@i& (0+255),f,b
  3212  0004E6  2BC1               	incf	(main@i+1)& (0+255),f,b
  3213  0004E8                     
  3214                           ; BSR set to: 0
  3215  0004E8  0E02               	movlw	2
  3216  0004EA  5DC1               	subwf	(main@i+1)& (0+255),w,b
  3217  0004EC  A0D8               	btfss	status,0,c
  3218  0004EE  EF7B  F002         	goto	u4261
  3219  0004F2  EF7D  F002         	goto	u4260
  3220  0004F6                     u4261:
  3221  0004F6  EF4E  F002         	goto	l5006
  3222  0004FA                     u4260:
  3223  0004FA                     
  3224                           ; BSR set to: 0
  3225                           ;main.c: 184: 
  3226  0004FA  C0C2  F012         	movff	main@sdCardAddress,SDCARD_WriteBlock@addr
  3227  0004FE  C0C3  F013         	movff	main@sdCardAddress+1,SDCARD_WriteBlock@addr+1
  3228  000502  C0C4  F014         	movff	main@sdCardAddress+2,SDCARD_WriteBlock@addr+2
  3229  000506  C0C5  F015         	movff	main@sdCardAddress+3,SDCARD_WriteBlock@addr+3
  3230  00050A  0EF4               	movlw	low _sdCardBufferRed
  3231  00050C  6E16               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  3232  00050E  0E02               	movlw	high _sdCardBufferRed
  3233  000510  6E17               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  3234  000512  EC7B  F010         	call	_SDCARD_WriteBlock	;wreg free
  3235  000516                     l5018:
  3236  000516  EC28  F012         	call	_SDCARD_PollWriteComplete	;wreg free
  3237  00051A  0100               	movlb	0	; () banked
  3238  00051C  6FBA               	movwf	main@status& (0+255),b
  3239  00051E  29BA               	incf	main@status& (0+255),w,b
  3240  000520  B4D8               	btfsc	status,2,c
  3241  000522  EF95  F002         	goto	u4271
  3242  000526  EF97  F002         	goto	u4270
  3243  00052A                     u4271:
  3244  00052A  EF8B  F002         	goto	l5018
  3245  00052E                     u4270:
  3246  00052E                     
  3247                           ; BSR set to: 0
  3248                           ;main.c: 186: 
  3249  00052E  0E99               	movlw	low STR_45
  3250  000530  6FA3               	movwf	printf@fmt& (0+255),b
  3251  000532  0EFF               	movlw	high STR_45
  3252  000534  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3253  000536  ECFE  F012         	call	_printf	;wreg free
  3254                           
  3255                           ;main.c: 187: 
  3256  00053A  0E79               	movlw	low STR_40
  3257  00053C  0100               	movlb	0	; () banked
  3258  00053E  6FA3               	movwf	printf@fmt& (0+255),b
  3259  000540  0EFF               	movlw	high STR_40
  3260  000542  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3261  000544  ECFE  F012         	call	_printf	;wreg free
  3262                           
  3263                           ;main.c: 188:             case '-':
  3264  000548  0EEC               	movlw	low STR_7
  3265  00054A  0100               	movlb	0	; () banked
  3266  00054C  6FA3               	movwf	printf@fmt& (0+255),b
  3267  00054E  0EFF               	movlw	high STR_7
  3268  000550  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3269  000552  C0C4  F0A5         	movff	main@sdCardAddress+2,?_printf+2
  3270  000556  C0C5  F0A6         	movff	main@sdCardAddress+3,?_printf+3
  3271  00055A  6BA7               	clrf	(?_printf+4)& (0+255),b
  3272  00055C  6BA8               	clrf	(?_printf+5)& (0+255),b
  3273  00055E  ECFE  F012         	call	_printf	;wreg free
  3274  000562  0EFD               	movlw	low STR_8
  3275  000564  0100               	movlb	0	; () banked
  3276  000566  6FA3               	movwf	printf@fmt& (0+255),b
  3277  000568  0EFF               	movlw	high STR_8
  3278  00056A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3279  00056C  ECFE  F012         	call	_printf	;wreg free
  3280  000570  0EEC               	movlw	low STR_7
  3281  000572  0100               	movlb	0	; () banked
  3282  000574  6FA3               	movwf	printf@fmt& (0+255),b
  3283  000576  0EFF               	movlw	high STR_7
  3284  000578  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3285  00057A  0EFF               	movlw	255
  3286  00057C  15C2               	andwf	main@sdCardAddress& (0+255),w,b
  3287  00057E  6FA5               	movwf	(?_printf+2)& (0+255),b
  3288  000580  0EFF               	movlw	255
  3289  000582  15C3               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  3290  000584  6FA6               	movwf	(?_printf+3)& (0+255),b
  3291  000586  0E00               	movlw	0
  3292  000588  15C4               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  3293  00058A  6FA7               	movwf	(?_printf+4)& (0+255),b
  3294  00058C  0E00               	movlw	0
  3295  00058E  15C5               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  3296  000590  6FA8               	movwf	(?_printf+5)& (0+255),b
  3297  000592  ECFE  F012         	call	_printf	;wreg free
  3298  000596  0E96               	movlw	low (STR_39+12)
  3299  000598  0100               	movlb	0	; () banked
  3300  00059A  6FA3               	movwf	printf@fmt& (0+255),b
  3301  00059C  0EFF               	movlw	high (STR_39+12)
  3302  00059E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3303  0005A0  ECFE  F012         	call	_printf	;wreg free
  3304  0005A4                     
  3305                           ;main.c: 189:                 if(sampleRate <= 480){
  3306  0005A4  0E00               	movlw	0
  3307  0005A6  0100               	movlb	0	; () banked
  3308  0005A8  27C2               	addwf	main@sdCardAddress& (0+255),f,b
  3309  0005AA  0E02               	movlw	2
  3310  0005AC  23C3               	addwfc	(main@sdCardAddress+1)& (0+255),f,b
  3311  0005AE  0E00               	movlw	0
  3312  0005B0  23C4               	addwfc	(main@sdCardAddress+2)& (0+255),f,b
  3313  0005B2  0E00               	movlw	0
  3314  0005B4  23C5               	addwfc	(main@sdCardAddress+3)& (0+255),f,b
  3315  0005B6                     
  3316                           ; BSR set to: 0
  3317                           ;main.c: 190:                     sampleRate = 320;
  3318  0005B6  2BBB               	incf	main@recordedBlocks& (0+255),f,b
  3319  0005B8                     l5026:
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;main.c: 175:                 printf("There were %d blocks written to the SD card", reco
      +                          rdedBlocks);
  3323  0005B8  EC88  F013         	call	_EUSART1_is_rx_ready	;wreg free
  3324  0005BC  0900               	iorlw	0
  3325  0005BE  B4D8               	btfsc	status,2,c
  3326  0005C0  EFE4  F002         	goto	u4281
  3327  0005C4  EFE6  F002         	goto	u4280
  3328  0005C8                     u4281:
  3329  0005C8  EF49  F002         	goto	l5000
  3330  0005CC                     u4280:
  3331  0005CC                     
  3332                           ;main.c: 192:                     sampleRate -= 160;
  3333  0005CC  EC12  F013         	call	_EUSART1_Read	;wreg free
  3334  0005D0                     
  3335                           ;main.c: 193:                 }
  3336  0005D0  0E57               	movlw	low STR_51
  3337  0005D2  0100               	movlb	0	; () banked
  3338  0005D4  6FA3               	movwf	printf@fmt& (0+255),b
  3339  0005D6  0EFC               	movlw	high STR_51
  3340  0005D8  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3341  0005DA  C0BB  F0A5         	movff	main@recordedBlocks,?_printf+2
  3342  0005DE  6BA6               	clrf	(?_printf+3)& (0+255),b
  3343  0005E0  ECFE  F012         	call	_printf	;wreg free
  3344                           
  3345                           ;main.c: 194:                 break;
  3346  0005E4  EF67  F000         	goto	l4918
  3347  0005E8                     l5032:
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;main.c: 200:                 printf("Press any key to start recording audio and press a
      +                          ny key to stop recording.\r\n");
  3351  0005E8  0EA0               	movlw	160
  3352  0005EA  27F2               	addwf	_sampleRate& (0+255),f,b
  3353  0005EC  0E00               	movlw	0
  3354  0005EE  23F3               	addwfc	(_sampleRate+1)& (0+255),f,b
  3355                           
  3356                           ;main.c: 201:                 while(!(EUSART1_is_rx_ready()));
  3357  0005F0  EF67  F000         	goto	l4918
  3358  0005F4                     l5034:
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;main.c: 207:                         while((status = SDCARD_PollWriteComplete()) == 0xF
      +                          F);
  3362  0005F4  0EE1               	movlw	225
  3363  0005F6  5DF2               	subwf	_sampleRate& (0+255),w,b
  3364  0005F8  0E01               	movlw	1
  3365  0005FA  59F3               	subwfb	(_sampleRate+1)& (0+255),w,b
  3366  0005FC  B0D8               	btfsc	status,0,c
  3367  0005FE  EF03  F003         	goto	u4291
  3368  000602  EF05  F003         	goto	u4290
  3369  000606                     u4291:
  3370  000606  EF0B  F003         	goto	l5038
  3371  00060A                     u4290:
  3372  00060A                     
  3373                           ; BSR set to: 0
  3374                           ;main.c: 208:                         printf("Write block:\r\n");
  3375  00060A  0E01               	movlw	1
  3376  00060C  6FF3               	movwf	(_sampleRate+1)& (0+255),b
  3377  00060E  0E40               	movlw	64
  3378  000610  6FF2               	movwf	_sampleRate& (0+255),b
  3379                           
  3380                           ;main.c: 209:                         printf("    Address:    ");
  3381  000612  EF67  F000         	goto	l4918
  3382  000616                     l5038:
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;main.c: 210:                         printf("%04x", sdCardAddress>>16); printf(":"); pr
      +                          intf("%04x", sdCardAddress&0X0000FFFF); printf("\r\n");
  3386  000616  0EA0               	movlw	160
  3387  000618  5FF2               	subwf	_sampleRate& (0+255),f,b
  3388  00061A  0E00               	movlw	0
  3389  00061C  5BF3               	subwfb	(_sampleRate+1)& (0+255),f,b
  3390  00061E  EF67  F000         	goto	l4918
  3391  000622                     l5040:
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;main.c: 218:                         printf("%04x", sdCardAddress>>16); printf(":"); pr
      +                          intf("%04x", sdCardAddress&0X0000FFFF); printf("\r\n");
  3395  000622  0E0B               	movlw	low STR_52
  3396  000624  6FA3               	movwf	printf@fmt& (0+255),b
  3397  000626  0EFA               	movlw	high STR_52
  3398  000628  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3399  00062A  ECFE  F012         	call	_printf	;wreg free
  3400  00062E                     l5042:
  3401  00062E  EC88  F013         	call	_EUSART1_is_rx_ready	;wreg free
  3402  000632  0900               	iorlw	0
  3403  000634  B4D8               	btfsc	status,2,c
  3404  000636  EF1F  F003         	goto	u4301
  3405  00063A  EF21  F003         	goto	u4300
  3406  00063E                     u4301:
  3407  00063E  EF17  F003         	goto	l5042
  3408  000642                     u4300:
  3409  000642                     
  3410                           ;main.c: 220:                         blueBufferFull = 0;
  3411  000642  EC12  F013         	call	_EUSART1_Read	;wreg free
  3412  000646                     
  3413                           ;main.c: 221:                     }
  3414  000646  0E01               	movlw	1
  3415  000648  6E4C               	movwf	_collectSamples^0,c
  3416                           
  3417                           ;main.c: 222:                 }
  3418  00064A  EFFA  F003         	goto	l5072
  3419  00064E                     l5048:
  3420                           
  3421                           ;main.c: 223:                 (void) EUSART1_Read();
  3422  00064E  0100               	movlb	0	; () banked
  3423  000650  51D1               	movf	_redBufferFull& (0+255),w,b
  3424  000652  B4D8               	btfsc	status,2,c
  3425  000654  EF2E  F003         	goto	u4311
  3426  000658  EF30  F003         	goto	u4310
  3427  00065C                     u4311:
  3428  00065C  EF92  F003         	goto	l5060
  3429  000660                     u4310:
  3430  000660                     
  3431                           ; BSR set to: 0
  3432                           ;main.c: 224:                 collectSamples = 0;
  3433  000660  C0C2  F012         	movff	main@sdCardAddress,SDCARD_WriteBlock@addr
  3434  000664  C0C3  F013         	movff	main@sdCardAddress+1,SDCARD_WriteBlock@addr+1
  3435  000668  C0C4  F014         	movff	main@sdCardAddress+2,SDCARD_WriteBlock@addr+2
  3436  00066C  C0C5  F015         	movff	main@sdCardAddress+3,SDCARD_WriteBlock@addr+3
  3437  000670  0EF4               	movlw	low _sdCardBufferRed
  3438  000672  6E16               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  3439  000674  0E02               	movlw	high _sdCardBufferRed
  3440  000676  6E17               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  3441  000678  EC7B  F010         	call	_SDCARD_WriteBlock	;wreg free
  3442  00067C                     l5052:
  3443  00067C  EC28  F012         	call	_SDCARD_PollWriteComplete	;wreg free
  3444  000680  0100               	movlb	0	; () banked
  3445  000682  6FBA               	movwf	main@status& (0+255),b
  3446  000684  29BA               	incf	main@status& (0+255),w,b
  3447  000686  B4D8               	btfsc	status,2,c
  3448  000688  EF48  F003         	goto	u4321
  3449  00068C  EF4A  F003         	goto	u4320
  3450  000690                     u4321:
  3451  000690  EF3E  F003         	goto	l5052
  3452  000694                     u4320:
  3453  000694                     
  3454                           ; BSR set to: 0
  3455                           ;main.c: 226: 
  3456  000694  0E99               	movlw	low STR_45
  3457  000696  6FA3               	movwf	printf@fmt& (0+255),b
  3458  000698  0EFF               	movlw	high STR_45
  3459  00069A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3460  00069C  ECFE  F012         	call	_printf	;wreg free
  3461                           
  3462                           ;main.c: 227: 
  3463  0006A0  0E79               	movlw	low STR_40
  3464  0006A2  0100               	movlb	0	; () banked
  3465  0006A4  6FA3               	movwf	printf@fmt& (0+255),b
  3466  0006A6  0EFF               	movlw	high STR_40
  3467  0006A8  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3468  0006AA  ECFE  F012         	call	_printf	;wreg free
  3469                           
  3470                           ;main.c: 228: 
  3471  0006AE  0EEC               	movlw	low STR_7
  3472  0006B0  0100               	movlb	0	; () banked
  3473  0006B2  6FA3               	movwf	printf@fmt& (0+255),b
  3474  0006B4  0EFF               	movlw	high STR_7
  3475  0006B6  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3476  0006B8  C0C4  F0A5         	movff	main@sdCardAddress+2,?_printf+2
  3477  0006BC  C0C5  F0A6         	movff	main@sdCardAddress+3,?_printf+3
  3478  0006C0  6BA7               	clrf	(?_printf+4)& (0+255),b
  3479  0006C2  6BA8               	clrf	(?_printf+5)& (0+255),b
  3480  0006C4  ECFE  F012         	call	_printf	;wreg free
  3481  0006C8  0EFD               	movlw	low STR_8
  3482  0006CA  0100               	movlb	0	; () banked
  3483  0006CC  6FA3               	movwf	printf@fmt& (0+255),b
  3484  0006CE  0EFF               	movlw	high STR_8
  3485  0006D0  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3486  0006D2  ECFE  F012         	call	_printf	;wreg free
  3487  0006D6  0EEC               	movlw	low STR_7
  3488  0006D8  0100               	movlb	0	; () banked
  3489  0006DA  6FA3               	movwf	printf@fmt& (0+255),b
  3490  0006DC  0EFF               	movlw	high STR_7
  3491  0006DE  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3492  0006E0  0EFF               	movlw	255
  3493  0006E2  15C2               	andwf	main@sdCardAddress& (0+255),w,b
  3494  0006E4  6FA5               	movwf	(?_printf+2)& (0+255),b
  3495  0006E6  0EFF               	movlw	255
  3496  0006E8  15C3               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  3497  0006EA  6FA6               	movwf	(?_printf+3)& (0+255),b
  3498  0006EC  0E00               	movlw	0
  3499  0006EE  15C4               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  3500  0006F0  6FA7               	movwf	(?_printf+4)& (0+255),b
  3501  0006F2  0E00               	movlw	0
  3502  0006F4  15C5               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  3503  0006F6  6FA8               	movwf	(?_printf+5)& (0+255),b
  3504  0006F8  ECFE  F012         	call	_printf	;wreg free
  3505  0006FC  0E96               	movlw	low (STR_39+12)
  3506  0006FE  0100               	movlb	0	; () banked
  3507  000700  6FA3               	movwf	printf@fmt& (0+255),b
  3508  000702  0EFF               	movlw	high (STR_39+12)
  3509  000704  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3510  000706  ECFE  F012         	call	_printf	;wreg free
  3511  00070A                     
  3512                           ;main.c: 229: 
  3513  00070A  0E00               	movlw	0
  3514  00070C  0100               	movlb	0	; () banked
  3515  00070E  27C2               	addwf	main@sdCardAddress& (0+255),f,b
  3516  000710  0E02               	movlw	2
  3517  000712  23C3               	addwfc	(main@sdCardAddress+1)& (0+255),f,b
  3518  000714  0E00               	movlw	0
  3519  000716  23C4               	addwfc	(main@sdCardAddress+2)& (0+255),f,b
  3520  000718  0E00               	movlw	0
  3521  00071A  23C5               	addwfc	(main@sdCardAddress+3)& (0+255),f,b
  3522  00071C                     
  3523                           ; BSR set to: 0
  3524                           ;main.c: 230:             case 's':
  3525  00071C  0E00               	movlw	0
  3526  00071E  6FD1               	movwf	_redBufferFull& (0+255),b
  3527                           
  3528                           ;main.c: 231:                 readBlocks = 0;
  3529  000720  EFFA  F003         	goto	l5072
  3530  000724                     l5060:
  3531                           
  3532                           ; BSR set to: 0
  3533  000724  51D0               	movf	_blueBufferFull& (0+255),w,b
  3534  000726  B4D8               	btfsc	status,2,c
  3535  000728  EF98  F003         	goto	u4331
  3536  00072C  EF9A  F003         	goto	u4330
  3537  000730                     u4331:
  3538  000730  EFFA  F003         	goto	l5072
  3539  000734                     u4330:
  3540  000734                     
  3541                           ; BSR set to: 0
  3542                           ;main.c: 232: 
  3543  000734  C0C2  F012         	movff	main@sdCardAddress,SDCARD_WriteBlock@addr
  3544  000738  C0C3  F013         	movff	main@sdCardAddress+1,SDCARD_WriteBlock@addr+1
  3545  00073C  C0C4  F014         	movff	main@sdCardAddress+2,SDCARD_WriteBlock@addr+2
  3546  000740  C0C5  F015         	movff	main@sdCardAddress+3,SDCARD_WriteBlock@addr+3
  3547  000744  0EF4               	movlw	low _sdCardBufferBlue
  3548  000746  6E16               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  3549  000748  0E00               	movlw	high _sdCardBufferBlue
  3550  00074A  6E17               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  3551  00074C  EC7B  F010         	call	_SDCARD_WriteBlock	;wreg free
  3552  000750                     l5064:
  3553  000750  EC28  F012         	call	_SDCARD_PollWriteComplete	;wreg free
  3554  000754  0100               	movlb	0	; () banked
  3555  000756  6FBA               	movwf	main@status& (0+255),b
  3556  000758  29BA               	incf	main@status& (0+255),w,b
  3557  00075A  B4D8               	btfsc	status,2,c
  3558  00075C  EFB2  F003         	goto	u4341
  3559  000760  EFB4  F003         	goto	u4340
  3560  000764                     u4341:
  3561  000764  EFA8  F003         	goto	l5064
  3562  000768                     u4340:
  3563  000768                     
  3564                           ; BSR set to: 0
  3565                           ;main.c: 234:                 printf("To spool terminal contents into a file follow thes
      +                          e instructions:\r\n");
  3566  000768  0E99               	movlw	low STR_45
  3567  00076A  6FA3               	movwf	printf@fmt& (0+255),b
  3568  00076C  0EFF               	movlw	high STR_45
  3569  00076E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3570  000770  ECFE  F012         	call	_printf	;wreg free
  3571                           
  3572                           ;main.c: 235:                 printf("\r\n");
  3573  000774  0E79               	movlw	low STR_40
  3574  000776  0100               	movlb	0	; () banked
  3575  000778  6FA3               	movwf	printf@fmt& (0+255),b
  3576  00077A  0EFF               	movlw	high STR_40
  3577  00077C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3578  00077E  ECFE  F012         	call	_printf	;wreg free
  3579                           
  3580                           ;main.c: 236:                 printf("Right mouse click on the upper left of the PuTTY w
      +                          indow\r\n");
  3581  000782  0EEC               	movlw	low STR_7
  3582  000784  0100               	movlb	0	; () banked
  3583  000786  6FA3               	movwf	printf@fmt& (0+255),b
  3584  000788  0EFF               	movlw	high STR_7
  3585  00078A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3586  00078C  C0C4  F0A5         	movff	main@sdCardAddress+2,?_printf+2
  3587  000790  C0C5  F0A6         	movff	main@sdCardAddress+3,?_printf+3
  3588  000794  6BA7               	clrf	(?_printf+4)& (0+255),b
  3589  000796  6BA8               	clrf	(?_printf+5)& (0+255),b
  3590  000798  ECFE  F012         	call	_printf	;wreg free
  3591  00079C  0EFD               	movlw	low STR_8
  3592  00079E  0100               	movlb	0	; () banked
  3593  0007A0  6FA3               	movwf	printf@fmt& (0+255),b
  3594  0007A2  0EFF               	movlw	high STR_8
  3595  0007A4  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3596  0007A6  ECFE  F012         	call	_printf	;wreg free
  3597  0007AA  0EEC               	movlw	low STR_7
  3598  0007AC  0100               	movlb	0	; () banked
  3599  0007AE  6FA3               	movwf	printf@fmt& (0+255),b
  3600  0007B0  0EFF               	movlw	high STR_7
  3601  0007B2  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3602  0007B4  0EFF               	movlw	255
  3603  0007B6  15C2               	andwf	main@sdCardAddress& (0+255),w,b
  3604  0007B8  6FA5               	movwf	(?_printf+2)& (0+255),b
  3605  0007BA  0EFF               	movlw	255
  3606  0007BC  15C3               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  3607  0007BE  6FA6               	movwf	(?_printf+3)& (0+255),b
  3608  0007C0  0E00               	movlw	0
  3609  0007C2  15C4               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  3610  0007C4  6FA7               	movwf	(?_printf+4)& (0+255),b
  3611  0007C6  0E00               	movlw	0
  3612  0007C8  15C5               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  3613  0007CA  6FA8               	movwf	(?_printf+5)& (0+255),b
  3614  0007CC  ECFE  F012         	call	_printf	;wreg free
  3615  0007D0  0E96               	movlw	low (STR_39+12)
  3616  0007D2  0100               	movlb	0	; () banked
  3617  0007D4  6FA3               	movwf	printf@fmt& (0+255),b
  3618  0007D6  0EFF               	movlw	high (STR_39+12)
  3619  0007D8  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3620  0007DA  ECFE  F012         	call	_printf	;wreg free
  3621  0007DE                     
  3622                           ;main.c: 237:                 printf("Select:     Change settings...\r\n");
  3623  0007DE  0E00               	movlw	0
  3624  0007E0  0100               	movlb	0	; () banked
  3625  0007E2  27C2               	addwf	main@sdCardAddress& (0+255),f,b
  3626  0007E4  0E02               	movlw	2
  3627  0007E6  23C3               	addwfc	(main@sdCardAddress+1)& (0+255),f,b
  3628  0007E8  0E00               	movlw	0
  3629  0007EA  23C4               	addwfc	(main@sdCardAddress+2)& (0+255),f,b
  3630  0007EC  0E00               	movlw	0
  3631  0007EE  23C5               	addwfc	(main@sdCardAddress+3)& (0+255),f,b
  3632  0007F0                     
  3633                           ; BSR set to: 0
  3634                           ;main.c: 238:                 printf("Select:     Logging\r\n");
  3635  0007F0  0E00               	movlw	0
  3636  0007F2  6FD0               	movwf	_blueBufferFull& (0+255),b
  3637  0007F4                     l5072:
  3638                           
  3639                           ;main.c: 222:                 }
  3640  0007F4  EC88  F013         	call	_EUSART1_is_rx_ready	;wreg free
  3641  0007F8  0900               	iorlw	0
  3642  0007FA  B4D8               	btfsc	status,2,c
  3643  0007FC  EF02  F004         	goto	u4351
  3644  000800  EF04  F004         	goto	u4350
  3645  000804                     u4351:
  3646  000804  EF27  F003         	goto	l5048
  3647  000808                     u4350:
  3648  000808                     
  3649                           ;main.c: 241:                 printf("Select:     Apply\r\n");
  3650  000808  EC12  F013         	call	_EUSART1_Read	;wreg free
  3651  00080C                     
  3652                           ;main.c: 242:                 printf("Press any key to start\r\n");
  3653  00080C  0E00               	movlw	0
  3654  00080E  6E4C               	movwf	_collectSamples^0,c
  3655                           
  3656                           ;main.c: 243: 
  3657  000810  EF67  F000         	goto	l4918
  3658  000814                     l5078:
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;main.c: 249:                     SDCARD_ReadBlock(sdCardAddress, sdCardBufferRed);
  3662  000814  0E00               	movlw	0
  3663  000816  6FBC               	movwf	main@readBlocks& (0+255),b
  3664  000818                     
  3665                           ; BSR set to: 0
  3666                           ;main.c: 251:                     for (i = 0; i < 512; i++) {
  3667  000818  0E1E               	movlw	low STR_65
  3668  00081A  6FA3               	movwf	printf@fmt& (0+255),b
  3669  00081C  0EFB               	movlw	high STR_65
  3670  00081E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3671  000820  ECFE  F012         	call	_printf	;wreg free
  3672  000824                     
  3673                           ;main.c: 252:                         printf("%d\r\n", sdCardBufferRed[i]);
  3674  000824  0EA0               	movlw	low STR_66
  3675  000826  0100               	movlb	0	; () banked
  3676  000828  6FA3               	movwf	printf@fmt& (0+255),b
  3677  00082A  0EFA               	movlw	high STR_66
  3678  00082C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3679  00082E  ECFE  F012         	call	_printf	;wreg free
  3680  000832                     
  3681                           ;main.c: 253:                     }
  3682  000832  0E96               	movlw	low (STR_39+12)
  3683  000834  0100               	movlb	0	; () banked
  3684  000836  6FA3               	movwf	printf@fmt& (0+255),b
  3685  000838  0EFF               	movlw	high (STR_39+12)
  3686  00083A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3687  00083C  ECFE  F012         	call	_printf	;wreg free
  3688  000840                     
  3689                           ;main.c: 254: 
  3690  000840  0EE4               	movlw	low STR_68
  3691  000842  0100               	movlb	0	; () banked
  3692  000844  6FA3               	movwf	printf@fmt& (0+255),b
  3693  000846  0EFA               	movlw	high STR_68
  3694  000848  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3695  00084A  ECFE  F012         	call	_printf	;wreg free
  3696  00084E                     
  3697                           ;main.c: 255:                     readBlocks++;
  3698  00084E  0E6D               	movlw	low STR_69
  3699  000850  0100               	movlb	0	; () banked
  3700  000852  6FA3               	movwf	printf@fmt& (0+255),b
  3701  000854  0EFD               	movlw	high STR_69
  3702  000856  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3703  000858  ECFE  F012         	call	_printf	;wreg free
  3704  00085C                     
  3705                           ;main.c: 256:                 }
  3706  00085C  0EC7               	movlw	low STR_70
  3707  00085E  0100               	movlb	0	; () banked
  3708  000860  6FA3               	movwf	printf@fmt& (0+255),b
  3709  000862  0EFE               	movlw	high STR_70
  3710  000864  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3711  000866  ECFE  F012         	call	_printf	;wreg free
  3712  00086A                     
  3713                           ;main.c: 257: 
  3714  00086A  0EF6               	movlw	low STR_71
  3715  00086C  0100               	movlb	0	; () banked
  3716  00086E  6FA3               	movwf	printf@fmt& (0+255),b
  3717  000870  0EFB               	movlw	high STR_71
  3718  000872  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3719  000874  ECFE  F012         	call	_printf	;wreg free
  3720  000878                     
  3721                           ;main.c: 258:                 printf("Spooled %d out of the %d blocks.\r\n", readBlocks,
      +                           4);
  3722  000878  0E59               	movlw	low STR_72
  3723  00087A  0100               	movlb	0	; () banked
  3724  00087C  6FA3               	movwf	printf@fmt& (0+255),b
  3725  00087E  0EFA               	movlw	high STR_72
  3726  000880  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3727  000882  ECFE  F012         	call	_printf	;wreg free
  3728  000886                     
  3729                           ;main.c: 259:                 printf("To close the file follow these instructions:\r\n")
      +                          ;
  3730  000886  0E2F               	movlw	low STR_73
  3731  000888  0100               	movlb	0	; () banked
  3732  00088A  6FA3               	movwf	printf@fmt& (0+255),b
  3733  00088C  0EFF               	movlw	high STR_73
  3734  00088E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3735  000890  ECFE  F012         	call	_printf	;wreg free
  3736  000894                     
  3737                           ;main.c: 260:                 printf("\r\n");
  3738  000894  0E39               	movlw	low STR_74
  3739  000896  0100               	movlb	0	; () banked
  3740  000898  6FA3               	movwf	printf@fmt& (0+255),b
  3741  00089A  0EFE               	movlw	high STR_74
  3742  00089C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3743  00089E  ECFE  F012         	call	_printf	;wreg free
  3744  0008A2                     
  3745                           ;main.c: 262:                 printf("Select:     Change settings...\r\n");
  3746  0008A2  EC12  F013         	call	_EUSART1_Read	;wreg free
  3747  0008A6                     l5102:
  3748  0008A6  EC88  F013         	call	_EUSART1_is_rx_ready	;wreg free
  3749  0008AA  0900               	iorlw	0
  3750  0008AC  B4D8               	btfsc	status,2,c
  3751  0008AE  EF5B  F004         	goto	u4361
  3752  0008B2  EF5D  F004         	goto	u4360
  3753  0008B6                     u4361:
  3754  0008B6  EF53  F004         	goto	l5102
  3755  0008BA                     u4360:
  3756  0008BA                     
  3757                           ;main.c: 265:                 printf("Select:     Apply\r\n");
  3758  0008BA  EC12  F013         	call	_EUSART1_Read	;wreg free
  3759                           
  3760                           ;main.c: 266: 
  3761  0008BE  EF92  F004         	goto	l5122
  3762  0008C2                     l5106:
  3763                           
  3764                           ;main.c: 267:                 break;
  3765  0008C2  C0C2  F012         	movff	main@sdCardAddress,SDCARD_ReadBlock@addr
  3766  0008C6  C0C3  F013         	movff	main@sdCardAddress+1,SDCARD_ReadBlock@addr+1
  3767  0008CA  C0C4  F014         	movff	main@sdCardAddress+2,SDCARD_ReadBlock@addr+2
  3768  0008CE  C0C5  F015         	movff	main@sdCardAddress+3,SDCARD_ReadBlock@addr+3
  3769  0008D2  0EF4               	movlw	low _sdCardBufferRed
  3770  0008D4  6E16               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  3771  0008D6  0E02               	movlw	high _sdCardBufferRed
  3772  0008D8  6E17               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  3773  0008DA  EC97  F00F         	call	_SDCARD_ReadBlock	;wreg free
  3774  0008DE                     
  3775                           ;main.c: 269: 
  3776  0008DE  0E00               	movlw	0
  3777  0008E0  0100               	movlb	0	; () banked
  3778  0008E2  6FC1               	movwf	(main@i+1)& (0+255),b
  3779  0008E4  0E00               	movlw	0
  3780  0008E6  6FC0               	movwf	main@i& (0+255),b
  3781  0008E8                     l5114:
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;main.c: 270: 
  3785  0008E8  0EE2               	movlw	low STR_75
  3786  0008EA  6FA3               	movwf	printf@fmt& (0+255),b
  3787  0008EC  0EFF               	movlw	high STR_75
  3788  0008EE  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3789  0008F0  0EF4               	movlw	low _sdCardBufferRed
  3790  0008F2  25C0               	addwf	main@i& (0+255),w,b
  3791  0008F4  6ED9               	movwf	fsr2l,c
  3792  0008F6  0E02               	movlw	high _sdCardBufferRed
  3793  0008F8  21C1               	addwfc	(main@i+1)& (0+255),w,b
  3794  0008FA  6EDA               	movwf	fsr2h,c
  3795  0008FC  50DF               	movf	indf2,w,c
  3796  0008FE  6FB7               	movwf	??_main& (0+255),b
  3797  000900  51B7               	movf	??_main& (0+255),w,b
  3798  000902  6FA5               	movwf	(?_printf+2)& (0+255),b
  3799  000904  6BA6               	clrf	(?_printf+3)& (0+255),b
  3800  000906  ECFE  F012         	call	_printf	;wreg free
  3801  00090A                     
  3802                           ;main.c: 271: 
  3803  00090A  0100               	movlb	0	; () banked
  3804  00090C  4BC0               	infsnz	main@i& (0+255),f,b
  3805  00090E  2BC1               	incf	(main@i+1)& (0+255),f,b
  3806  000910                     
  3807                           ; BSR set to: 0
  3808  000910  0E02               	movlw	2
  3809  000912  5DC1               	subwf	(main@i+1)& (0+255),w,b
  3810  000914  A0D8               	btfss	status,0,c
  3811  000916  EF8F  F004         	goto	u4371
  3812  00091A  EF91  F004         	goto	u4370
  3813  00091E                     u4371:
  3814  00091E  EF74  F004         	goto	l5114
  3815  000922                     u4370:
  3816  000922                     
  3817                           ; BSR set to: 0
  3818                           ;main.c: 273:     printf("Unknown key %c\r\n",cmd);
  3819  000922  2BBC               	incf	main@readBlocks& (0+255),f,b
  3820  000924                     l5122:
  3821                           
  3822                           ;main.c: 266: 
  3823  000924  EC88  F013         	call	_EUSART1_is_rx_ready	;wreg free
  3824  000928  0900               	iorlw	0
  3825  00092A  B4D8               	btfsc	status,2,c
  3826  00092C  EF9A  F004         	goto	u4381
  3827  000930  EF9C  F004         	goto	u4380
  3828  000934                     u4381:
  3829  000934  EF61  F004         	goto	l5106
  3830  000938                     u4380:
  3831  000938                     
  3832                           ;main.c: 276: 
  3833  000938  0E4A               	movlw	low STR_76
  3834  00093A  0100               	movlb	0	; () banked
  3835  00093C  6FA3               	movwf	printf@fmt& (0+255),b
  3836  00093E  0EFD               	movlw	high STR_76
  3837  000940  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3838  000942  C0BC  F0A5         	movff	main@readBlocks,?_printf+2
  3839  000946  6BA6               	clrf	(?_printf+3)& (0+255),b
  3840  000948  0E00               	movlw	0
  3841  00094A  6FA8               	movwf	(?_printf+5)& (0+255),b
  3842  00094C  0E04               	movlw	4
  3843  00094E  6FA7               	movwf	(?_printf+4)& (0+255),b
  3844  000950  ECFE  F012         	call	_printf	;wreg free
  3845                           
  3846                           ;main.c: 277:   }
  3847  000954  0E28               	movlw	low STR_77
  3848  000956  0100               	movlb	0	; () banked
  3849  000958  6FA3               	movwf	printf@fmt& (0+255),b
  3850  00095A  0EFC               	movlw	high STR_77
  3851  00095C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3852  00095E  ECFE  F012         	call	_printf	;wreg free
  3853                           
  3854                           ;main.c: 278:  }
  3855  000962  0E96               	movlw	low (STR_39+12)
  3856  000964  0100               	movlb	0	; () banked
  3857  000966  6FA3               	movwf	printf@fmt& (0+255),b
  3858  000968  0EFF               	movlw	high (STR_39+12)
  3859  00096A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3860  00096C  ECFE  F012         	call	_printf	;wreg free
  3861                           
  3862                           ;main.c: 279: }
  3863  000970  0EE4               	movlw	low STR_68
  3864  000972  0100               	movlb	0	; () banked
  3865  000974  6FA3               	movwf	printf@fmt& (0+255),b
  3866  000976  0EFA               	movlw	high STR_68
  3867  000978  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3868  00097A  ECFE  F012         	call	_printf	;wreg free
  3869                           
  3870                           ;main.c: 280: 
  3871  00097E  0E6D               	movlw	low STR_69
  3872  000980  0100               	movlb	0	; () banked
  3873  000982  6FA3               	movwf	printf@fmt& (0+255),b
  3874  000984  0EFD               	movlw	high STR_69
  3875  000986  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3876  000988  ECFE  F012         	call	_printf	;wreg free
  3877                           
  3878                           ;main.c: 281: void myTMR0ISR(void){
  3879  00098C  0EC7               	movlw	low STR_70
  3880  00098E  0100               	movlb	0	; () banked
  3881  000990  6FA3               	movwf	printf@fmt& (0+255),b
  3882  000992  0EFE               	movlw	high STR_70
  3883  000994  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3884  000996  ECFE  F012         	call	_printf	;wreg free
  3885                           
  3886                           ;main.c: 282:     static activeBuffer_t activeBuffer = RED;
  3887  00099A  0E6A               	movlw	low STR_82
  3888  00099C  0100               	movlb	0	; () banked
  3889  00099E  6FA3               	movwf	printf@fmt& (0+255),b
  3890  0009A0  0EFE               	movlw	high STR_82
  3891  0009A2  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3892  0009A4  ECFE  F012         	call	_printf	;wreg free
  3893                           
  3894                           ;main.c: 283:     static uint16_t bufferIndex = 0;
  3895  0009A8  0E2F               	movlw	low STR_73
  3896  0009AA  0100               	movlb	0	; () banked
  3897  0009AC  6FA3               	movwf	printf@fmt& (0+255),b
  3898  0009AE  0EFF               	movlw	high STR_73
  3899  0009B0  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3900  0009B2  ECFE  F012         	call	_printf	;wreg free
  3901                           
  3902                           ;main.c: 285:     if(collectSamples){
  3903  0009B6  EF67  F000         	goto	l4918
  3904  0009BA                     l5126:
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;main.c: 291:                 sdCardBufferBlue[bufferIndex] = ADRESH;
  3908  0009BA  0E68               	movlw	low STR_84
  3909  0009BC  6FA3               	movwf	printf@fmt& (0+255),b
  3910  0009BE  0EFF               	movlw	high STR_84
  3911  0009C0  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  3912  0009C2  C0BF  F0A5         	movff	main@cmd,?_printf+2
  3913  0009C6  6BA6               	clrf	(?_printf+3)& (0+255),b
  3914  0009C8  ECFE  F012         	call	_printf	;wreg free
  3915                           
  3916                           ;main.c: 292:                 break;
  3917  0009CC  EF67  F000         	goto	l4918
  3918  0009D0                     l5130:
  3919                           
  3920                           ; BSR set to: 0
  3921  0009D0  51BF               	movf	main@cmd& (0+255),w,b
  3922  0009D2  6FB7               	movwf	??_main& (0+255),b
  3923  0009D4  6BB8               	clrf	(??_main+1)& (0+255),b
  3924                           
  3925                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3926                           ; Switch size 1, requested type "simple"
  3927                           ; Number of cases is 1, Range of values is 0 to 0
  3928                           ; switch strategies available:
  3929                           ; Name         Instructions Cycles
  3930                           ; simple_byte            4     3 (average)
  3931                           ;	Chosen strategy is simple_byte
  3932  0009D6  51B8               	movf	(??_main+1)& (0+255),w,b
  3933  0009D8  0A00               	xorlw	0	; case 0
  3934  0009DA  B4D8               	btfsc	status,2,c
  3935  0009DC  EFF2  F004         	goto	l5272
  3936  0009E0  EFDD  F004         	goto	l5126
  3937  0009E4                     l5272:
  3938                           
  3939                           ; BSR set to: 0
  3940                           ; Switch size 1, requested type "simple"
  3941                           ; Number of cases is 13, Range of values is 43 to 122
  3942                           ; switch strategies available:
  3943                           ; Name         Instructions Cycles
  3944                           ; simple_byte           40    21 (average)
  3945                           ;	Chosen strategy is simple_byte
  3946  0009E4  51B7               	movf	??_main& (0+255),w,b
  3947  0009E6  0A2B               	xorlw	43	; case 43
  3948  0009E8  B4D8               	btfsc	status,2,c
  3949  0009EA  EFF4  F002         	goto	l5032
  3950  0009EE  0A06               	xorlw	6	; case 45
  3951  0009F0  B4D8               	btfsc	status,2,c
  3952  0009F2  EFFA  F002         	goto	l5034
  3953  0009F6  0A1C               	xorlw	28	; case 49
  3954  0009F8  B4D8               	btfsc	status,2,c
  3955  0009FA  EF41  F002         	goto	l4998
  3956  0009FE  0A0E               	xorlw	14	; case 63
  3957  000A00  B4D8               	btfsc	status,2,c
  3958  000A02  EF77  F000         	goto	l4922
  3959  000A06  0A7E               	xorlw	126	; case 65
  3960  000A08  B4D8               	btfsc	status,2,c
  3961  000A0A  EF90  F001         	goto	l4962
  3962  000A0E  0A16               	xorlw	22	; case 87
  3963  000A10  B4D8               	btfsc	status,2,c
  3964  000A12  EF11  F003         	goto	l5040
  3965  000A16  0A0D               	xorlw	13	; case 90
  3966  000A18  B4D8               	btfsc	status,2,c
  3967  000A1A  EF38  F001         	goto	l4926
  3968  000A1E  0A3B               	xorlw	59	; case 97
  3969  000A20  B4D8               	btfsc	status,2,c
  3970  000A22  EF90  F001         	goto	l4962
  3971  000A26  0A08               	xorlw	8	; case 105
  3972  000A28  B4D8               	btfsc	status,2,c
  3973  000A2A  EF6D  F001         	goto	l4950
  3974  000A2E  0A06               	xorlw	6	; case 111
  3975  000A30  B4D8               	btfsc	status,2,c
  3976  000A32  EF30  F001         	goto	l4924
  3977  000A36  0A1D               	xorlw	29	; case 114
  3978  000A38  B4D8               	btfsc	status,2,c
  3979  000A3A  EFEE  F001         	goto	l4982
  3980  000A3E  0A01               	xorlw	1	; case 115
  3981  000A40  B4D8               	btfsc	status,2,c
  3982  000A42  EF0A  F004         	goto	l5078
  3983  000A46  0A09               	xorlw	9	; case 122
  3984  000A48  B4D8               	btfsc	status,2,c
  3985  000A4A  EF53  F001         	goto	l4938
  3986  000A4E  EFDD  F004         	goto	l5126
  3987  000A52  EF27  F000         	goto	start
  3988  000A56                     __end_of_main:
  3989                           	opt callstack 0
  3990                           
  3991 ;; *************** function _hexDumpBuffer *****************
  3992 ;; Defined at:
  3993 ;;		line 275 in file "sdCard.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;  sdCardBuffer    2   77[BANK0 ] PTR unsigned char 
  3996 ;;		 -> sdCardBufferRed(512), 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  j               2   81[BANK0 ] int 
  3999 ;;  j               2   83[BANK0 ] int 
  4000 ;;  i               2   85[BANK0 ] unsigned short 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1    wreg      void 
  4003 ;; Registers used:
  4004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4010 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;Total ram usage:       10 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:   13
  4017 ;; This function calls:
  4018 ;;		_printf
  4019 ;; This function is called by:
  4020 ;;		_main
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text1
  4025  0014EE                     __ptext1:
  4026                           	opt callstack 0
  4027  0014EE                     _hexDumpBuffer:
  4028                           	opt callstack 17
  4029  0014EE                     
  4030                           ;sdCard.c: 277:     uint16_t i;;sdCard.c: 279:     printf("\r\n\n");
  4031  0014EE  0EF1               	movlw	low STR_95
  4032  0014F0  0100               	movlb	0	; () banked
  4033  0014F2  6FA3               	movwf	printf@fmt& (0+255),b
  4034  0014F4  0EFF               	movlw	high STR_95
  4035  0014F6  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4036  0014F8  ECFE  F012         	call	_printf	;wreg free
  4037  0014FC                     
  4038                           ;sdCard.c: 281:     for(i = 0; i < 512; i++) {
  4039  0014FC  0E00               	movlw	0
  4040  0014FE  0100               	movlb	0	; () banked
  4041  001500  6FB6               	movwf	(hexDumpBuffer@i+1)& (0+255),b
  4042  001502  0E00               	movlw	0
  4043  001504  6FB5               	movwf	hexDumpBuffer@i& (0+255),b
  4044  001506                     l4848:
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;sdCard.c: 282:       if(i != 0 && i % 8 == 0) printf(" ");
  4048  001506  51B5               	movf	hexDumpBuffer@i& (0+255),w,b
  4049  001508  11B6               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4050  00150A  B4D8               	btfsc	status,2,c
  4051  00150C  EF8A  F00A         	goto	u4101
  4052  001510  EF8C  F00A         	goto	u4100
  4053  001514                     u4101:
  4054  001514  EFA1  F00A         	goto	l4854
  4055  001518                     u4100:
  4056  001518                     
  4057                           ; BSR set to: 0
  4058  001518  0E07               	movlw	7
  4059  00151A  15B5               	andwf	hexDumpBuffer@i& (0+255),w,b
  4060  00151C  6FAF               	movwf	??_hexDumpBuffer& (0+255),b
  4061  00151E  0E00               	movlw	0
  4062  001520  15B6               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4063  001522  6FB0               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  4064  001524  51AF               	movf	??_hexDumpBuffer& (0+255),w,b
  4065  001526  11B0               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  4066  001528  A4D8               	btfss	status,2,c
  4067  00152A  EF99  F00A         	goto	u4111
  4068  00152E  EF9B  F00A         	goto	u4110
  4069  001532                     u4111:
  4070  001532  EFA1  F00A         	goto	l4854
  4071  001536                     u4110:
  4072  001536                     
  4073                           ; BSR set to: 0
  4074  001536  0E88               	movlw	low (STR_40+15)
  4075  001538  6FA3               	movwf	printf@fmt& (0+255),b
  4076  00153A  0EFF               	movlw	high (STR_40+15)
  4077  00153C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4078  00153E  ECFE  F012         	call	_printf	;wreg free
  4079  001542                     l4854:
  4080                           
  4081                           ;sdCard.c: 283:       if(i != 0 && i % 16 == 0) {
  4082  001542  0100               	movlb	0	; () banked
  4083  001544  51B5               	movf	hexDumpBuffer@i& (0+255),w,b
  4084  001546  11B6               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4085  001548  B4D8               	btfsc	status,2,c
  4086  00154A  EFA9  F00A         	goto	u4121
  4087  00154E  EFAB  F00A         	goto	u4120
  4088  001552                     u4121:
  4089  001552  EF04  F00B         	goto	l558
  4090  001556                     u4120:
  4091  001556                     
  4092                           ; BSR set to: 0
  4093  001556  0E0F               	movlw	15
  4094  001558  15B5               	andwf	hexDumpBuffer@i& (0+255),w,b
  4095  00155A  6FAF               	movwf	??_hexDumpBuffer& (0+255),b
  4096  00155C  0E00               	movlw	0
  4097  00155E  15B6               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4098  001560  6FB0               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  4099  001562  51AF               	movf	??_hexDumpBuffer& (0+255),w,b
  4100  001564  11B0               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  4101  001566  A4D8               	btfss	status,2,c
  4102  001568  EFB8  F00A         	goto	u4131
  4103  00156C  EFBA  F00A         	goto	u4130
  4104  001570                     u4131:
  4105  001570  EF04  F00B         	goto	l558
  4106  001574                     u4130:
  4107  001574                     
  4108                           ; BSR set to: 0
  4109                           ;sdCard.c: 284:           printf("  ");
  4110  001574  0E87               	movlw	low (STR_40+14)
  4111  001576  6FA3               	movwf	printf@fmt& (0+255),b
  4112  001578  0EFF               	movlw	high (STR_40+14)
  4113  00157A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4114  00157C  ECFE  F012         	call	_printf	;wreg free
  4115  001580                     
  4116                           ;sdCard.c: 285:           for(int j = i - 16; j < i; j++) {
  4117  001580  0EF0               	movlw	240
  4118  001582  0100               	movlb	0	; () banked
  4119  001584  25B5               	addwf	hexDumpBuffer@i& (0+255),w,b
  4120  001586  6FB1               	movwf	hexDumpBuffer@j& (0+255),b
  4121  001588  0EFF               	movlw	255
  4122  00158A  21B6               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  4123  00158C  6FB2               	movwf	(hexDumpBuffer@j+1)& (0+255),b
  4124  00158E  EFF3  F00A         	goto	l4870
  4125  001592                     l4862:
  4126                           
  4127                           ; BSR set to: 0
  4128                           ;sdCard.c: 286:               if(sdCardBuffer[j] < 32) {
  4129  001592  51B1               	movf	hexDumpBuffer@j& (0+255),w,b
  4130  001594  25AD               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4131  001596  6ED9               	movwf	fsr2l,c
  4132  001598  51B2               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  4133  00159A  21AE               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4134  00159C  6EDA               	movwf	fsr2h,c
  4135  00159E  0E20               	movlw	32
  4136  0015A0  60DF               	cpfslt	indf2,c
  4137  0015A2  EFD5  F00A         	goto	u4141
  4138  0015A6  EFD7  F00A         	goto	u4140
  4139  0015AA                     u4141:
  4140  0015AA  EFDF  F00A         	goto	l4866
  4141  0015AE                     u4140:
  4142  0015AE                     
  4143                           ; BSR set to: 0
  4144                           ;sdCard.c: 287:                 printf(".");
  4145  0015AE  0EFB               	movlw	low STR_98
  4146  0015B0  6FA3               	movwf	printf@fmt& (0+255),b
  4147  0015B2  0EFF               	movlw	high STR_98
  4148  0015B4  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4149  0015B6  ECFE  F012         	call	_printf	;wreg free
  4150                           
  4151                           ;sdCard.c: 288:               } else {
  4152  0015BA  EFF0  F00A         	goto	l4868
  4153  0015BE                     l4866:
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;sdCard.c: 289:                 printf("%c", sdCardBuffer[j]);
  4157  0015BE  0EF5               	movlw	low STR_99
  4158  0015C0  6FA3               	movwf	printf@fmt& (0+255),b
  4159  0015C2  0EFF               	movlw	high STR_99
  4160  0015C4  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4161  0015C6  51B1               	movf	hexDumpBuffer@j& (0+255),w,b
  4162  0015C8  25AD               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4163  0015CA  6ED9               	movwf	fsr2l,c
  4164  0015CC  51B2               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  4165  0015CE  21AE               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4166  0015D0  6EDA               	movwf	fsr2h,c
  4167  0015D2  50DF               	movf	indf2,w,c
  4168  0015D4  6FAF               	movwf	??_hexDumpBuffer& (0+255),b
  4169  0015D6  51AF               	movf	??_hexDumpBuffer& (0+255),w,b
  4170  0015D8  6FA5               	movwf	(?_printf+2)& (0+255),b
  4171  0015DA  6BA6               	clrf	(?_printf+3)& (0+255),b
  4172  0015DC  ECFE  F012         	call	_printf	;wreg free
  4173  0015E0                     l4868:
  4174                           
  4175                           ;sdCard.c: 291:           }
  4176  0015E0  0100               	movlb	0	; () banked
  4177  0015E2  4BB1               	infsnz	hexDumpBuffer@j& (0+255),f,b
  4178  0015E4  2BB2               	incf	(hexDumpBuffer@j+1)& (0+255),f,b
  4179  0015E6                     l4870:
  4180                           
  4181                           ; BSR set to: 0
  4182  0015E6  51B5               	movf	hexDumpBuffer@i& (0+255),w,b
  4183  0015E8  5DB1               	subwf	hexDumpBuffer@j& (0+255),w,b
  4184  0015EA  51B6               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  4185  0015EC  59B2               	subwfb	(hexDumpBuffer@j+1)& (0+255),w,b
  4186  0015EE  A0D8               	btfss	status,0,c
  4187  0015F0  EFFC  F00A         	goto	u4151
  4188  0015F4  EFFE  F00A         	goto	u4150
  4189  0015F8                     u4151:
  4190  0015F8  EFC9  F00A         	goto	l4862
  4191  0015FC                     u4150:
  4192  0015FC                     
  4193                           ; BSR set to: 0
  4194                           ;sdCard.c: 292:           printf("\r\n");
  4195  0015FC  0E96               	movlw	low (STR_39+12)
  4196  0015FE  6FA3               	movwf	printf@fmt& (0+255),b
  4197  001600  0EFF               	movlw	high (STR_39+12)
  4198  001602  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4199  001604  ECFE  F012         	call	_printf	;wreg free
  4200  001608                     l558:
  4201                           
  4202                           ;sdCard.c: 295:       printf("%02x ", sdCardBuffer[i]);
  4203  001608  0EDC               	movlw	low STR_101
  4204  00160A  0100               	movlb	0	; () banked
  4205  00160C  6FA3               	movwf	printf@fmt& (0+255),b
  4206  00160E  0EFF               	movlw	high STR_101
  4207  001610  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4208  001612  51B5               	movf	hexDumpBuffer@i& (0+255),w,b
  4209  001614  25AD               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4210  001616  6ED9               	movwf	fsr2l,c
  4211  001618  51B6               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  4212  00161A  21AE               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4213  00161C  6EDA               	movwf	fsr2h,c
  4214  00161E  50DF               	movf	indf2,w,c
  4215  001620  6FAF               	movwf	??_hexDumpBuffer& (0+255),b
  4216  001622  51AF               	movf	??_hexDumpBuffer& (0+255),w,b
  4217  001624  6FA5               	movwf	(?_printf+2)& (0+255),b
  4218  001626  6BA6               	clrf	(?_printf+3)& (0+255),b
  4219  001628  ECFE  F012         	call	_printf	;wreg free
  4220  00162C                     
  4221                           ;sdCard.c: 296:     }
  4222  00162C  0100               	movlb	0	; () banked
  4223  00162E  4BB5               	infsnz	hexDumpBuffer@i& (0+255),f,b
  4224  001630  2BB6               	incf	(hexDumpBuffer@i+1)& (0+255),f,b
  4225  001632                     
  4226                           ; BSR set to: 0
  4227  001632  0E02               	movlw	2
  4228  001634  5DB6               	subwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4229  001636  A0D8               	btfss	status,0,c
  4230  001638  EF20  F00B         	goto	u4161
  4231  00163C  EF22  F00B         	goto	u4160
  4232  001640                     u4161:
  4233  001640  EF83  F00A         	goto	l4848
  4234  001644                     u4160:
  4235  001644                     
  4236                           ; BSR set to: 0
  4237                           ;sdCard.c: 298:     printf("   ");
  4238  001644  0E86               	movlw	low (STR_40+13)
  4239  001646  6FA3               	movwf	printf@fmt& (0+255),b
  4240  001648  0EFF               	movlw	high (STR_40+13)
  4241  00164A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4242  00164C  ECFE  F012         	call	_printf	;wreg free
  4243  001650                     
  4244                           ;sdCard.c: 299:     for(int j = i - 16; j < i; j++) {
  4245  001650  0EF0               	movlw	240
  4246  001652  0100               	movlb	0	; () banked
  4247  001654  25B5               	addwf	hexDumpBuffer@i& (0+255),w,b
  4248  001656  6FB3               	movwf	hexDumpBuffer@j_1271& (0+255),b
  4249  001658  0EFF               	movlw	255
  4250  00165A  21B6               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  4251  00165C  6FB4               	movwf	(hexDumpBuffer@j_1271+1)& (0+255),b
  4252  00165E  EF5B  F00B         	goto	l4890
  4253  001662                     l4882:
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;sdCard.c: 300:         if(sdCardBuffer[j] < 32) {
  4257  001662  51B3               	movf	hexDumpBuffer@j_1271& (0+255),w,b
  4258  001664  25AD               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4259  001666  6ED9               	movwf	fsr2l,c
  4260  001668  51B4               	movf	(hexDumpBuffer@j_1271+1)& (0+255),w,b
  4261  00166A  21AE               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4262  00166C  6EDA               	movwf	fsr2h,c
  4263  00166E  0E20               	movlw	32
  4264  001670  60DF               	cpfslt	indf2,c
  4265  001672  EF3D  F00B         	goto	u4171
  4266  001676  EF3F  F00B         	goto	u4170
  4267  00167A                     u4171:
  4268  00167A  EF47  F00B         	goto	l4886
  4269  00167E                     u4170:
  4270  00167E                     
  4271                           ; BSR set to: 0
  4272                           ;sdCard.c: 301:           printf(".");
  4273  00167E  0EFB               	movlw	low STR_98
  4274  001680  6FA3               	movwf	printf@fmt& (0+255),b
  4275  001682  0EFF               	movlw	high STR_98
  4276  001684  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4277  001686  ECFE  F012         	call	_printf	;wreg free
  4278                           
  4279                           ;sdCard.c: 302:         } else {
  4280  00168A  EF58  F00B         	goto	l4888
  4281  00168E                     l4886:
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;sdCard.c: 303:           printf("%c", sdCardBuffer[j]);
  4285  00168E  0EF5               	movlw	low STR_99
  4286  001690  6FA3               	movwf	printf@fmt& (0+255),b
  4287  001692  0EFF               	movlw	high STR_99
  4288  001694  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4289  001696  51B3               	movf	hexDumpBuffer@j_1271& (0+255),w,b
  4290  001698  25AD               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4291  00169A  6ED9               	movwf	fsr2l,c
  4292  00169C  51B4               	movf	(hexDumpBuffer@j_1271+1)& (0+255),w,b
  4293  00169E  21AE               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4294  0016A0  6EDA               	movwf	fsr2h,c
  4295  0016A2  50DF               	movf	indf2,w,c
  4296  0016A4  6FAF               	movwf	??_hexDumpBuffer& (0+255),b
  4297  0016A6  51AF               	movf	??_hexDumpBuffer& (0+255),w,b
  4298  0016A8  6FA5               	movwf	(?_printf+2)& (0+255),b
  4299  0016AA  6BA6               	clrf	(?_printf+3)& (0+255),b
  4300  0016AC  ECFE  F012         	call	_printf	;wreg free
  4301  0016B0                     l4888:
  4302                           
  4303                           ;sdCard.c: 305:     }
  4304  0016B0  0100               	movlb	0	; () banked
  4305  0016B2  4BB3               	infsnz	hexDumpBuffer@j_1271& (0+255),f,b
  4306  0016B4  2BB4               	incf	(hexDumpBuffer@j_1271+1)& (0+255),f,b
  4307  0016B6                     l4890:
  4308                           
  4309                           ; BSR set to: 0
  4310  0016B6  51B5               	movf	hexDumpBuffer@i& (0+255),w,b
  4311  0016B8  5DB3               	subwf	hexDumpBuffer@j_1271& (0+255),w,b
  4312  0016BA  51B6               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  4313  0016BC  59B4               	subwfb	(hexDumpBuffer@j_1271+1)& (0+255),w,b
  4314  0016BE  A0D8               	btfss	status,0,c
  4315  0016C0  EF64  F00B         	goto	u4181
  4316  0016C4  EF66  F00B         	goto	u4180
  4317  0016C8                     u4181:
  4318  0016C8  EF31  F00B         	goto	l4882
  4319  0016CC                     u4180:
  4320  0016CC                     
  4321                           ; BSR set to: 0
  4322                           ;sdCard.c: 306:     printf("\r\n");
  4323  0016CC  0E96               	movlw	low (STR_39+12)
  4324  0016CE  6FA3               	movwf	printf@fmt& (0+255),b
  4325  0016D0  0EFF               	movlw	high (STR_39+12)
  4326  0016D2  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4327  0016D4  ECFE  F012         	call	_printf	;wreg free
  4328  0016D8  0012               	return		;funcret
  4329  0016DA                     __end_of_hexDumpBuffer:
  4330                           	opt callstack 0
  4331                           
  4332 ;; *************** function _TMR0_WriteTimer *****************
  4333 ;; Defined at:
  4334 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  timerVal        2   16[COMRAM] unsigned short 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;		None
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      void 
  4341 ;; Registers used:
  4342 ;;		wreg, status,2
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4348 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4351 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;Total ram usage:        2 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; Hardware stack levels required when called:    4
  4355 ;; This function calls:
  4356 ;;		Nothing
  4357 ;; This function is called by:
  4358 ;;		_main
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           	psect	text2
  4363  002736                     __ptext2:
  4364                           	opt callstack 0
  4365  002736                     _TMR0_WriteTimer:
  4366                           	opt callstack 26
  4367  002736                     
  4368                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  4369  002736  5012               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  4370  002738  6ED7               	movwf	215,c	;volatile
  4371  00273A                     
  4372                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  4373  00273A  C011  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4374  00273E  0012               	return		;funcret
  4375  002740                     __end_of_TMR0_WriteTimer:
  4376                           	opt callstack 0
  4377                           
  4378 ;; *************** function _SYSTEM_Initialize *****************
  4379 ;; Defined at:
  4380 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;		None
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;		None
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		wreg, status,2, status,0, cstack
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4398 ;;Total ram usage:        0 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:    6
  4401 ;; This function calls:
  4402 ;;		_ADC_Initialize
  4403 ;;		_EUSART1_Initialize
  4404 ;;		_INTERRUPT_Initialize
  4405 ;;		_OSCILLATOR_Initialize
  4406 ;;		_PIN_MANAGER_Initialize
  4407 ;;		_SPI2_Initialize
  4408 ;;		_TMR0_Initialize
  4409 ;; This function is called by:
  4410 ;;		_main
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text3
  4415  002672                     __ptext3:
  4416                           	opt callstack 0
  4417  002672                     _SYSTEM_Initialize:
  4418                           	opt callstack 24
  4419  002672                     
  4420                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4421  002672  ECBE  F013         	call	_INTERRUPT_Initialize	;wreg free
  4422  002676                     
  4423                           ;mcc_generated_files/mcc.c: 54:     SPI2_Initialize();
  4424  002676  EC92  F013         	call	_SPI2_Initialize	;wreg free
  4425  00267A                     
  4426                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  4427  00267A  ECE8  F012         	call	_PIN_MANAGER_Initialize	;wreg free
  4428  00267E                     
  4429                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  4430  00267E  EC57  F013         	call	_OSCILLATOR_Initialize	;wreg free
  4431  002682                     
  4432                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  4433  002682  ECCE  F012         	call	_TMR0_Initialize	;wreg free
  4434  002686                     
  4435                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  4436  002686  EC72  F013         	call	_ADC_Initialize	;wreg free
  4437  00268A                     
  4438                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  4439  00268A  ECEB  F011         	call	_EUSART1_Initialize	;wreg free
  4440  00268E  0012               	return		;funcret
  4441  002690                     __end_of_SYSTEM_Initialize:
  4442                           	opt callstack 0
  4443                           
  4444 ;; *************** function _TMR0_Initialize *****************
  4445 ;; Defined at:
  4446 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;		None
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;		None
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1    wreg      void 
  4453 ;; Registers used:
  4454 ;;		wreg, status,2, status,0, cstack
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;Total ram usage:        2 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; Hardware stack levels required when called:    5
  4467 ;; This function calls:
  4468 ;;		_TMR0_SetInterruptHandler
  4469 ;; This function is called by:
  4470 ;;		_SYSTEM_Initialize
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           	psect	text4
  4475  00259C                     __ptext4:
  4476                           	opt callstack 0
  4477  00259C                     _TMR0_Initialize:
  4478                           	opt callstack 24
  4479  00259C                     
  4480                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  4481  00259C  9CD5               	bcf	213,6,c	;volatile
  4482                           
  4483                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xFF;
  4484  00259E  68D7               	setf	215,c	;volatile
  4485  0025A0                     
  4486                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0xFD;
  4487  0025A0  0EFD               	movlw	253
  4488  0025A2  6ED6               	movwf	214,c	;volatile
  4489  0025A4                     
  4490                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  4491  0025A4  50D6               	movf	214,w,c	;volatile
  4492  0025A6  CFD7 F013          	movff	4055,??_TMR0_Initialize	;volatile
  4493  0025AA  6A14               	clrf	(??_TMR0_Initialize+1)^0,c
  4494  0025AC  C013  F014         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4495  0025B0  6A13               	clrf	??_TMR0_Initialize^0,c
  4496  0025B2  1013               	iorwf	??_TMR0_Initialize^0,w,c
  4497  0025B4  6E48               	movwf	_timer0ReloadVal^0,c	;volatile
  4498  0025B6  5014               	movf	(??_TMR0_Initialize+1)^0,w,c
  4499  0025B8  6E49               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  4500  0025BA                     
  4501                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  4502  0025BA  94F2               	bcf	242,2,c	;volatile
  4503  0025BC                     
  4504                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  4505  0025BC  8AF2               	bsf	242,5,c	;volatile
  4506  0025BE                     
  4507                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4508  0025BE  0E86               	movlw	low _TMR0_DefaultInterruptHandler
  4509  0025C0  6E11               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  4510  0025C2  0E27               	movlw	high _TMR0_DefaultInterruptHandler
  4511  0025C4  6E12               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  4512  0025C6  ECA0  F013         	call	_TMR0_SetInterruptHandler	;wreg free
  4513  0025CA                     
  4514                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  4515  0025CA  0E9F               	movlw	159
  4516  0025CC  6ED5               	movwf	213,c	;volatile
  4517  0025CE  0012               	return		;funcret
  4518  0025D0                     __end_of_TMR0_Initialize:
  4519                           	opt callstack 0
  4520                           
  4521 ;; *************** function _TMR0_SetInterruptHandler *****************
  4522 ;; Defined at:
  4523 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  InterruptHan    2   16[COMRAM] PTR FTN()void 
  4526 ;;		 -> myTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;		None
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  1    wreg      void 
  4531 ;; Registers used:
  4532 ;;		wreg, status,2, status,0
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4538 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4541 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;Total ram usage:        2 bytes
  4543 ;; Hardware stack levels used:    1
  4544 ;; Hardware stack levels required when called:    4
  4545 ;; This function calls:
  4546 ;;		Nothing
  4547 ;; This function is called by:
  4548 ;;		_TMR0_Initialize
  4549 ;;		_main
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552                           
  4553                           	psect	text5
  4554  002740                     __ptext5:
  4555                           	opt callstack 0
  4556  002740                     _TMR0_SetInterruptHandler:
  4557                           	opt callstack 26
  4558  002740                     
  4559                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  4560  002740  C011  F04A         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4561  002744  C012  F04B         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4562  002748  0012               	return		;funcret
  4563  00274A                     __end_of_TMR0_SetInterruptHandler:
  4564                           	opt callstack 0
  4565                           
  4566 ;; *************** function _SPI2_Initialize *****************
  4567 ;; Defined at:
  4568 ;;		line 62 in file "mcc_generated_files/spi2.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;		None
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;		None
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      void 
  4575 ;; Registers used:
  4576 ;;		wreg, status,2
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4586 ;;Total ram usage:        0 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    4
  4589 ;; This function calls:
  4590 ;;		Nothing
  4591 ;; This function is called by:
  4592 ;;		_SYSTEM_Initialize
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           	psect	text6
  4597  002724                     __ptext6:
  4598                           	opt callstack 0
  4599  002724                     _SPI2_Initialize:
  4600                           	opt callstack 25
  4601  002724                     
  4602                           ;mcc_generated_files/spi2.c: 65:     SSP2STAT = 0x40;
  4603  002724  0E40               	movlw	64
  4604  002726  6E6D               	movwf	109,c	;volatile
  4605                           
  4606                           ;mcc_generated_files/spi2.c: 66:     SSP2CON1 = 0x01;
  4607  002728  0E01               	movlw	1
  4608  00272A  6E6C               	movwf	108,c	;volatile
  4609                           
  4610                           ;mcc_generated_files/spi2.c: 67:     SSP2ADD = 0x01;
  4611  00272C  0E01               	movlw	1
  4612  00272E  6E6E               	movwf	110,c	;volatile
  4613  002730                     
  4614                           ;mcc_generated_files/spi2.c: 68:     TRISBbits.TRISB1 = 0;
  4615  002730  9293               	bcf	147,1,c	;volatile
  4616  002732                     
  4617                           ;mcc_generated_files/spi2.c: 69:     SSP2CON1bits.SSPEN = 0;
  4618  002732  9A6C               	bcf	108,5,c	;volatile
  4619  002734  0012               	return		;funcret
  4620  002736                     __end_of_SPI2_Initialize:
  4621                           	opt callstack 0
  4622                           
  4623 ;; *************** function _PIN_MANAGER_Initialize *****************
  4624 ;; Defined at:
  4625 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;		None
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;		None
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  1    wreg      void 
  4632 ;; Registers used:
  4633 ;;		wreg, status,2
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4643 ;;Total ram usage:        0 bytes
  4644 ;; Hardware stack levels used:    1
  4645 ;; Hardware stack levels required when called:    4
  4646 ;; This function calls:
  4647 ;;		Nothing
  4648 ;; This function is called by:
  4649 ;;		_SYSTEM_Initialize
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653                           	psect	text7
  4654  0025D0                     __ptext7:
  4655                           	opt callstack 0
  4656  0025D0                     _PIN_MANAGER_Initialize:
  4657                           	opt callstack 25
  4658  0025D0                     
  4659                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4660  0025D0  0E00               	movlw	0
  4661  0025D2  6E89               	movwf	137,c	;volatile
  4662                           
  4663                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4664  0025D4  0E00               	movlw	0
  4665  0025D6  6E8A               	movwf	138,c	;volatile
  4666                           
  4667                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4668  0025D8  0E00               	movlw	0
  4669  0025DA  6E8B               	movwf	139,c	;volatile
  4670  0025DC                     
  4671                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  4672  0025DC  6892               	setf	146,c	;volatile
  4673                           
  4674                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xE5;
  4675  0025DE  0EE5               	movlw	229
  4676  0025E0  6E93               	movwf	147,c	;volatile
  4677                           
  4678                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBC;
  4679  0025E2  0EBC               	movlw	188
  4680  0025E4  6E94               	movwf	148,c	;volatile
  4681                           
  4682                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  4683  0025E6  0E3C               	movlw	60
  4684  0025E8  010F               	movlb	15	; () banked
  4685  0025EA  6F3A               	movwf	58,b	;volatile
  4686                           
  4687                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x31;
  4688  0025EC  0E31               	movlw	49
  4689  0025EE  6F39               	movwf	57,b	;volatile
  4690                           
  4691                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  4692  0025F0  0E2F               	movlw	47
  4693  0025F2  6F38               	movwf	56,b	;volatile
  4694                           
  4695                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4696  0025F4  0E00               	movlw	0
  4697  0025F6  6E61               	movwf	97,c	;volatile
  4698  0025F8                     
  4699                           ; BSR set to: 15
  4700                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  4701  0025F8  8EF1               	bsf	241,7,c	;volatile
  4702  0025FA                     
  4703                           ; BSR set to: 15
  4704  0025FA  0012               	return		;funcret
  4705  0025FC                     __end_of_PIN_MANAGER_Initialize:
  4706                           	opt callstack 0
  4707                           
  4708 ;; *************** function _OSCILLATOR_Initialize *****************
  4709 ;; Defined at:
  4710 ;;		line 62 in file "mcc_generated_files/mcc.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;		None
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;		None
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  1    wreg      void 
  4717 ;; Registers used:
  4718 ;;		wreg, status,2
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4728 ;;Total ram usage:        0 bytes
  4729 ;; Hardware stack levels used:    1
  4730 ;; Hardware stack levels required when called:    4
  4731 ;; This function calls:
  4732 ;;		Nothing
  4733 ;; This function is called by:
  4734 ;;		_SYSTEM_Initialize
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           	psect	text8
  4739  0026AE                     __ptext8:
  4740                           	opt callstack 0
  4741  0026AE                     _OSCILLATOR_Initialize:
  4742                           	opt callstack 25
  4743  0026AE                     
  4744                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x70;
  4745  0026AE  0E70               	movlw	112
  4746  0026B0  6ED3               	movwf	211,c	;volatile
  4747                           
  4748                           ;mcc_generated_files/mcc.c: 67:     OSCCON2 = 0x04;
  4749  0026B2  0E04               	movlw	4
  4750  0026B4  6ED2               	movwf	210,c	;volatile
  4751                           
  4752                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x40;
  4753  0026B6  0E40               	movlw	64
  4754  0026B8  6E9B               	movwf	155,c	;volatile
  4755  0026BA                     l245:
  4756                           
  4757                           ;mcc_generated_files/mcc.c: 71:     while(PLLRDY == 0)
  4758  0026BA  AED2               	btfss	4050,7,c	;volatile
  4759  0026BC  EF62  F013         	goto	u2531
  4760  0026C0  EF64  F013         	goto	u2530
  4761  0026C4                     u2531:
  4762  0026C4  EF5D  F013         	goto	l245
  4763  0026C8                     u2530:
  4764  0026C8  0012               	return		;funcret
  4765  0026CA                     __end_of_OSCILLATOR_Initialize:
  4766                           	opt callstack 0
  4767                           
  4768 ;; *************** function _INTERRUPT_Initialize *****************
  4769 ;; Defined at:
  4770 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;		None
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;		None
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  1    wreg      void 
  4777 ;; Registers used:
  4778 ;;		None
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4788 ;;Total ram usage:        0 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; Hardware stack levels required when called:    4
  4791 ;; This function calls:
  4792 ;;		Nothing
  4793 ;; This function is called by:
  4794 ;;		_SYSTEM_Initialize
  4795 ;; This function uses a non-reentrant model
  4796 ;;
  4797                           
  4798                           	psect	text9
  4799  00277C                     __ptext9:
  4800                           	opt callstack 0
  4801  00277C                     _INTERRUPT_Initialize:
  4802                           	opt callstack 25
  4803  00277C                     
  4804                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  4805  00277C  9ED0               	bcf	208,7,c	;volatile
  4806  00277E  0012               	return		;funcret
  4807  002780                     __end_of_INTERRUPT_Initialize:
  4808                           	opt callstack 0
  4809                           
  4810 ;; *************** function _EUSART1_Initialize *****************
  4811 ;; Defined at:
  4812 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;		None
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;		None
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  1    wreg      void 
  4819 ;; Registers used:
  4820 ;;		wreg, status,2, status,0, cstack
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4830 ;;Total ram usage:        0 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; Hardware stack levels required when called:    5
  4833 ;; This function calls:
  4834 ;;		_EUSART1_SetErrorHandler
  4835 ;;		_EUSART1_SetFramingErrorHandler
  4836 ;;		_EUSART1_SetOverrunErrorHandler
  4837 ;; This function is called by:
  4838 ;;		_SYSTEM_Initialize
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842                           	psect	text10
  4843  0023D6                     __ptext10:
  4844                           	opt callstack 0
  4845  0023D6                     _EUSART1_Initialize:
  4846                           	opt callstack 24
  4847  0023D6                     
  4848                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  4849  0023D6  0E08               	movlw	8
  4850  0023D8  6EB8               	movwf	184,c	;volatile
  4851                           
  4852                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  4853  0023DA  0E90               	movlw	144
  4854  0023DC  6EAB               	movwf	171,c	;volatile
  4855                           
  4856                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  4857  0023DE  0E24               	movlw	36
  4858  0023E0  6EAC               	movwf	172,c	;volatile
  4859                           
  4860                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  4861  0023E2  0E82               	movlw	130
  4862  0023E4  6EAF               	movwf	175,c	;volatile
  4863                           
  4864                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  4865  0023E6  0E06               	movlw	6
  4866  0023E8  6EB0               	movwf	176,c	;volatile
  4867  0023EA                     
  4868                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  4869  0023EA  0E00               	movlw	0
  4870  0023EC  6E11               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  4871  0023EE  0E00               	movlw	0
  4872  0023F0  6E12               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4873  0023F2  ECAA  F013         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4874  0023F6                     
  4875                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  4876  0023F6  0E00               	movlw	0
  4877  0023F8  6E11               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  4878  0023FA  0E00               	movlw	0
  4879  0023FC  6E12               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4880  0023FE  ECA5  F013         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4881  002402                     
  4882                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  4883  002402  0E00               	movlw	0
  4884  002404  6E11               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  4885  002406  0E00               	movlw	0
  4886  002408  6E12               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  4887  00240A  ECAF  F013         	call	_EUSART1_SetErrorHandler	;wreg free
  4888  00240E                     
  4889                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  4890  00240E  0E00               	movlw	0
  4891  002410  6E4D               	movwf	_eusart1RxLastError^0,c	;volatile
  4892  002412  0012               	return		;funcret
  4893  002414                     __end_of_EUSART1_Initialize:
  4894                           	opt callstack 0
  4895                           
  4896 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4897 ;; Defined at:
  4898 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  4901 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4902 ;; Auto vars:     Size  Location     Type
  4903 ;;		None
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  1    wreg      void 
  4906 ;; Registers used:
  4907 ;;		wreg, status,2, status,0
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4913 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4916 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4917 ;;Total ram usage:        2 bytes
  4918 ;; Hardware stack levels used:    1
  4919 ;; Hardware stack levels required when called:    4
  4920 ;; This function calls:
  4921 ;;		Nothing
  4922 ;; This function is called by:
  4923 ;;		_EUSART1_Initialize
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           	psect	text11
  4928  00274A                     __ptext11:
  4929                           	opt callstack 0
  4930  00274A                     _EUSART1_SetOverrunErrorHandler:
  4931                           	opt callstack 24
  4932  00274A                     
  4933                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  4934  00274A  C011  F0CC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4935  00274E  C012  F0CD         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4936  002752  0012               	return		;funcret
  4937  002754                     __end_of_EUSART1_SetOverrunErrorHandler:
  4938                           	opt callstack 0
  4939                           
  4940 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4941 ;; Defined at:
  4942 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  4945 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;		None
  4948 ;; Return value:  Size  Location     Type
  4949 ;;                  1    wreg      void 
  4950 ;; Registers used:
  4951 ;;		wreg, status,2, status,0
  4952 ;; Tracked objects:
  4953 ;;		On entry : 0/0
  4954 ;;		On exit  : 0/0
  4955 ;;		Unchanged: 0/0
  4956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4960 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4961 ;;Total ram usage:        2 bytes
  4962 ;; Hardware stack levels used:    1
  4963 ;; Hardware stack levels required when called:    4
  4964 ;; This function calls:
  4965 ;;		Nothing
  4966 ;; This function is called by:
  4967 ;;		_EUSART1_Initialize
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           	psect	text12
  4972  002754                     __ptext12:
  4973                           	opt callstack 0
  4974  002754                     _EUSART1_SetFramingErrorHandler:
  4975                           	opt callstack 24
  4976  002754                     
  4977                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  4978  002754  C011  F0CE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4979  002758  C012  F0CF         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4980  00275C  0012               	return		;funcret
  4981  00275E                     __end_of_EUSART1_SetFramingErrorHandler:
  4982                           	opt callstack 0
  4983                           
  4984 ;; *************** function _EUSART1_SetErrorHandler *****************
  4985 ;; Defined at:
  4986 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  interruptHan    2   16[COMRAM] PTR FTN()void 
  4989 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;		None
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  1    wreg      void 
  4994 ;; Registers used:
  4995 ;;		wreg, status,2, status,0
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5001 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5004 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5005 ;;Total ram usage:        2 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; Hardware stack levels required when called:    4
  5008 ;; This function calls:
  5009 ;;		Nothing
  5010 ;; This function is called by:
  5011 ;;		_EUSART1_Initialize
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           	psect	text13
  5016  00275E                     __ptext13:
  5017                           	opt callstack 0
  5018  00275E                     _EUSART1_SetErrorHandler:
  5019                           	opt callstack 24
  5020  00275E                     
  5021                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  5022  00275E  C011  F0CA         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5023  002762  C012  F0CB         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5024  002766  0012               	return		;funcret
  5025  002768                     __end_of_EUSART1_SetErrorHandler:
  5026                           	opt callstack 0
  5027                           
  5028 ;; *************** function _ADC_Initialize *****************
  5029 ;; Defined at:
  5030 ;;		line 62 in file "mcc_generated_files/adc.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;		None
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;		None
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		wreg, status,2
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5048 ;;Total ram usage:        0 bytes
  5049 ;; Hardware stack levels used:    1
  5050 ;; Hardware stack levels required when called:    4
  5051 ;; This function calls:
  5052 ;;		Nothing
  5053 ;; This function is called by:
  5054 ;;		_SYSTEM_Initialize
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           	psect	text14
  5059  0026E4                     __ptext14:
  5060                           	opt callstack 0
  5061  0026E4                     _ADC_Initialize:
  5062                           	opt callstack 25
  5063  0026E4                     
  5064                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x11;
  5065  0026E4  0E11               	movlw	17
  5066  0026E6  6EC2               	movwf	194,c	;volatile
  5067                           
  5068                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x00;
  5069  0026E8  0E00               	movlw	0
  5070  0026EA  6EC1               	movwf	193,c	;volatile
  5071                           
  5072                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0x26;
  5073  0026EC  0E26               	movlw	38
  5074  0026EE  6EC0               	movwf	192,c	;volatile
  5075                           
  5076                           ;mcc_generated_files/adc.c: 76:     ADRESL = 0x00;
  5077  0026F0  0E00               	movlw	0
  5078  0026F2  6EC3               	movwf	195,c	;volatile
  5079                           
  5080                           ;mcc_generated_files/adc.c: 79:     ADRESH = 0x00;
  5081  0026F4  0E00               	movlw	0
  5082  0026F6  6EC4               	movwf	196,c	;volatile
  5083  0026F8  0012               	return		;funcret
  5084  0026FA                     __end_of_ADC_Initialize:
  5085                           	opt callstack 0
  5086                           
  5087 ;; *************** function _SPI2_Open *****************
  5088 ;; Defined at:
  5089 ;;		line 72 in file "mcc_generated_files/spi2.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;  spi2UniqueCo    1    wreg     enum E353
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;  spi2UniqueCo    1   17[COMRAM] enum E353
  5094 ;; Return value:  Size  Location     Type
  5095 ;;                  1    wreg      _Bool 
  5096 ;; Registers used:
  5097 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5105 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5106 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5107 ;;Total ram usage:        2 bytes
  5108 ;; Hardware stack levels used:    1
  5109 ;; Hardware stack levels required when called:    4
  5110 ;; This function calls:
  5111 ;;		Nothing
  5112 ;; This function is called by:
  5113 ;;		_main
  5114 ;; This function uses a non-reentrant model
  5115 ;;
  5116                           
  5117                           	psect	text15
  5118  001E82                     __ptext15:
  5119                           	opt callstack 0
  5120  001E82                     _SPI2_Open:
  5121                           	opt callstack 26
  5122                           
  5123                           ;incstack = 0
  5124                           ;SPI2_Open@spi2UniqueConfiguration stored from wreg
  5125  001E82  6E12               	movwf	SPI2_Open@spi2UniqueConfiguration^0,c
  5126  001E84                     
  5127                           ;mcc_generated_files/spi2.c: 72: _Bool SPI2_Open(spi2_modes_t spi2UniqueConfiguration);m
      +                          cc_generated_files/spi2.c: 73: {;mcc_generated_files/spi2.c: 74:     if(!SSP2CON1bits.SS
      +                          PEN)
  5128  001E84  BA6C               	btfsc	108,5,c	;volatile
  5129  001E86  EF47  F00F         	goto	u2621
  5130  001E8A  EF49  F00F         	goto	u2620
  5131  001E8E                     u2621:
  5132  001E8E  EF96  F00F         	goto	l71
  5133  001E92                     u2620:
  5134  001E92                     
  5135                           ;mcc_generated_files/spi2.c: 75:     {;mcc_generated_files/spi2.c: 76:         SSP2STAT 
      +                          = spi2_configuration[spi2UniqueConfiguration].stat;
  5136  001E92  5012               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5137  001E94  0D04               	mullw	4
  5138  001E96  0E01               	movlw	1
  5139  001E98  26F3               	addwf	243,f,c
  5140  001E9A  0E00               	movlw	0
  5141  001E9C  22F4               	addwfc	244,f,c
  5142  001E9E  0E07               	movlw	low _spi2_configuration
  5143  001EA0  24F3               	addwf	243,w,c
  5144  001EA2  6EF6               	movwf	tblptrl,c
  5145  001EA4  0EFA               	movlw	high _spi2_configuration
  5146  001EA6  20F4               	addwfc	244,w,c
  5147  001EA8  6EF7               	movwf	tblptrh,c
  5148  001EAA                     	if	1	;There are 3 active tblptr bytes
  5149  001EAA  6AF8               	clrf	tblptru,c
  5150  001EAC  0E00               	movlw	low (__mediumconst shr (0+16))
  5151  001EAE  22F8               	addwfc	tblptru,f,c
  5152  001EB0                     	endif
  5153  001EB0  0008               	tblrd		*
  5154  001EB2  CFF5 FF6D          	movff	tablat,3949	;volatile
  5155                           
  5156                           ;mcc_generated_files/spi2.c: 77:         SSP2CON1 = spi2_configuration[spi2UniqueConfigu
      +                          ration].con1;
  5157  001EB6  5012               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5158  001EB8  0D04               	mullw	4
  5159  001EBA  0E07               	movlw	low _spi2_configuration
  5160  001EBC  24F3               	addwf	243,w,c
  5161  001EBE  6EF6               	movwf	tblptrl,c
  5162  001EC0  0EFA               	movlw	high _spi2_configuration
  5163  001EC2  20F4               	addwfc	244,w,c
  5164  001EC4  6EF7               	movwf	tblptrh,c
  5165  001EC6                     	if	1	;There are 3 active tblptr bytes
  5166  001EC6  6AF8               	clrf	tblptru,c
  5167  001EC8  0E00               	movlw	low (__mediumconst shr (0+16))
  5168  001ECA  22F8               	addwfc	tblptru,f,c
  5169  001ECC                     	endif
  5170  001ECC  0008               	tblrd		*
  5171  001ECE  CFF5 FF6C          	movff	tablat,3948	;volatile
  5172  001ED2                     
  5173                           ;mcc_generated_files/spi2.c: 78:         SSP2CON2 = 0x00;
  5174  001ED2  0E00               	movlw	0
  5175  001ED4  6E6B               	movwf	107,c	;volatile
  5176  001ED6                     
  5177                           ;mcc_generated_files/spi2.c: 79:         SSP2ADD = spi2_configuration[spi2UniqueConfigur
      +                          ation].add;
  5178  001ED6  5012               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5179  001ED8  0D04               	mullw	4
  5180  001EDA  0E02               	movlw	2
  5181  001EDC  26F3               	addwf	243,f,c
  5182  001EDE  0E00               	movlw	0
  5183  001EE0  22F4               	addwfc	244,f,c
  5184  001EE2  0E07               	movlw	low _spi2_configuration
  5185  001EE4  24F3               	addwf	243,w,c
  5186  001EE6  6EF6               	movwf	tblptrl,c
  5187  001EE8  0EFA               	movlw	high _spi2_configuration
  5188  001EEA  20F4               	addwfc	244,w,c
  5189  001EEC  6EF7               	movwf	tblptrh,c
  5190  001EEE                     	if	1	;There are 3 active tblptr bytes
  5191  001EEE  6AF8               	clrf	tblptru,c
  5192  001EF0  0E00               	movlw	low (__mediumconst shr (0+16))
  5193  001EF2  22F8               	addwfc	tblptru,f,c
  5194  001EF4                     	endif
  5195  001EF4  0008               	tblrd		*
  5196  001EF6  CFF5 FF6E          	movff	tablat,3950	;volatile
  5197  001EFA                     
  5198                           ;mcc_generated_files/spi2.c: 80:         TRISBbits.TRISB1 = spi2_configuration[spi2Uniqu
      +                          eConfiguration].operation;
  5199  001EFA  5012               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5200  001EFC  0D04               	mullw	4
  5201  001EFE  0E03               	movlw	3
  5202  001F00  26F3               	addwf	243,f,c
  5203  001F02  0E00               	movlw	0
  5204  001F04  22F4               	addwfc	244,f,c
  5205  001F06  0E07               	movlw	low _spi2_configuration
  5206  001F08  24F3               	addwf	243,w,c
  5207  001F0A  6EF6               	movwf	tblptrl,c
  5208  001F0C  0EFA               	movlw	high _spi2_configuration
  5209  001F0E  20F4               	addwfc	244,w,c
  5210  001F10  6EF7               	movwf	tblptrh,c
  5211  001F12                     	if	1	;There are 3 active tblptr bytes
  5212  001F12  6AF8               	clrf	tblptru,c
  5213  001F14  0E00               	movlw	low (__mediumconst shr (0+16))
  5214  001F16  22F8               	addwfc	tblptru,f,c
  5215  001F18                     	endif
  5216  001F18  0008               	tblrd		*
  5217  001F1A  CFF5 F011          	movff	tablat,??_SPI2_Open
  5218  001F1E  4611               	rlncf	??_SPI2_Open^0,f,c
  5219  001F20  5093               	movf	147,w,c	;volatile
  5220  001F22  1811               	xorwf	??_SPI2_Open^0,w,c
  5221  001F24  0BFD               	andlw	-3
  5222  001F26  1811               	xorwf	??_SPI2_Open^0,w,c
  5223  001F28  6E93               	movwf	147,c	;volatile
  5224  001F2A                     
  5225                           ;mcc_generated_files/spi2.c: 81:         SSP2CON1bits.SSPEN = 1;
  5226  001F2A  8A6C               	bsf	108,5,c	;volatile
  5227  001F2C                     l71:
  5228  001F2C  0012               	return		;funcret
  5229  001F2E                     __end_of_SPI2_Open:
  5230                           	opt callstack 0
  5231                           
  5232 ;; *************** function _SPI2_Close *****************
  5233 ;; Defined at:
  5234 ;;		line 87 in file "mcc_generated_files/spi2.c"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;		None
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;		None
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  1    wreg      void 
  5241 ;; Registers used:
  5242 ;;		None
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/0
  5245 ;;		On exit  : 0/0
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5252 ;;Total ram usage:        0 bytes
  5253 ;; Hardware stack levels used:    1
  5254 ;; Hardware stack levels required when called:    4
  5255 ;; This function calls:
  5256 ;;		Nothing
  5257 ;; This function is called by:
  5258 ;;		_main
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           	psect	text16
  5263  002780                     __ptext16:
  5264                           	opt callstack 0
  5265  002780                     _SPI2_Close:
  5266                           	opt callstack 26
  5267  002780                     
  5268                           ;mcc_generated_files/spi2.c: 89:     SSP2CON1bits.SSPEN = 0;
  5269  002780  9A6C               	bcf	108,5,c	;volatile
  5270  002782  0012               	return		;funcret
  5271  002784                     __end_of_SPI2_Close:
  5272                           	opt callstack 0
  5273                           
  5274 ;; *************** function _SDCARD_WriteBlock *****************
  5275 ;; Defined at:
  5276 ;;		line 51 in file "sdCard.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;  addr            4   17[COMRAM] unsigned long 
  5279 ;;  sdCardBuffer    2   21[COMRAM] PTR unsigned char 
  5280 ;;		 -> sdCardBufferBlue(512), sdCardBufferRed(512), 
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;  i               2   23[COMRAM] unsigned short 
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      void 
  5285 ;; Registers used:
  5286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5292 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5293 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5295 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5296 ;;Total ram usage:        8 bytes
  5297 ;; Hardware stack levels used:    1
  5298 ;; Hardware stack levels required when called:    5
  5299 ;; This function calls:
  5300 ;;		_SPI2_ExchangeByte
  5301 ;; This function is called by:
  5302 ;;		_main
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           	psect	text17
  5307  0020F6                     __ptext17:
  5308                           	opt callstack 0
  5309  0020F6                     _SDCARD_WriteBlock:
  5310                           	opt callstack 25
  5311  0020F6  988A               	bcf	138,4,c	;volatile
  5312  0020F8                     
  5313                           ;sdCard.c: 57:     SPI2_ExchangeByte(0xFF);
  5314  0020F8  0EFF               	movlw	255
  5315  0020FA  EC65  F013         	call	_SPI2_ExchangeByte
  5316  0020FE                     
  5317                           ;sdCard.c: 58:     SPI2_ExchangeByte(0x40 | 24);
  5318  0020FE  0E58               	movlw	88
  5319  002100  EC65  F013         	call	_SPI2_ExchangeByte
  5320  002104                     
  5321                           ;sdCard.c: 59:     SPI2_ExchangeByte((uint8_t)((addr >> 24) & 0xFF));
  5322  002104  5015               	movf	(SDCARD_WriteBlock@addr+3)^0,w,c
  5323  002106  EC65  F013         	call	_SPI2_ExchangeByte
  5324  00210A                     
  5325                           ;sdCard.c: 60:     SPI2_ExchangeByte((uint8_t)((addr >> 16) & 0xFF));
  5326  00210A  5014               	movf	(SDCARD_WriteBlock@addr+2)^0,w,c
  5327  00210C  EC65  F013         	call	_SPI2_ExchangeByte
  5328  002110                     
  5329                           ;sdCard.c: 61:     SPI2_ExchangeByte((uint8_t)((addr >> 8) & 0xFF));
  5330  002110  5013               	movf	(SDCARD_WriteBlock@addr+1)^0,w,c
  5331  002112  EC65  F013         	call	_SPI2_ExchangeByte
  5332  002116                     
  5333                           ;sdCard.c: 62:     SPI2_ExchangeByte((uint8_t)(addr & 0xFF));
  5334  002116  5012               	movf	SDCARD_WriteBlock@addr^0,w,c
  5335  002118  EC65  F013         	call	_SPI2_ExchangeByte
  5336  00211C                     
  5337                           ;sdCard.c: 63:     SPI2_ExchangeByte(0xFF);
  5338  00211C  0EFF               	movlw	255
  5339  00211E  EC65  F013         	call	_SPI2_ExchangeByte
  5340  002122                     l3782:
  5341  002122  0EFF               	movlw	255
  5342  002124  EC65  F013         	call	_SPI2_ExchangeByte
  5343  002128  0AFF               	xorlw	255
  5344  00212A  B4D8               	btfsc	status,2,c
  5345  00212C  EF9A  F010         	goto	u2811
  5346  002130  EF9C  F010         	goto	u2810
  5347  002134                     u2811:
  5348  002134  EF91  F010         	goto	l3782
  5349  002138                     u2810:
  5350  002138                     
  5351                           ;sdCard.c: 69:     SPI2_ExchangeByte(0xFF);
  5352  002138  0EFF               	movlw	255
  5353  00213A  EC65  F013         	call	_SPI2_ExchangeByte
  5354                           
  5355                           ;sdCard.c: 70:     SPI2_ExchangeByte(0xFF);
  5356  00213E  0EFF               	movlw	255
  5357  002140  EC65  F013         	call	_SPI2_ExchangeByte
  5358                           
  5359                           ;sdCard.c: 71:     SPI2_ExchangeByte(0xFF);
  5360  002144  0EFF               	movlw	255
  5361  002146  EC65  F013         	call	_SPI2_ExchangeByte
  5362                           
  5363                           ;sdCard.c: 74:     SPI2_ExchangeByte(0xFE);
  5364  00214A  0EFE               	movlw	254
  5365  00214C  EC65  F013         	call	_SPI2_ExchangeByte
  5366  002150                     
  5367                           ;sdCard.c: 77:     for(i = 0; i < 512; i++)
  5368  002150  0E00               	movlw	0
  5369  002152  6E19               	movwf	(SDCARD_WriteBlock@i+1)^0,c
  5370  002154  0E00               	movlw	0
  5371  002156  6E18               	movwf	SDCARD_WriteBlock@i^0,c
  5372  002158                     l3792:
  5373                           
  5374                           ;sdCard.c: 78:         SPI2_ExchangeByte(sdCardBuffer[i]);
  5375  002158  5018               	movf	SDCARD_WriteBlock@i^0,w,c
  5376  00215A  2416               	addwf	SDCARD_WriteBlock@sdCardBuffer^0,w,c
  5377  00215C  6ED9               	movwf	fsr2l,c
  5378  00215E  5019               	movf	(SDCARD_WriteBlock@i+1)^0,w,c
  5379  002160  2017               	addwfc	(SDCARD_WriteBlock@sdCardBuffer+1)^0,w,c
  5380  002162  6EDA               	movwf	fsr2h,c
  5381  002164  50DF               	movf	indf2,w,c
  5382  002166  EC65  F013         	call	_SPI2_ExchangeByte
  5383  00216A  4A18               	infsnz	SDCARD_WriteBlock@i^0,f,c
  5384  00216C  2A19               	incf	(SDCARD_WriteBlock@i+1)^0,f,c
  5385  00216E  0E02               	movlw	2
  5386  002170  5C19               	subwf	(SDCARD_WriteBlock@i+1)^0,w,c
  5387  002172  A0D8               	btfss	status,0,c
  5388  002174  EFBE  F010         	goto	u2821
  5389  002178  EFC0  F010         	goto	u2820
  5390  00217C                     u2821:
  5391  00217C  EFAC  F010         	goto	l3792
  5392  002180                     u2820:
  5393  002180  888A               	bsf	138,4,c	;volatile
  5394  002182  0012               	return		;funcret
  5395  002184                     __end_of_SDCARD_WriteBlock:
  5396                           	opt callstack 0
  5397                           
  5398 ;; *************** function _SDCARD_ReadBlock *****************
  5399 ;; Defined at:
  5400 ;;		line 17 in file "sdCard.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;  addr            4   17[COMRAM] unsigned long 
  5403 ;;  sdCardBuffer    2   21[COMRAM] PTR unsigned char 
  5404 ;;		 -> sdCardBufferRed(512), 
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  i               2   23[COMRAM] unsigned short 
  5407 ;; Return value:  Size  Location     Type
  5408 ;;                  1    wreg      void 
  5409 ;; Registers used:
  5410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/0
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5416 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5417 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5419 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;Total ram usage:        8 bytes
  5421 ;; Hardware stack levels used:    1
  5422 ;; Hardware stack levels required when called:    5
  5423 ;; This function calls:
  5424 ;;		_SPI2_ExchangeByte
  5425 ;; This function is called by:
  5426 ;;		_main
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           	psect	text18
  5431  001F2E                     __ptext18:
  5432                           	opt callstack 0
  5433  001F2E                     _SDCARD_ReadBlock:
  5434                           	opt callstack 25
  5435  001F2E  988A               	bcf	138,4,c	;volatile
  5436  001F30                     
  5437                           ;sdCard.c: 22:     SPI2_ExchangeByte(0xFF);
  5438  001F30  0EFF               	movlw	255
  5439  001F32  EC65  F013         	call	_SPI2_ExchangeByte
  5440  001F36                     
  5441                           ;sdCard.c: 23:     SPI2_ExchangeByte(0x40 | 17);
  5442  001F36  0E51               	movlw	81
  5443  001F38  EC65  F013         	call	_SPI2_ExchangeByte
  5444  001F3C                     
  5445                           ;sdCard.c: 24:     SPI2_ExchangeByte((uint8_t)((addr >> 24) & 0xFF));
  5446  001F3C  5015               	movf	(SDCARD_ReadBlock@addr+3)^0,w,c
  5447  001F3E  EC65  F013         	call	_SPI2_ExchangeByte
  5448  001F42                     
  5449                           ;sdCard.c: 25:     SPI2_ExchangeByte((uint8_t)((addr >> 16) & 0xFF));
  5450  001F42  5014               	movf	(SDCARD_ReadBlock@addr+2)^0,w,c
  5451  001F44  EC65  F013         	call	_SPI2_ExchangeByte
  5452  001F48                     
  5453                           ;sdCard.c: 26:     SPI2_ExchangeByte((uint8_t)((addr >> 8) & 0xFF));
  5454  001F48  5013               	movf	(SDCARD_ReadBlock@addr+1)^0,w,c
  5455  001F4A  EC65  F013         	call	_SPI2_ExchangeByte
  5456  001F4E                     
  5457                           ;sdCard.c: 27:     SPI2_ExchangeByte((uint8_t)(addr & 0xFF));
  5458  001F4E  5012               	movf	SDCARD_ReadBlock@addr^0,w,c
  5459  001F50  EC65  F013         	call	_SPI2_ExchangeByte
  5460  001F54                     
  5461                           ;sdCard.c: 28:     SPI2_ExchangeByte(0xFF);
  5462  001F54  0EFF               	movlw	255
  5463  001F56  EC65  F013         	call	_SPI2_ExchangeByte
  5464  001F5A                     l3690:
  5465  001F5A  0EFF               	movlw	255
  5466  001F5C  EC65  F013         	call	_SPI2_ExchangeByte
  5467  001F60  0AFF               	xorlw	255
  5468  001F62  B4D8               	btfsc	status,2,c
  5469  001F64  EFB6  F00F         	goto	u2691
  5470  001F68  EFB8  F00F         	goto	u2690
  5471  001F6C                     u2691:
  5472  001F6C  EFAD  F00F         	goto	l3690
  5473  001F70                     u2690:
  5474  001F70                     l3692:
  5475  001F70  0EFF               	movlw	255
  5476  001F72  EC65  F013         	call	_SPI2_ExchangeByte
  5477  001F76  0AFF               	xorlw	255
  5478  001F78  B4D8               	btfsc	status,2,c
  5479  001F7A  EFC1  F00F         	goto	u2701
  5480  001F7E  EFC3  F00F         	goto	u2700
  5481  001F82                     u2701:
  5482  001F82  EFB8  F00F         	goto	l3692
  5483  001F86                     u2700:
  5484  001F86                     
  5485                           ;sdCard.c: 37:     for(i = 0; i < 512; i++)
  5486  001F86  0E00               	movlw	0
  5487  001F88  6E19               	movwf	(SDCARD_ReadBlock@i+1)^0,c
  5488  001F8A  0E00               	movlw	0
  5489  001F8C  6E18               	movwf	SDCARD_ReadBlock@i^0,c
  5490  001F8E                     l3700:
  5491                           
  5492                           ;sdCard.c: 38:         sdCardBuffer[i] = SPI2_ExchangeByte(0xFF);
  5493  001F8E  5018               	movf	SDCARD_ReadBlock@i^0,w,c
  5494  001F90  2416               	addwf	SDCARD_ReadBlock@sdCardBuffer^0,w,c
  5495  001F92  6ED9               	movwf	fsr2l,c
  5496  001F94  5019               	movf	(SDCARD_ReadBlock@i+1)^0,w,c
  5497  001F96  2017               	addwfc	(SDCARD_ReadBlock@sdCardBuffer+1)^0,w,c
  5498  001F98  6EDA               	movwf	fsr2h,c
  5499  001F9A  0EFF               	movlw	255
  5500  001F9C  EC65  F013         	call	_SPI2_ExchangeByte
  5501  001FA0  6EDF               	movwf	indf2,c
  5502  001FA2  4A18               	infsnz	SDCARD_ReadBlock@i^0,f,c
  5503  001FA4  2A19               	incf	(SDCARD_ReadBlock@i+1)^0,f,c
  5504  001FA6  0E02               	movlw	2
  5505  001FA8  5C19               	subwf	(SDCARD_ReadBlock@i+1)^0,w,c
  5506  001FAA  A0D8               	btfss	status,0,c
  5507  001FAC  EFDA  F00F         	goto	u2711
  5508  001FB0  EFDC  F00F         	goto	u2710
  5509  001FB4                     u2711:
  5510  001FB4  EFC7  F00F         	goto	l3700
  5511  001FB8                     u2710:
  5512  001FB8                     
  5513                           ;sdCard.c: 41:     SPI2_ExchangeByte(0xFF);
  5514  001FB8  0EFF               	movlw	255
  5515  001FBA  EC65  F013         	call	_SPI2_ExchangeByte
  5516                           
  5517                           ;sdCard.c: 42:     SPI2_ExchangeByte(0xFF);
  5518  001FBE  0EFF               	movlw	255
  5519  001FC0  EC65  F013         	call	_SPI2_ExchangeByte
  5520  001FC4  888A               	bsf	138,4,c	;volatile
  5521  001FC6  0012               	return		;funcret
  5522  001FC8                     __end_of_SDCARD_ReadBlock:
  5523                           	opt callstack 0
  5524                           
  5525 ;; *************** function _SDCARD_PollWriteComplete *****************
  5526 ;; Defined at:
  5527 ;;		line 88 in file "sdCard.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;		None
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;  status          1   17[COMRAM] unsigned char 
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  1    wreg      unsigned char 
  5534 ;; Registers used:
  5535 ;;		wreg, status,2, status,0, cstack
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5544 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5545 ;;Total ram usage:        1 bytes
  5546 ;; Hardware stack levels used:    1
  5547 ;; Hardware stack levels required when called:    5
  5548 ;; This function calls:
  5549 ;;		_SPI2_ExchangeByte
  5550 ;; This function is called by:
  5551 ;;		_main
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text19
  5556  002450                     __ptext19:
  5557                           	opt callstack 0
  5558  002450                     _SDCARD_PollWriteComplete:
  5559                           	opt callstack 25
  5560  002450  988A               	bcf	138,4,c	;volatile
  5561  002452                     
  5562                           ;sdCard.c: 93:     status = SPI2_ExchangeByte(13);
  5563  002452  0E0D               	movlw	13
  5564  002454  EC65  F013         	call	_SPI2_ExchangeByte
  5565  002458  6E12               	movwf	SDCARD_PollWriteComplete@status^0,c
  5566  00245A  888A               	bsf	138,4,c	;volatile
  5567  00245C                     
  5568                           ;sdCard.c: 96:     if (status == 0xFF) {
  5569  00245C  2812               	incf	SDCARD_PollWriteComplete@status^0,w,c
  5570  00245E  A4D8               	btfss	status,2,c
  5571  002460  EF34  F012         	goto	u2831
  5572  002464  EF36  F012         	goto	u2830
  5573  002468                     u2831:
  5574  002468  EF39  F012         	goto	l3810
  5575  00246C                     u2830:
  5576  00246C                     
  5577                           ;sdCard.c: 97:         return (0xFF);
  5578  00246C  0EFF               	movlw	255
  5579  00246E  EF43  F012         	goto	l504
  5580  002472                     l3810:
  5581                           
  5582                           ;sdCard.c: 100:         (void) SPI2_ExchangeByte(0xFF);
  5583  002472  0EFF               	movlw	255
  5584  002474  EC65  F013         	call	_SPI2_ExchangeByte
  5585                           
  5586                           ;sdCard.c: 101:         (void) SPI2_ExchangeByte(0xFF);
  5587  002478  0EFF               	movlw	255
  5588  00247A  EC65  F013         	call	_SPI2_ExchangeByte
  5589                           
  5590                           ;sdCard.c: 102:         (void) SPI2_ExchangeByte(0xFF);
  5591  00247E  0EFF               	movlw	255
  5592  002480  EC65  F013         	call	_SPI2_ExchangeByte
  5593  002484                     
  5594                           ;sdCard.c: 103:         return(status);
  5595  002484  5012               	movf	SDCARD_PollWriteComplete@status^0,w,c
  5596  002486                     l504:
  5597  002486  0012               	return		;funcret
  5598  002488                     __end_of_SDCARD_PollWriteComplete:
  5599                           	opt callstack 0
  5600                           
  5601 ;; *************** function _SDCARD_HCInitialize *****************
  5602 ;; Defined at:
  5603 ;;		line 142 in file "sdCard.c"
  5604 ;; Parameters:    Size  Location     Type
  5605 ;;  verbose         1    wreg     unsigned char 
  5606 ;; Auto vars:     Size  Location     Type
  5607 ;;  verbose         1   82[BANK0 ] unsigned char 
  5608 ;;  i               2   83[BANK0 ] int 
  5609 ;;  response        1   85[BANK0 ] unsigned char 
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      void 
  5612 ;; Registers used:
  5613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5620 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5621 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5622 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5623 ;;Total ram usage:        5 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; Hardware stack levels required when called:   14
  5626 ;; This function calls:
  5627 ;;		_SDCARD_SetIdle
  5628 ;;		_SPI2_ExchangeByte
  5629 ;;		_printf
  5630 ;; This function is called by:
  5631 ;;		_main
  5632 ;; This function uses a non-reentrant model
  5633 ;;
  5634                           
  5635                           	psect	text20
  5636  0019FC                     __ptext20:
  5637                           	opt callstack 0
  5638  0019FC                     _SDCARD_HCInitialize:
  5639                           	opt callstack 16
  5640                           
  5641                           ;incstack = 0
  5642                           ;SDCARD_HCInitialize@verbose stored from wreg
  5643  0019FC  0100               	movlb	0	; () banked
  5644  0019FE  6FB2               	movwf	SDCARD_HCInitialize@verbose& (0+255),b
  5645  001A00                     
  5646                           ;sdCard.c: 144:     uint8_t response;;sdCard.c: 146:     SDCARD_SetIdle(verbose);
  5647  001A00  0100               	movlb	0	; () banked
  5648  001A02  51B2               	movf	SDCARD_HCInitialize@verbose& (0+255),w,b
  5649  001A04  ECE4  F00F         	call	_SDCARD_SetIdle
  5650  001A08  988A               	bcf	138,4,c	;volatile
  5651  001A0A                     
  5652                           ;sdCard.c: 150:     SPI2_ExchangeByte(0xFF);
  5653  001A0A  0EFF               	movlw	255
  5654  001A0C  EC65  F013         	call	_SPI2_ExchangeByte
  5655  001A10                     
  5656                           ;sdCard.c: 151:     SPI2_ExchangeByte(0x48);
  5657  001A10  0E48               	movlw	72
  5658  001A12  EC65  F013         	call	_SPI2_ExchangeByte
  5659  001A16                     
  5660                           ;sdCard.c: 152:     SPI2_ExchangeByte(0x00);
  5661  001A16  0E00               	movlw	0
  5662  001A18  EC65  F013         	call	_SPI2_ExchangeByte
  5663  001A1C                     
  5664                           ;sdCard.c: 153:     SPI2_ExchangeByte(0x00);
  5665  001A1C  0E00               	movlw	0
  5666  001A1E  EC65  F013         	call	_SPI2_ExchangeByte
  5667  001A22                     
  5668                           ;sdCard.c: 154:     SPI2_ExchangeByte(0x01);
  5669  001A22  0E01               	movlw	1
  5670  001A24  EC65  F013         	call	_SPI2_ExchangeByte
  5671  001A28                     
  5672                           ;sdCard.c: 155:     SPI2_ExchangeByte(0xAA);
  5673  001A28  0EAA               	movlw	170
  5674  001A2A  EC65  F013         	call	_SPI2_ExchangeByte
  5675  001A2E                     
  5676                           ;sdCard.c: 156:     SPI2_ExchangeByte(0x87);
  5677  001A2E  0E87               	movlw	135
  5678  001A30  EC65  F013         	call	_SPI2_ExchangeByte
  5679  001A34                     
  5680                           ;sdCard.c: 157:     SPI2_ExchangeByte(0xFF);
  5681  001A34  0EFF               	movlw	255
  5682  001A36  EC65  F013         	call	_SPI2_ExchangeByte
  5683  001A3A                     
  5684                           ;sdCard.c: 158:     response = SPI2_ExchangeByte(0xFF);
  5685  001A3A  0EFF               	movlw	255
  5686  001A3C  EC65  F013         	call	_SPI2_ExchangeByte
  5687  001A40  0100               	movlb	0	; () banked
  5688  001A42  6FB5               	movwf	SDCARD_HCInitialize@response& (0+255),b
  5689  001A44                     
  5690                           ; BSR set to: 0
  5691                           ;sdCard.c: 161:     for(int i = 0; i < 4; i++) {
  5692  001A44  0E00               	movlw	0
  5693  001A46  6FB4               	movwf	(SDCARD_HCInitialize@i+1)& (0+255),b
  5694  001A48  0E00               	movlw	0
  5695  001A4A  6FB3               	movwf	SDCARD_HCInitialize@i& (0+255),b
  5696  001A4C                     l4796:
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;sdCard.c: 162:         printf("%x", SPI2_ExchangeByte(0xFF));
  5700  001A4C  0EF8               	movlw	low STR_87
  5701  001A4E  6FA3               	movwf	printf@fmt& (0+255),b
  5702  001A50  0EFF               	movlw	high STR_87
  5703  001A52  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  5704  001A54  0EFF               	movlw	255
  5705  001A56  EC65  F013         	call	_SPI2_ExchangeByte
  5706  001A5A  0100               	movlb	0	; () banked
  5707  001A5C  6FB1               	movwf	??_SDCARD_HCInitialize& (0+255),b
  5708  001A5E  51B1               	movf	??_SDCARD_HCInitialize& (0+255),w,b
  5709  001A60  6FA5               	movwf	(?_printf+2)& (0+255),b
  5710  001A62  6BA6               	clrf	(?_printf+3)& (0+255),b
  5711  001A64  ECFE  F012         	call	_printf	;wreg free
  5712  001A68                     
  5713                           ;sdCard.c: 163:     }
  5714  001A68  0100               	movlb	0	; () banked
  5715  001A6A  4BB3               	infsnz	SDCARD_HCInitialize@i& (0+255),f,b
  5716  001A6C  2BB4               	incf	(SDCARD_HCInitialize@i+1)& (0+255),f,b
  5717  001A6E                     
  5718                           ; BSR set to: 0
  5719  001A6E  BFB4               	btfsc	(SDCARD_HCInitialize@i+1)& (0+255),7,b
  5720  001A70  EF43  F00D         	goto	u4071
  5721  001A74  51B4               	movf	(SDCARD_HCInitialize@i+1)& (0+255),w,b
  5722  001A76  E109               	bnz	u4070
  5723  001A78  0E04               	movlw	4
  5724  001A7A  5DB3               	subwf	SDCARD_HCInitialize@i& (0+255),w,b
  5725  001A7C  A0D8               	btfss	status,0,c
  5726  001A7E  EF43  F00D         	goto	u4071
  5727  001A82  EF45  F00D         	goto	u4070
  5728  001A86                     u4071:
  5729  001A86  EF26  F00D         	goto	l4796
  5730  001A8A                     u4070:
  5731  001A8A                     
  5732                           ; BSR set to: 0
  5733                           ;sdCard.c: 164:         printf("\r\n");
  5734  001A8A  0E96               	movlw	low (STR_39+12)
  5735  001A8C  6FA3               	movwf	printf@fmt& (0+255),b
  5736  001A8E  0EFF               	movlw	high (STR_39+12)
  5737  001A90  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  5738  001A92  ECFE  F012         	call	_printf	;wreg free
  5739  001A96  888A               	bsf	138,4,c	;volatile
  5740  001A98                     
  5741                           ;sdCard.c: 167:     printf("CMD 8 Response: %x\r\n", response);
  5742  001A98  0EDD               	movlw	low STR_89
  5743  001A9A  0100               	movlb	0	; () banked
  5744  001A9C  6FA3               	movwf	printf@fmt& (0+255),b
  5745  001A9E  0EFE               	movlw	high STR_89
  5746  001AA0  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  5747  001AA2  C0B5  F0A5         	movff	SDCARD_HCInitialize@response,?_printf+2
  5748  001AA6  6BA6               	clrf	(?_printf+3)& (0+255),b
  5749  001AA8  ECFE  F012         	call	_printf	;wreg free
  5750  001AAC                     l4806:
  5751  001AAC  988A               	bcf	138,4,c	;volatile
  5752  001AAE                     
  5753                           ;sdCard.c: 175:         SPI2_ExchangeByte(0xFF);
  5754  001AAE  0EFF               	movlw	255
  5755  001AB0  EC65  F013         	call	_SPI2_ExchangeByte
  5756  001AB4                     
  5757                           ;sdCard.c: 176:         SPI2_ExchangeByte(0x77);
  5758  001AB4  0E77               	movlw	119
  5759  001AB6  EC65  F013         	call	_SPI2_ExchangeByte
  5760  001ABA                     
  5761                           ;sdCard.c: 177:         SPI2_ExchangeByte(0x00);
  5762  001ABA  0E00               	movlw	0
  5763  001ABC  EC65  F013         	call	_SPI2_ExchangeByte
  5764  001AC0                     
  5765                           ;sdCard.c: 178:         SPI2_ExchangeByte(0x00);
  5766  001AC0  0E00               	movlw	0
  5767  001AC2  EC65  F013         	call	_SPI2_ExchangeByte
  5768  001AC6                     
  5769                           ;sdCard.c: 179:         SPI2_ExchangeByte(0x00);
  5770  001AC6  0E00               	movlw	0
  5771  001AC8  EC65  F013         	call	_SPI2_ExchangeByte
  5772  001ACC                     
  5773                           ;sdCard.c: 180:         SPI2_ExchangeByte(0x00);
  5774  001ACC  0E00               	movlw	0
  5775  001ACE  EC65  F013         	call	_SPI2_ExchangeByte
  5776  001AD2                     
  5777                           ;sdCard.c: 181:         SPI2_ExchangeByte(0x00);
  5778  001AD2  0E00               	movlw	0
  5779  001AD4  EC65  F013         	call	_SPI2_ExchangeByte
  5780  001AD8                     
  5781                           ;sdCard.c: 182:         SPI2_ExchangeByte(0xFF);
  5782  001AD8  0EFF               	movlw	255
  5783  001ADA  EC65  F013         	call	_SPI2_ExchangeByte
  5784  001ADE                     
  5785                           ;sdCard.c: 183:         response = SPI2_ExchangeByte(0xFF);
  5786  001ADE  0EFF               	movlw	255
  5787  001AE0  EC65  F013         	call	_SPI2_ExchangeByte
  5788  001AE4  0100               	movlb	0	; () banked
  5789  001AE6  6FB5               	movwf	SDCARD_HCInitialize@response& (0+255),b
  5790  001AE8                     
  5791                           ; BSR set to: 0
  5792                           ;sdCard.c: 184:         printf("CMD 55 Response: %x\r\n", response);
  5793  001AE8  0EB1               	movlw	low STR_90
  5794  001AEA  6FA3               	movwf	printf@fmt& (0+255),b
  5795  001AEC  0EFE               	movlw	high STR_90
  5796  001AEE  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  5797  001AF0  C0B5  F0A5         	movff	SDCARD_HCInitialize@response,?_printf+2
  5798  001AF4  6BA6               	clrf	(?_printf+3)& (0+255),b
  5799  001AF6  ECFE  F012         	call	_printf	;wreg free
  5800                           
  5801                           ;sdCard.c: 187:         SPI2_ExchangeByte(0x69);
  5802  001AFA  0E69               	movlw	105
  5803  001AFC  EC65  F013         	call	_SPI2_ExchangeByte
  5804                           
  5805                           ;sdCard.c: 188:         SPI2_ExchangeByte(0x40);
  5806  001B00  0E40               	movlw	64
  5807  001B02  EC65  F013         	call	_SPI2_ExchangeByte
  5808                           
  5809                           ;sdCard.c: 189:         SPI2_ExchangeByte(0x00);
  5810  001B06  0E00               	movlw	0
  5811  001B08  EC65  F013         	call	_SPI2_ExchangeByte
  5812                           
  5813                           ;sdCard.c: 190:         SPI2_ExchangeByte(0x00);
  5814  001B0C  0E00               	movlw	0
  5815  001B0E  EC65  F013         	call	_SPI2_ExchangeByte
  5816                           
  5817                           ;sdCard.c: 191:         SPI2_ExchangeByte(0x00);
  5818  001B12  0E00               	movlw	0
  5819  001B14  EC65  F013         	call	_SPI2_ExchangeByte
  5820                           
  5821                           ;sdCard.c: 192:         SPI2_ExchangeByte(0x00);
  5822  001B18  0E00               	movlw	0
  5823  001B1A  EC65  F013         	call	_SPI2_ExchangeByte
  5824                           
  5825                           ;sdCard.c: 193:         SPI2_ExchangeByte(0xFF);
  5826  001B1E  0EFF               	movlw	255
  5827  001B20  EC65  F013         	call	_SPI2_ExchangeByte
  5828                           
  5829                           ;sdCard.c: 194:         response = SPI2_ExchangeByte(0xFF);
  5830  001B24  0EFF               	movlw	255
  5831  001B26  EC65  F013         	call	_SPI2_ExchangeByte
  5832  001B2A  0100               	movlb	0	; () banked
  5833  001B2C  6FB5               	movwf	SDCARD_HCInitialize@response& (0+255),b
  5834  001B2E                     
  5835                           ; BSR set to: 0
  5836  001B2E  888A               	bsf	138,4,c	;volatile
  5837  001B30                     
  5838                           ; BSR set to: 0
  5839                           ;sdCard.c: 198:         printf("ACMD 41 Response: %x\r\n", response);
  5840  001B30  0E9A               	movlw	low STR_91
  5841  001B32  6FA3               	movwf	printf@fmt& (0+255),b
  5842  001B34  0EFE               	movlw	high STR_91
  5843  001B36  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  5844  001B38  C0B5  F0A5         	movff	SDCARD_HCInitialize@response,?_printf+2
  5845  001B3C  6BA6               	clrf	(?_printf+3)& (0+255),b
  5846  001B3E  ECFE  F012         	call	_printf	;wreg free
  5847  001B42                     
  5848                           ;sdCard.c: 199:     } while(response == 0x01);
  5849  001B42  0100               	movlb	0	; () banked
  5850  001B44  05B5               	decf	SDCARD_HCInitialize@response& (0+255),w,b
  5851  001B46  B4D8               	btfsc	status,2,c
  5852  001B48  EFA8  F00D         	goto	u4081
  5853  001B4C  EFAA  F00D         	goto	u4080
  5854  001B50                     u4081:
  5855  001B50  EF56  F00D         	goto	l4806
  5856  001B54                     u4080:
  5857  001B54                     
  5858                           ; BSR set to: 0
  5859                           ;sdCard.c: 201:     if(response == 0) {
  5860  001B54  51B5               	movf	SDCARD_HCInitialize@response& (0+255),w,b
  5861  001B56  A4D8               	btfss	status,2,c
  5862  001B58  EFB0  F00D         	goto	u4091
  5863  001B5C  EFB2  F00D         	goto	u4090
  5864  001B60                     u4091:
  5865  001B60  EFBA  F00D         	goto	l4838
  5866  001B64                     u4090:
  5867  001B64                     
  5868                           ; BSR set to: 0
  5869                           ;sdCard.c: 202:         printf("Successfully Initialized SD Card\r\n");
  5870  001B64  0E27               	movlw	low STR_92
  5871  001B66  6FA3               	movwf	printf@fmt& (0+255),b
  5872  001B68  0EFD               	movlw	high STR_92
  5873  001B6A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  5874  001B6C  ECFE  F012         	call	_printf	;wreg free
  5875                           
  5876                           ;sdCard.c: 204:     } else {
  5877  001B70  EFC0  F00D         	goto	l533
  5878  001B74                     l4838:
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;sdCard.c: 205:         printf("Error Initializing SD Card\r\n");
  5882  001B74  0EAE               	movlw	low STR_93
  5883  001B76  6FA3               	movwf	printf@fmt& (0+255),b
  5884  001B78  0EFD               	movlw	high STR_93
  5885  001B7A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  5886  001B7C  ECFE  F012         	call	_printf	;wreg free
  5887  001B80                     l533:
  5888  001B80  0012               	return		;funcret
  5889  001B82                     __end_of_SDCARD_HCInitialize:
  5890                           	opt callstack 0
  5891                           
  5892 ;; *************** function _SDCARD_SetIdle *****************
  5893 ;; Defined at:
  5894 ;;		line 217 in file "sdCard.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;  verbose         1    wreg     unsigned char 
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;  verbose         1   77[BANK0 ] unsigned char 
  5899 ;;  i               2   79[BANK0 ] int 
  5900 ;;  response        1   78[BANK0 ] unsigned char 
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      void 
  5903 ;; Registers used:
  5904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5911 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;Total ram usage:        4 bytes
  5915 ;; Hardware stack levels used:    1
  5916 ;; Hardware stack levels required when called:   13
  5917 ;; This function calls:
  5918 ;;		_SPI2_ExchangeByte
  5919 ;;		_printf
  5920 ;; This function is called by:
  5921 ;;		_SDCARD_HCInitialize
  5922 ;;		_SDCARD_Initialize
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           	psect	text21
  5927  001FC8                     __ptext21:
  5928                           	opt callstack 0
  5929  001FC8                     _SDCARD_SetIdle:
  5930                           	opt callstack 16
  5931                           
  5932                           ;incstack = 0
  5933                           ;SDCARD_SetIdle@verbose stored from wreg
  5934  001FC8  0100               	movlb	0	; () banked
  5935  001FCA  6FAD               	movwf	SDCARD_SetIdle@verbose& (0+255),b
  5936  001FCC                     
  5937                           ;sdCard.c: 218:     uint8_t response;;sdCard.c: 221:     for(int i = 0; i < 10; i++) {
  5938  001FCC  0E00               	movlw	0
  5939  001FCE  0100               	movlb	0	; () banked
  5940  001FD0  6FB0               	movwf	(SDCARD_SetIdle@i+1)& (0+255),b
  5941  001FD2  0E00               	movlw	0
  5942  001FD4  6FAF               	movwf	SDCARD_SetIdle@i& (0+255),b
  5943  001FD6                     l4754:
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;sdCard.c: 222:         SPI2_ExchangeByte(0xFF);
  5947  001FD6  0EFF               	movlw	255
  5948  001FD8  EC65  F013         	call	_SPI2_ExchangeByte
  5949  001FDC                     
  5950                           ;sdCard.c: 223:     }
  5951  001FDC  0100               	movlb	0	; () banked
  5952  001FDE  4BAF               	infsnz	SDCARD_SetIdle@i& (0+255),f,b
  5953  001FE0  2BB0               	incf	(SDCARD_SetIdle@i+1)& (0+255),f,b
  5954  001FE2                     
  5955                           ; BSR set to: 0
  5956  001FE2  BFB0               	btfsc	(SDCARD_SetIdle@i+1)& (0+255),7,b
  5957  001FE4  EFFD  F00F         	goto	u4051
  5958  001FE8  51B0               	movf	(SDCARD_SetIdle@i+1)& (0+255),w,b
  5959  001FEA  E109               	bnz	u4050
  5960  001FEC  0E0A               	movlw	10
  5961  001FEE  5DAF               	subwf	SDCARD_SetIdle@i& (0+255),w,b
  5962  001FF0  A0D8               	btfss	status,0,c
  5963  001FF2  EFFD  F00F         	goto	u4051
  5964  001FF6  EFFF  F00F         	goto	u4050
  5965  001FFA                     u4051:
  5966  001FFA  EFEB  F00F         	goto	l4754
  5967  001FFE                     u4050:
  5968  001FFE                     
  5969                           ; BSR set to: 0
  5970  001FFE  988A               	bcf	138,4,c	;volatile
  5971  002000                     
  5972                           ; BSR set to: 0
  5973                           ;sdCard.c: 227:     SPI2_ExchangeByte(0xFF);
  5974  002000  0EFF               	movlw	255
  5975  002002  EC65  F013         	call	_SPI2_ExchangeByte
  5976                           
  5977                           ;sdCard.c: 228:     SPI2_ExchangeByte(0x40);
  5978  002006  0E40               	movlw	64
  5979  002008  EC65  F013         	call	_SPI2_ExchangeByte
  5980                           
  5981                           ;sdCard.c: 229:     SPI2_ExchangeByte(0x00);
  5982  00200C  0E00               	movlw	0
  5983  00200E  EC65  F013         	call	_SPI2_ExchangeByte
  5984                           
  5985                           ;sdCard.c: 230:     SPI2_ExchangeByte(0x00);
  5986  002012  0E00               	movlw	0
  5987  002014  EC65  F013         	call	_SPI2_ExchangeByte
  5988                           
  5989                           ;sdCard.c: 231:     SPI2_ExchangeByte(0x00);
  5990  002018  0E00               	movlw	0
  5991  00201A  EC65  F013         	call	_SPI2_ExchangeByte
  5992                           
  5993                           ;sdCard.c: 232:     SPI2_ExchangeByte(0x00);
  5994  00201E  0E00               	movlw	0
  5995  002020  EC65  F013         	call	_SPI2_ExchangeByte
  5996                           
  5997                           ;sdCard.c: 233:     SPI2_ExchangeByte(0x95);
  5998  002024  0E95               	movlw	149
  5999  002026  EC65  F013         	call	_SPI2_ExchangeByte
  6000                           
  6001                           ;sdCard.c: 234:     SPI2_ExchangeByte(0xFF);
  6002  00202A  0EFF               	movlw	255
  6003  00202C  EC65  F013         	call	_SPI2_ExchangeByte
  6004                           
  6005                           ;sdCard.c: 235:     response = SPI2_ExchangeByte(0xFF);
  6006  002030  0EFF               	movlw	255
  6007  002032  EC65  F013         	call	_SPI2_ExchangeByte
  6008  002036  0100               	movlb	0	; () banked
  6009  002038  6FAE               	movwf	SDCARD_SetIdle@response& (0+255),b
  6010  00203A                     
  6011                           ; BSR set to: 0
  6012  00203A  888A               	bsf	138,4,c	;volatile
  6013  00203C                     
  6014                           ; BSR set to: 0
  6015                           ;sdCard.c: 238:     if (verbose == 1) printf("CMD0, Reset Response: %x\r\n", response);
  6016  00203C  05AD               	decf	SDCARD_SetIdle@verbose& (0+255),w,b
  6017  00203E  A4D8               	btfss	status,2,c
  6018  002040  EF24  F010         	goto	u4061
  6019  002044  EF26  F010         	goto	u4060
  6020  002048                     u4061:
  6021  002048  EF2F  F010         	goto	l543
  6022  00204C                     u4060:
  6023  00204C                     
  6024                           ; BSR set to: 0
  6025  00204C  0E04               	movlw	low STR_94
  6026  00204E  6FA3               	movwf	printf@fmt& (0+255),b
  6027  002050  0EFE               	movlw	high STR_94
  6028  002052  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6029  002054  C0AE  F0A5         	movff	SDCARD_SetIdle@response,?_printf+2
  6030  002058  6BA6               	clrf	(?_printf+3)& (0+255),b
  6031  00205A  ECFE  F012         	call	_printf	;wreg free
  6032  00205E                     l543:
  6033  00205E  0012               	return		;funcret
  6034  002060                     __end_of_SDCARD_SetIdle:
  6035                           	opt callstack 0
  6036                           
  6037 ;; *************** function _printf *****************
  6038 ;; Defined at:
  6039 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  6042 ;;		 -> STR_105(3), STR_104(3), STR_103(2), STR_102(4), 
  6043 ;;		 -> STR_101(6), STR_100(3), STR_99(3), STR_98(2), 
  6044 ;;		 -> STR_97(3), STR_96(2), STR_95(4), STR_94(27), 
  6045 ;;		 -> STR_93(29), STR_92(35), STR_91(23), STR_90(22), 
  6046 ;;		 -> STR_89(21), STR_88(3), STR_87(3), STR_86(28), 
  6047 ;;		 -> STR_85(26), STR_84(17), STR_83(20), STR_82(24), 
  6048 ;;		 -> STR_81(22), STR_80(33), STR_79(58), STR_78(3), 
  6049 ;;		 -> STR_77(47), STR_76(35), STR_75(5), STR_74(25), 
  6050 ;;		 -> STR_73(20), STR_72(71), STR_71(50), STR_70(22), 
  6051 ;;		 -> STR_69(33), STR_68(58), STR_67(3), STR_66(68), 
  6052 ;;		 -> STR_65(57), STR_64(3), STR_63(5), STR_62(2), 
  6053 ;;		 -> STR_61(5), STR_60(17), STR_59(15), STR_58(3), 
  6054 ;;		 -> STR_57(5), STR_56(2), STR_55(5), STR_54(17), 
  6055 ;;		 -> STR_53(15), STR_52(78), STR_51(44), STR_50(3), 
  6056 ;;		 -> STR_49(5), STR_48(2), STR_47(5), STR_46(17), 
  6057 ;;		 -> STR_45(15), STR_44(3), STR_43(5), STR_42(2), 
  6058 ;;		 -> STR_41(5), STR_40(17), STR_39(15), STR_38(3), 
  6059 ;;		 -> STR_37(5), STR_36(2), STR_35(5), STR_34(19), 
  6060 ;;		 -> STR_33(11), STR_32(11), STR_31(29), STR_30(42), 
  6061 ;;		 -> STR_29(2), STR_28(2), STR_27(8), STR_26(52), 
  6062 ;;		 -> STR_25(32), STR_24(42), STR_23(50), STR_22(52), 
  6063 ;;		 -> STR_21(55), STR_20(43), STR_19(37), STR_18(52), 
  6064 ;;		 -> STR_17(24), STR_16(52), STR_15(24), STR_14(21), 
  6065 ;;		 -> STR_13(7), STR_12(15), STR_11(52), STR_10(3), 
  6066 ;;		 -> STR_9(5), STR_8(2), STR_7(5), STR_6(19), 
  6067 ;;		 -> STR_5(54), STR_4(5), STR_3(18), STR_2(20), 
  6068 ;;		 -> STR_1(20), 
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;  ap              2   75[BANK0 ] PTR void [1]
  6071 ;;		 -> ?_printf(2), 
  6072 ;;  ret             2    0        int 
  6073 ;; Return value:  Size  Location     Type
  6074 ;;                  2   67[BANK0 ] int 
  6075 ;; Registers used:
  6076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6077 ;; Tracked objects:
  6078 ;;		On entry : 0/0
  6079 ;;		On exit  : 0/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6082 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6083 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6085 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;Total ram usage:       10 bytes
  6087 ;; Hardware stack levels used:    1
  6088 ;; Hardware stack levels required when called:   12
  6089 ;; This function calls:
  6090 ;;		_vfprintf
  6091 ;; This function is called by:
  6092 ;;		_main
  6093 ;;		_SDCARD_HCInitialize
  6094 ;;		_SDCARD_SetIdle
  6095 ;;		_hexDumpBuffer
  6096 ;;		_SDCARD_Initialize
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100                           	psect	text22
  6101  0025FC                     __ptext22:
  6102                           	opt callstack 0
  6103  0025FC                     _printf:
  6104                           	opt callstack 18
  6105  0025FC  0EA5               	movlw	low (?_printf+2)
  6106  0025FE  0100               	movlb	0	; () banked
  6107  002600  6FAB               	movwf	printf@ap& (0+255),b
  6108  002602  0E00               	movlw	high (?_printf+2)
  6109  002604  6FAC               	movwf	(printf@ap+1)& (0+255),b
  6110  002606                     
  6111                           ; BSR set to: 0
  6112  002606  0E00               	movlw	0
  6113  002608  6F9B               	movwf	vfprintf@fp& (0+255),b
  6114  00260A  0E00               	movlw	0
  6115  00260C  6F9C               	movwf	(vfprintf@fp+1)& (0+255),b
  6116  00260E  C0A3  F09D         	movff	printf@fmt,vfprintf@fmt
  6117  002612  C0A4  F09E         	movff	printf@fmt+1,vfprintf@fmt+1
  6118  002616  0EAB               	movlw	low printf@ap
  6119  002618  6F9F               	movwf	vfprintf@ap& (0+255),b
  6120  00261A  0E00               	movlw	high printf@ap
  6121  00261C  6FA0               	movwf	(vfprintf@ap+1)& (0+255),b
  6122  00261E  ECC2  F010         	call	_vfprintf	;wreg free
  6123  002622  0012               	return		;funcret
  6124  002624                     __end_of_printf:
  6125                           	opt callstack 0
  6126                           
  6127 ;; *************** function _vfprintf *****************
  6128 ;; Defined at:
  6129 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;  fp              2   59[BANK0 ] PTR struct _IO_FILE
  6132 ;;		 -> NULL(0), 
  6133 ;;  fmt             2   61[BANK0 ] PTR const unsigned char 
  6134 ;;		 -> STR_105(3), STR_104(3), STR_103(2), STR_102(4), 
  6135 ;;		 -> STR_101(6), STR_100(3), STR_99(3), STR_98(2), 
  6136 ;;		 -> STR_97(3), STR_96(2), STR_95(4), STR_94(27), 
  6137 ;;		 -> STR_93(29), STR_92(35), STR_91(23), STR_90(22), 
  6138 ;;		 -> STR_89(21), STR_88(3), STR_87(3), STR_86(28), 
  6139 ;;		 -> STR_85(26), STR_84(17), STR_83(20), STR_82(24), 
  6140 ;;		 -> STR_81(22), STR_80(33), STR_79(58), STR_78(3), 
  6141 ;;		 -> STR_77(47), STR_76(35), STR_75(5), STR_74(25), 
  6142 ;;		 -> STR_73(20), STR_72(71), STR_71(50), STR_70(22), 
  6143 ;;		 -> STR_69(33), STR_68(58), STR_67(3), STR_66(68), 
  6144 ;;		 -> STR_65(57), STR_64(3), STR_63(5), STR_62(2), 
  6145 ;;		 -> STR_61(5), STR_60(17), STR_59(15), STR_58(3), 
  6146 ;;		 -> STR_57(5), STR_56(2), STR_55(5), STR_54(17), 
  6147 ;;		 -> STR_53(15), STR_52(78), STR_51(44), STR_50(3), 
  6148 ;;		 -> STR_49(5), STR_48(2), STR_47(5), STR_46(17), 
  6149 ;;		 -> STR_45(15), STR_44(3), STR_43(5), STR_42(2), 
  6150 ;;		 -> STR_41(5), STR_40(17), STR_39(15), STR_38(3), 
  6151 ;;		 -> STR_37(5), STR_36(2), STR_35(5), STR_34(19), 
  6152 ;;		 -> STR_33(11), STR_32(11), STR_31(29), STR_30(42), 
  6153 ;;		 -> STR_29(2), STR_28(2), STR_27(8), STR_26(52), 
  6154 ;;		 -> STR_25(32), STR_24(42), STR_23(50), STR_22(52), 
  6155 ;;		 -> STR_21(55), STR_20(43), STR_19(37), STR_18(52), 
  6156 ;;		 -> STR_17(24), STR_16(52), STR_15(24), STR_14(21), 
  6157 ;;		 -> STR_13(7), STR_12(15), STR_11(52), STR_10(3), 
  6158 ;;		 -> STR_9(5), STR_8(2), STR_7(5), STR_6(19), 
  6159 ;;		 -> STR_5(54), STR_4(5), STR_3(18), STR_2(20), 
  6160 ;;		 -> STR_1(20), 
  6161 ;;  ap              2   63[BANK0 ] PTR PTR void 
  6162 ;;		 -> printf@ap(2), 
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;  cfmt            2   65[BANK0 ] PTR unsigned char 
  6165 ;;		 -> STR_105(3), STR_104(3), STR_103(2), STR_102(4), 
  6166 ;;		 -> STR_101(6), STR_100(3), STR_99(3), STR_98(2), 
  6167 ;;		 -> STR_97(3), STR_96(2), STR_95(4), STR_94(27), 
  6168 ;;		 -> STR_93(29), STR_92(35), STR_91(23), STR_90(22), 
  6169 ;;		 -> STR_89(21), STR_88(3), STR_87(3), STR_86(28), 
  6170 ;;		 -> STR_85(26), STR_84(17), STR_83(20), STR_82(24), 
  6171 ;;		 -> STR_81(22), STR_80(33), STR_79(58), STR_78(3), 
  6172 ;;		 -> STR_77(47), STR_76(35), STR_75(5), STR_74(25), 
  6173 ;;		 -> STR_73(20), STR_72(71), STR_71(50), STR_70(22), 
  6174 ;;		 -> STR_69(33), STR_68(58), STR_67(3), STR_66(68), 
  6175 ;;		 -> STR_65(57), STR_64(3), STR_63(5), STR_62(2), 
  6176 ;;		 -> STR_61(5), STR_60(17), STR_59(15), STR_58(3), 
  6177 ;;		 -> STR_57(5), STR_56(2), STR_55(5), STR_54(17), 
  6178 ;;		 -> STR_53(15), STR_52(78), STR_51(44), STR_50(3), 
  6179 ;;		 -> STR_49(5), STR_48(2), STR_47(5), STR_46(17), 
  6180 ;;		 -> STR_45(15), STR_44(3), STR_43(5), STR_42(2), 
  6181 ;;		 -> STR_41(5), STR_40(17), STR_39(15), STR_38(3), 
  6182 ;;		 -> STR_37(5), STR_36(2), STR_35(5), STR_34(19), 
  6183 ;;		 -> STR_33(11), STR_32(11), STR_31(29), STR_30(42), 
  6184 ;;		 -> STR_29(2), STR_28(2), STR_27(8), STR_26(52), 
  6185 ;;		 -> STR_25(32), STR_24(42), STR_23(50), STR_22(52), 
  6186 ;;		 -> STR_21(55), STR_20(43), STR_19(37), STR_18(52), 
  6187 ;;		 -> STR_17(24), STR_16(52), STR_15(24), STR_14(21), 
  6188 ;;		 -> STR_13(7), STR_12(15), STR_11(52), STR_10(3), 
  6189 ;;		 -> STR_9(5), STR_8(2), STR_7(5), STR_6(19), 
  6190 ;;		 -> STR_5(54), STR_4(5), STR_3(18), STR_2(20), 
  6191 ;;		 -> STR_1(20), 
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  2   59[BANK0 ] int 
  6194 ;; Registers used:
  6195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6201 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6202 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6204 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6205 ;;Total ram usage:        8 bytes
  6206 ;; Hardware stack levels used:    1
  6207 ;; Hardware stack levels required when called:   11
  6208 ;; This function calls:
  6209 ;;		_vfpfcnvrt
  6210 ;; This function is called by:
  6211 ;;		_printf
  6212 ;; This function uses a non-reentrant model
  6213 ;;
  6214                           
  6215                           	psect	text23
  6216  002184                     __ptext23:
  6217                           	opt callstack 0
  6218  002184                     _vfprintf:
  6219                           	opt callstack 18
  6220  002184                     
  6221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6222  002184  C09D  F0A1         	movff	vfprintf@fmt,vfprintf@cfmt
  6223  002188  C09E  F0A2         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6224  00218C                     
  6225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6226  00218C  0E00               	movlw	0
  6227  00218E  0100               	movlb	0	; () banked
  6228  002190  6FC7               	movwf	(_nout+1)& (0+255),b
  6229  002192  0E00               	movlw	0
  6230  002194  6FC6               	movwf	_nout& (0+255),b
  6231                           
  6232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6233  002196  EFE0  F010         	goto	l4740
  6234  00219A                     l4738:
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6238  00219A  C09B  F07C         	movff	vfprintf@fp,vfpfcnvrt@fp
  6239  00219E  C09C  F07D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6240  0021A2  0EA1               	movlw	low vfprintf@cfmt
  6241  0021A4  6F7E               	movwf	vfpfcnvrt@fmt& (0+255),b
  6242  0021A6  0E00               	movlw	high vfprintf@cfmt
  6243  0021A8  6F7F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6244  0021AA  C09F  F080         	movff	vfprintf@ap,vfpfcnvrt@ap
  6245  0021AE  C0A0  F081         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6246  0021B2  EC2B  F005         	call	_vfpfcnvrt	;wreg free
  6247  0021B6  0100               	movlb	0	; () banked
  6248  0021B8  517C               	movf	?_vfpfcnvrt& (0+255),w,b
  6249  0021BA  27C6               	addwf	_nout& (0+255),f,b
  6250  0021BC  517D               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  6251  0021BE  23C7               	addwfc	(_nout+1)& (0+255),f,b
  6252  0021C0                     l4740:
  6253                           
  6254                           ; BSR set to: 0
  6255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6256  0021C0  C0A1  FFF6         	movff	vfprintf@cfmt,tblptrl
  6257  0021C4  C0A2  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6258  0021C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6259  0021C8  6AF8               	clrf	tblptru,c
  6260  0021CA                     	endif
  6261  0021CA                     	if	0	;tblptru may be non-zero
  6262  0021CA                     	endif
  6263  0021CA  0008               	tblrd		*
  6264  0021CC  50F5               	movf	tablat,w,c
  6265  0021CE  0900               	iorlw	0
  6266  0021D0  A4D8               	btfss	status,2,c
  6267  0021D2  EFED  F010         	goto	u4041
  6268  0021D6  EFEF  F010         	goto	u4040
  6269  0021DA                     u4041:
  6270  0021DA  EFCD  F010         	goto	l4738
  6271  0021DE                     u4040:
  6272  0021DE                     
  6273                           ; BSR set to: 0
  6274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6275  0021DE  C0C6  F09B         	movff	_nout,?_vfprintf
  6276  0021E2  C0C7  F09C         	movff	_nout+1,?_vfprintf+1
  6277  0021E6                     
  6278                           ; BSR set to: 0
  6279  0021E6  0012               	return		;funcret
  6280  0021E8                     __end_of_vfprintf:
  6281                           	opt callstack 0
  6282                           
  6283 ;; *************** function _vfpfcnvrt *****************
  6284 ;; Defined at:
  6285 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6286 ;; Parameters:    Size  Location     Type
  6287 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
  6288 ;;		 -> NULL(0), 
  6289 ;;  fmt             2   30[BANK0 ] PTR PTR unsigned char 
  6290 ;;		 -> vfprintf@cfmt(2), 
  6291 ;;  ap              2   32[BANK0 ] PTR PTR void 
  6292 ;;		 -> printf@ap(2), 
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;  llu             8   46[BANK0 ] unsigned long long 
  6295 ;;  ll              8   38[BANK0 ] long long 
  6296 ;;  f               4    0        long long 
  6297 ;;  vp              3    0        PTR void 
  6298 ;;  ct              3    0        unsigned char [3]
  6299 ;;  cp              3    0        PTR unsigned char 
  6300 ;;  done            2   54[BANK0 ] int 
  6301 ;;  i               2    0        int 
  6302 ;;  c               1   58[BANK0 ] unsigned char 
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  2   28[BANK0 ] int 
  6305 ;; Registers used:
  6306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6312 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6313 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6314 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6315 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6316 ;;Total ram usage:       31 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; Hardware stack levels required when called:   10
  6319 ;; This function calls:
  6320 ;;		_atoi
  6321 ;;		_ctoa
  6322 ;;		_dtoa
  6323 ;;		_fputc
  6324 ;;		_isdigit
  6325 ;;		_xtoa
  6326 ;; This function is called by:
  6327 ;;		_vfprintf
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           	psect	text24
  6332  000A56                     __ptext24:
  6333                           	opt callstack 0
  6334  000A56                     _vfpfcnvrt:
  6335                           	opt callstack 18
  6336  000A56                     
  6337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6338  000A56  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6339  000A5A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6340  000A5E  CFDE FFF6          	movff	postinc2,tblptrl
  6341  000A62  CFDD FFF7          	movff	postdec2,tblptrh
  6342  000A66                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6343  000A66  6AF8               	clrf	tblptru,c
  6344  000A68                     	endif
  6345  000A68                     	if	0	;tblptru may be non-zero
  6346  000A68                     	endif
  6347  000A68  0008               	tblrd		*
  6348  000A6A  50F5               	movf	tablat,w,c
  6349  000A6C  0A25               	xorlw	37
  6350  000A6E  A4D8               	btfss	status,2,c
  6351  000A70  EF3C  F005         	goto	u3901
  6352  000A74  EF3E  F005         	goto	u3900
  6353  000A78                     u3901:
  6354  000A78  EF7C  F007         	goto	l4718
  6355  000A7C                     u3900:
  6356  000A7C                     
  6357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6358  000A7C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6359  000A80  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6360  000A84  2ADE               	incf	postinc2,f,c
  6361  000A86  0E00               	movlw	0
  6362  000A88  22DD               	addwfc	postdec2,f,c
  6363  000A8A                     
  6364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6365  000A8A  0E00               	movlw	0
  6366  000A8C  6E41               	movwf	(_width+1)^0,c
  6367  000A8E  0E00               	movlw	0
  6368  000A90  6E40               	movwf	_width^0,c
  6369  000A92  C040  F044         	movff	_width,_flags
  6370  000A96  C041  F045         	movff	_width+1,_flags+1
  6371  000A9A                     
  6372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6373  000A9A  6842               	setf	_prec^0,c
  6374  000A9C  6843               	setf	(_prec+1)^0,c
  6375  000A9E                     
  6376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  6377  000A9E  0E00               	movlw	0
  6378  000AA0  0100               	movlb	0	; () banked
  6379  000AA2  6F97               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6380  000AA4  0E00               	movlw	0
  6381  000AA6  6F96               	movwf	vfpfcnvrt@done& (0+255),b
  6382                           
  6383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6384  000AA8  EF9D  F005         	goto	l4648
  6385  000AAC                     l4622:
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  6389  000AAC  8044               	bsf	_flags^0,0,c
  6390  000AAE                     l4624:
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  6394  000AAE  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6395  000AB2  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6396  000AB6  2ADE               	incf	postinc2,f,c
  6397  000AB8  0E00               	movlw	0
  6398  000ABA  22DD               	addwfc	postdec2,f,c
  6399                           
  6400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  6401  000ABC  EF9D  F005         	goto	l4648
  6402  000AC0                     l4626:
  6403                           
  6404                           ; BSR set to: 0
  6405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  6406  000AC0  8244               	bsf	_flags^0,1,c
  6407  000AC2  EF57  F005         	goto	l4624
  6408  000AC6                     l4630:
  6409                           
  6410                           ; BSR set to: 0
  6411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  6412  000AC6  8444               	bsf	_flags^0,2,c
  6413  000AC8  EF57  F005         	goto	l4624
  6414  000ACC                     l4634:
  6415                           
  6416                           ; BSR set to: 0
  6417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  6418  000ACC  8644               	bsf	_flags^0,3,c
  6419  000ACE  EF57  F005         	goto	l4624
  6420  000AD2                     l4638:
  6421                           
  6422                           ; BSR set to: 0
  6423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  6424  000AD2  8844               	bsf	_flags^0,4,c
  6425  000AD4  EF57  F005         	goto	l4624
  6426  000AD8                     l4642:
  6427                           
  6428                           ; BSR set to: 0
  6429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  6430  000AD8  0E00               	movlw	0
  6431  000ADA  6F97               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6432  000ADC  0E01               	movlw	1
  6433  000ADE  6F96               	movwf	vfpfcnvrt@done& (0+255),b
  6434                           
  6435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  6436  000AE0  EF9D  F005         	goto	l4648
  6437  000AE4                     l4646:
  6438                           
  6439                           ; BSR set to: 0
  6440  000AE4  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6441  000AE8  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6442  000AEC  CFDE FFF6          	movff	postinc2,tblptrl
  6443  000AF0  CFDD FFF7          	movff	postdec2,tblptrh
  6444  000AF4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6445  000AF4  6AF8               	clrf	tblptru,c
  6446  000AF6                     	endif
  6447  000AF6                     	if	0	;tblptru may be non-zero
  6448  000AF6                     	endif
  6449  000AF6  0008               	tblrd		*
  6450  000AF8  50F5               	movf	tablat,w,c
  6451  000AFA  6F82               	movwf	??_vfpfcnvrt& (0+255),b
  6452  000AFC  6B83               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  6453                           
  6454                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6455                           ; Switch size 1, requested type "simple"
  6456                           ; Number of cases is 1, Range of values is 0 to 0
  6457                           ; switch strategies available:
  6458                           ; Name         Instructions Cycles
  6459                           ; simple_byte            4     3 (average)
  6460                           ;	Chosen strategy is simple_byte
  6461  000AFE  5183               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6462  000B00  0A00               	xorlw	0	; case 0
  6463  000B02  B4D8               	btfsc	status,2,c
  6464  000B04  EF86  F005         	goto	l5274
  6465  000B08  EF6C  F005         	goto	l4642
  6466  000B0C                     l5274:
  6467                           
  6468                           ; BSR set to: 0
  6469                           ; Switch size 1, requested type "simple"
  6470                           ; Number of cases is 5, Range of values is 32 to 48
  6471                           ; switch strategies available:
  6472                           ; Name         Instructions Cycles
  6473                           ; simple_byte           16     9 (average)
  6474                           ;	Chosen strategy is simple_byte
  6475  000B0C  5182               	movf	??_vfpfcnvrt& (0+255),w,b
  6476  000B0E  0A20               	xorlw	32	; case 32
  6477  000B10  B4D8               	btfsc	status,2,c
  6478  000B12  EF66  F005         	goto	l4634
  6479  000B16  0A03               	xorlw	3	; case 35
  6480  000B18  B4D8               	btfsc	status,2,c
  6481  000B1A  EF69  F005         	goto	l4638
  6482  000B1E  0A08               	xorlw	8	; case 43
  6483  000B20  B4D8               	btfsc	status,2,c
  6484  000B22  EF63  F005         	goto	l4630
  6485  000B26  0A06               	xorlw	6	; case 45
  6486  000B28  B4D8               	btfsc	status,2,c
  6487  000B2A  EF56  F005         	goto	l4622
  6488  000B2E  0A1D               	xorlw	29	; case 48
  6489  000B30  B4D8               	btfsc	status,2,c
  6490  000B32  EF60  F005         	goto	l4626
  6491  000B36  EF6C  F005         	goto	l4642
  6492  000B3A                     l4648:
  6493                           
  6494                           ; BSR set to: 0
  6495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6496  000B3A  5196               	movf	vfpfcnvrt@done& (0+255),w,b
  6497  000B3C  1197               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  6498  000B3E  B4D8               	btfsc	status,2,c
  6499  000B40  EFA4  F005         	goto	u3911
  6500  000B44  EFA6  F005         	goto	u3910
  6501  000B48                     u3911:
  6502  000B48  EF72  F005         	goto	l4646
  6503  000B4C                     u3910:
  6504  000B4C                     
  6505                           ; BSR set to: 0
  6506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  6507  000B4C  A044               	btfss	_flags^0,0,c
  6508  000B4E  EFAB  F005         	goto	u3921
  6509  000B52  EFAD  F005         	goto	u3920
  6510  000B56                     u3921:
  6511  000B56  EFAE  F005         	goto	l4652
  6512  000B5A                     u3920:
  6513  000B5A                     
  6514                           ; BSR set to: 0
  6515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  6516  000B5A  9244               	bcf	_flags^0,1,c
  6517  000B5C                     l4652:
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  6521  000B5C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6522  000B60  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6523  000B64  CFDE FFF6          	movff	postinc2,tblptrl
  6524  000B68  CFDD FFF7          	movff	postdec2,tblptrh
  6525  000B6C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6526  000B6C  6AF8               	clrf	tblptru,c
  6527  000B6E                     	endif
  6528  000B6E                     	if	0	;tblptru may be non-zero
  6529  000B6E                     	endif
  6530  000B6E  0008               	tblrd		*
  6531  000B70  50F5               	movf	tablat,w,c
  6532  000B72  0A2A               	xorlw	42
  6533  000B74  A4D8               	btfss	status,2,c
  6534  000B76  EFBF  F005         	goto	u3931
  6535  000B7A  EFC1  F005         	goto	u3930
  6536  000B7E                     u3931:
  6537  000B7E  EFEA  F005         	goto	l4660
  6538  000B82                     u3930:
  6539  000B82                     
  6540                           ; BSR set to: 0
  6541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6542  000B82  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6543  000B86  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6544  000B8A  2ADE               	incf	postinc2,f,c
  6545  000B8C  0E00               	movlw	0
  6546  000B8E  22DD               	addwfc	postdec2,f,c
  6547                           
  6548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6549  000B90  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6550  000B94  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6551  000B98  CFDF F082          	movff	indf2,??_vfpfcnvrt
  6552  000B9C  0E02               	movlw	2
  6553  000B9E  26DE               	addwf	postinc2,f,c
  6554  000BA0  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
  6555  000BA4  0E00               	movlw	0
  6556  000BA6  22DD               	addwfc	postdec2,f,c
  6557  000BA8  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6558  000BAC  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6559  000BB0  CFDE F040          	movff	postinc2,_width
  6560  000BB4  CFDD F041          	movff	postdec2,_width+1
  6561  000BB8                     
  6562                           ; BSR set to: 0
  6563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6564  000BB8  BE41               	btfsc	(_width+1)^0,7,c
  6565  000BBA  EFE3  F005         	goto	u3940
  6566  000BBE  EFE1  F005         	goto	u3941
  6567  000BC2                     u3941:
  6568  000BC2  EF2F  F006         	goto	l4670
  6569  000BC6                     u3940:
  6570  000BC6                     
  6571                           ; BSR set to: 0
  6572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6573  000BC6  8044               	bsf	_flags^0,0,c
  6574                           
  6575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6576  000BC8  6C40               	negf	_width^0,c
  6577  000BCA  1E41               	comf	(_width+1)^0,f,c
  6578  000BCC  B0D8               	btfsc	status,0,c
  6579  000BCE  2A41               	incf	(_width+1)^0,f,c
  6580  000BD0  EF2F  F006         	goto	l4670
  6581  000BD4                     l4660:
  6582                           
  6583                           ; BSR set to: 0
  6584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6585  000BD4  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6586  000BD8  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6587  000BDC  CFDE F018          	movff	postinc2,atoi@s
  6588  000BE0  CFDD F019          	movff	postdec2,atoi@s+1
  6589  000BE4  EC6D  F00B         	call	_atoi	;wreg free
  6590  000BE8  C018  F040         	movff	?_atoi,_width
  6591  000BEC  C019  F041         	movff	?_atoi+1,_width+1
  6592                           
  6593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6594  000BF0  EF01  F006         	goto	l4664
  6595  000BF4                     l4662:
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6599  000BF4  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6600  000BF8  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6601  000BFC  2ADE               	incf	postinc2,f,c
  6602  000BFE  0E00               	movlw	0
  6603  000C00  22DD               	addwfc	postdec2,f,c
  6604  000C02                     l4664:
  6605  000C02  0ED0               	movlw	208
  6606  000C04  0100               	movlb	0	; () banked
  6607  000C06  6F82               	movwf	??_vfpfcnvrt& (0+255),b
  6608  000C08  0EFF               	movlw	255
  6609  000C0A  6F83               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6610  000C0C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6611  000C10  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6612  000C14  CFDE FFF6          	movff	postinc2,tblptrl
  6613  000C18  CFDD FFF7          	movff	postdec2,tblptrh
  6614  000C1C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6615  000C1C  6AF8               	clrf	tblptru,c
  6616  000C1E                     	endif
  6617  000C1E                     	if	0	;tblptru may be non-zero
  6618  000C1E                     	endif
  6619  000C1E  0008               	tblrd		*
  6620  000C20  50F5               	movf	tablat,w,c
  6621  000C22  6F84               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6622  000C24  6B85               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6623  000C26  5182               	movf	??_vfpfcnvrt& (0+255),w,b
  6624  000C28  2784               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6625  000C2A  5183               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6626  000C2C  2385               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6627  000C2E  5185               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6628  000C30  E10A               	bnz	u3950
  6629  000C32  0E0A               	movlw	10
  6630  000C34  5D84               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6631  000C36  A0D8               	btfss	status,0,c
  6632  000C38  EF20  F006         	goto	u3951
  6633  000C3C  EF23  F006         	goto	u3950
  6634  000C40                     u3951:
  6635  000C40  0E01               	movlw	1
  6636  000C42  EF24  F006         	goto	u3960
  6637  000C46                     u3950:
  6638  000C46  0E00               	movlw	0
  6639  000C48                     u3960:
  6640  000C48  6F98               	movwf	_vfpfcnvrt$1378& (0+255),b
  6641  000C4A  6B99               	clrf	(_vfpfcnvrt$1378+1)& (0+255),b
  6642  000C4C                     
  6643                           ; BSR set to: 0
  6644  000C4C  5198               	movf	_vfpfcnvrt$1378& (0+255),w,b
  6645  000C4E  1199               	iorwf	(_vfpfcnvrt$1378+1)& (0+255),w,b
  6646  000C50  A4D8               	btfss	status,2,c
  6647  000C52  EF2D  F006         	goto	u3971
  6648  000C56  EF2F  F006         	goto	u3970
  6649  000C5A                     u3971:
  6650  000C5A  EFFA  F005         	goto	l4662
  6651  000C5E                     u3970:
  6652  000C5E                     l4670:
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  6656  000C5E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6657  000C62  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6658  000C66  CFDE FFF6          	movff	postinc2,tblptrl
  6659  000C6A  CFDD FFF7          	movff	postdec2,tblptrh
  6660  000C6E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6661  000C6E  6AF8               	clrf	tblptru,c
  6662  000C70                     	endif
  6663  000C70                     	if	0	;tblptru may be non-zero
  6664  000C70                     	endif
  6665  000C70  0008               	tblrd		*
  6666  000C72  50F5               	movf	tablat,w,c
  6667  000C74  0A63               	xorlw	99
  6668  000C76  A4D8               	btfss	status,2,c
  6669  000C78  EF40  F006         	goto	u3981
  6670  000C7C  EF42  F006         	goto	u3980
  6671  000C80                     u3981:
  6672  000C80  EF69  F006         	goto	l4678
  6673  000C84                     u3980:
  6674  000C84                     
  6675                           ; BSR set to: 0
  6676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  6677  000C84  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6678  000C88  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6679  000C8C  2ADE               	incf	postinc2,f,c
  6680  000C8E  0E00               	movlw	0
  6681  000C90  22DD               	addwfc	postdec2,f,c
  6682                           
  6683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6684  000C92  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6685  000C96  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6686  000C9A  CFDF F082          	movff	indf2,??_vfpfcnvrt
  6687  000C9E  0E02               	movlw	2
  6688  000CA0  26DE               	addwf	postinc2,f,c
  6689  000CA2  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
  6690  000CA6  0E00               	movlw	0
  6691  000CA8  22DD               	addwfc	postdec2,f,c
  6692  000CAA  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6693  000CAE  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6694  000CB2  50DF               	movf	indf2,w,c
  6695  000CB4  6F9A               	movwf	vfpfcnvrt@c& (0+255),b
  6696  000CB6                     
  6697                           ; BSR set to: 0
  6698                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  6699  000CB6  C07C  F02E         	movff	vfpfcnvrt@fp,ctoa@fp
  6700  000CBA  C07D  F02F         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  6701  000CBE  C09A  F030         	movff	vfpfcnvrt@c,ctoa@c
  6702  000CC2  EC53  F011         	call	_ctoa	;wreg free
  6703  000CC6  C02E  F07C         	movff	?_ctoa,?_vfpfcnvrt
  6704  000CCA  C02F  F07D         	movff	?_ctoa+1,?_vfpfcnvrt+1
  6705  000CCE  EF98  F007         	goto	l701
  6706  000CD2                     l4678:
  6707                           
  6708                           ; BSR set to: 0
  6709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6710  000CD2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6711  000CD6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6712  000CDA  CFDE FFF6          	movff	postinc2,tblptrl
  6713  000CDE  CFDD FFF7          	movff	postdec2,tblptrh
  6714  000CE2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6715  000CE2  6AF8               	clrf	tblptru,c
  6716  000CE4                     	endif
  6717  000CE4                     	if	0	;tblptru may be non-zero
  6718  000CE4                     	endif
  6719  000CE4  0008               	tblrd		*
  6720  000CE6  50F5               	movf	tablat,w,c
  6721  000CE8  0A64               	xorlw	100
  6722  000CEA  B4D8               	btfsc	status,2,c
  6723  000CEC  EF7A  F006         	goto	u3991
  6724  000CF0  EF7C  F006         	goto	u3990
  6725  000CF4                     u3991:
  6726  000CF4  EF8F  F006         	goto	l4682
  6727  000CF8                     u3990:
  6728  000CF8                     
  6729                           ; BSR set to: 0
  6730  000CF8  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6731  000CFC  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6732  000D00  CFDE FFF6          	movff	postinc2,tblptrl
  6733  000D04  CFDD FFF7          	movff	postdec2,tblptrh
  6734  000D08                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6735  000D08  6AF8               	clrf	tblptru,c
  6736  000D0A                     	endif
  6737  000D0A                     	if	0	;tblptru may be non-zero
  6738  000D0A                     	endif
  6739  000D0A  0008               	tblrd		*
  6740  000D0C  50F5               	movf	tablat,w,c
  6741  000D0E  0A69               	xorlw	105
  6742  000D10  A4D8               	btfss	status,2,c
  6743  000D12  EF8D  F006         	goto	u4001
  6744  000D16  EF8F  F006         	goto	u4000
  6745  000D1A                     u4001:
  6746  000D1A  EFCF  F006         	goto	l4688
  6747  000D1E                     u4000:
  6748  000D1E                     l4682:
  6749                           
  6750                           ; BSR set to: 0
  6751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  6752  000D1E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6753  000D22  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6754  000D26  2ADE               	incf	postinc2,f,c
  6755  000D28  0E00               	movlw	0
  6756  000D2A  22DD               	addwfc	postdec2,f,c
  6757                           
  6758                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6759  000D2C  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6760  000D30  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6761  000D34  CFDF F082          	movff	indf2,??_vfpfcnvrt
  6762  000D38  0E02               	movlw	2
  6763  000D3A  26DE               	addwf	postinc2,f,c
  6764  000D3C  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
  6765  000D40  0E00               	movlw	0
  6766  000D42  22DD               	addwfc	postdec2,f,c
  6767  000D44  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6768  000D48  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6769  000D4C  CFDE F086          	movff	postinc2,vfpfcnvrt@ll
  6770  000D50  CFDD F087          	movff	postdec2,vfpfcnvrt@ll+1
  6771  000D54  0E00               	movlw	0
  6772  000D56  BF87               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6773  000D58  0EFF               	movlw	-1
  6774  000D5A  6F88               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6775  000D5C  6F89               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6776  000D5E  6F8A               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  6777  000D60  6F8B               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  6778  000D62  6F8C               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  6779  000D64  6F8D               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  6780  000D66                     
  6781                           ; BSR set to: 0
  6782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  6783  000D66  C07C  F02E         	movff	vfpfcnvrt@fp,dtoa@fp
  6784  000D6A  C07D  F02F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6785  000D6E  C086  F030         	movff	vfpfcnvrt@ll,dtoa@d
  6786  000D72  C087  F031         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6787  000D76  C088  F032         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6788  000D7A  C089  F033         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6789  000D7E  C08A  F034         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6790  000D82  C08B  F035         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6791  000D86  C08C  F036         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6792  000D8A  C08D  F037         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6793  000D8E  EC99  F007         	call	_dtoa	;wreg free
  6794  000D92  C02E  F07C         	movff	?_dtoa,?_vfpfcnvrt
  6795  000D96  C02F  F07D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6796  000D9A  EF98  F007         	goto	l701
  6797  000D9E                     l4688:
  6798                           
  6799                           ; BSR set to: 0
  6800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6801  000D9E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6802  000DA2  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6803  000DA6  CFDE FFF6          	movff	postinc2,tblptrl
  6804  000DAA  CFDD FFF7          	movff	postdec2,tblptrh
  6805  000DAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6806  000DAE  6AF8               	clrf	tblptru,c
  6807  000DB0                     	endif
  6808  000DB0                     	if	0	;tblptru may be non-zero
  6809  000DB0                     	endif
  6810  000DB0  0008               	tblrd		*
  6811  000DB2  50F5               	movf	tablat,w,c
  6812  000DB4  0A78               	xorlw	120
  6813  000DB6  B4D8               	btfsc	status,2,c
  6814  000DB8  EFE0  F006         	goto	u4011
  6815  000DBC  EFE2  F006         	goto	u4010
  6816  000DC0                     u4011:
  6817  000DC0  EFF5  F006         	goto	l4692
  6818  000DC4                     u4010:
  6819  000DC4                     
  6820                           ; BSR set to: 0
  6821  000DC4  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6822  000DC8  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6823  000DCC  CFDE FFF6          	movff	postinc2,tblptrl
  6824  000DD0  CFDD FFF7          	movff	postdec2,tblptrh
  6825  000DD4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6826  000DD4  6AF8               	clrf	tblptru,c
  6827  000DD6                     	endif
  6828  000DD6                     	if	0	;tblptru may be non-zero
  6829  000DD6                     	endif
  6830  000DD6  0008               	tblrd		*
  6831  000DD8  50F5               	movf	tablat,w,c
  6832  000DDA  0A58               	xorlw	88
  6833  000DDC  A4D8               	btfss	status,2,c
  6834  000DDE  EFF3  F006         	goto	u4021
  6835  000DE2  EFF5  F006         	goto	u4020
  6836  000DE6                     u4021:
  6837  000DE6  EF44  F007         	goto	l4702
  6838  000DEA                     u4020:
  6839  000DEA                     l4692:
  6840                           
  6841                           ; BSR set to: 0
  6842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  6843  000DEA  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6844  000DEE  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6845  000DF2  CFDE FFF6          	movff	postinc2,tblptrl
  6846  000DF6  CFDD FFF7          	movff	postdec2,tblptrh
  6847  000DFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6848  000DFA  6AF8               	clrf	tblptru,c
  6849  000DFC                     	endif
  6850  000DFC                     	if	0	;tblptru may be non-zero
  6851  000DFC                     	endif
  6852  000DFC  0008               	tblrd		*
  6853  000DFE  CFF5 F09A          	movff	tablat,vfpfcnvrt@c
  6854  000E02                     
  6855                           ; BSR set to: 0
  6856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  6857  000E02  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6858  000E06  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6859  000E0A  2ADE               	incf	postinc2,f,c
  6860  000E0C  0E00               	movlw	0
  6861  000E0E  22DD               	addwfc	postdec2,f,c
  6862  000E10                     
  6863                           ; BSR set to: 0
  6864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6865  000E10  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6866  000E14  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6867  000E18  CFDF F082          	movff	indf2,??_vfpfcnvrt
  6868  000E1C  0E02               	movlw	2
  6869  000E1E  26DE               	addwf	postinc2,f,c
  6870  000E20  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
  6871  000E24  0E00               	movlw	0
  6872  000E26  22DD               	addwfc	postdec2,f,c
  6873  000E28  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6874  000E2C  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6875  000E30  CFDE F084          	movff	postinc2,??_vfpfcnvrt+2
  6876  000E34  CFDD F085          	movff	postdec2,??_vfpfcnvrt+3
  6877  000E38  C084  F08E         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6878  000E3C  C085  F08F         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6879  000E40  6B90               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6880  000E42  6B91               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6881  000E44  6B92               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6882  000E46  6B93               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6883  000E48  6B94               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6884  000E4A  6B95               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6885  000E4C                     
  6886                           ; BSR set to: 0
  6887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  6888  000E4C  C07C  F02E         	movff	vfpfcnvrt@fp,xtoa@fp
  6889  000E50  C07D  F02F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6890  000E54  C08E  F030         	movff	vfpfcnvrt@llu,xtoa@d
  6891  000E58  C08F  F031         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6892  000E5C  C090  F032         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6893  000E60  C091  F033         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6894  000E64  C092  F034         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6895  000E68  C093  F035         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6896  000E6C  C094  F036         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6897  000E70  C095  F037         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6898  000E74  C09A  F038         	movff	vfpfcnvrt@c,xtoa@x
  6899  000E78  EC0A  F009         	call	_xtoa	;wreg free
  6900  000E7C  C02E  F07C         	movff	?_xtoa,?_vfpfcnvrt
  6901  000E80  C02F  F07D         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6902  000E84  EF98  F007         	goto	l701
  6903  000E88                     l4702:
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  6907  000E88  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6908  000E8C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6909  000E90  CFDE FFF6          	movff	postinc2,tblptrl
  6910  000E94  CFDD FFF7          	movff	postdec2,tblptrh
  6911  000E98                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6912  000E98  6AF8               	clrf	tblptru,c
  6913  000E9A                     	endif
  6914  000E9A                     	if	0	;tblptru may be non-zero
  6915  000E9A                     	endif
  6916  000E9A  0008               	tblrd		*
  6917  000E9C  50F5               	movf	tablat,w,c
  6918  000E9E  0A25               	xorlw	37
  6919  000EA0  A4D8               	btfss	status,2,c
  6920  000EA2  EF55  F007         	goto	u4031
  6921  000EA6  EF57  F007         	goto	u4030
  6922  000EAA                     u4031:
  6923  000EAA  EF6F  F007         	goto	l4712
  6924  000EAE                     u4030:
  6925  000EAE                     
  6926                           ; BSR set to: 0
  6927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6928  000EAE  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6929  000EB2  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6930  000EB6  2ADE               	incf	postinc2,f,c
  6931  000EB8  0E00               	movlw	0
  6932  000EBA  22DD               	addwfc	postdec2,f,c
  6933  000EBC                     
  6934                           ; BSR set to: 0
  6935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6936  000EBC  0E00               	movlw	0
  6937  000EBE  6E14               	movwf	(fputc@c+1)^0,c
  6938  000EC0  0E25               	movlw	37
  6939  000EC2  6E13               	movwf	fputc@c^0,c
  6940  000EC4  C07C  F015         	movff	vfpfcnvrt@fp,fputc@fp
  6941  000EC8  C07D  F016         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6942  000ECC  EC30  F010         	call	_fputc	;wreg free
  6943  000ED0                     l4708:
  6944                           
  6945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6946  000ED0  0E00               	movlw	0
  6947  000ED2  0100               	movlb	0	; () banked
  6948  000ED4  6F7D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6949  000ED6  0E01               	movlw	1
  6950  000ED8  6F7C               	movwf	?_vfpfcnvrt& (0+255),b
  6951  000EDA  EF98  F007         	goto	l701
  6952  000EDE                     l4712:
  6953                           
  6954                           ; BSR set to: 0
  6955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6956  000EDE  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6957  000EE2  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6958  000EE6  2ADE               	incf	postinc2,f,c
  6959  000EE8  0E00               	movlw	0
  6960  000EEA  22DD               	addwfc	postdec2,f,c
  6961  000EEC                     
  6962                           ; BSR set to: 0
  6963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  6964  000EEC  0E00               	movlw	0
  6965  000EEE  6F7D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6966  000EF0  0E00               	movlw	0
  6967  000EF2  6F7C               	movwf	?_vfpfcnvrt& (0+255),b
  6968  000EF4  EF98  F007         	goto	l701
  6969  000EF8                     l4718:
  6970                           
  6971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6972  000EF8  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6973  000EFC  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6974  000F00  CFDE FFF6          	movff	postinc2,tblptrl
  6975  000F04  CFDD FFF7          	movff	postdec2,tblptrh
  6976  000F08                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6977  000F08  6AF8               	clrf	tblptru,c
  6978  000F0A                     	endif
  6979  000F0A                     	if	0	;tblptru may be non-zero
  6980  000F0A                     	endif
  6981  000F0A  0008               	tblrd		*
  6982  000F0C  50F5               	movf	tablat,w,c
  6983  000F0E  6E13               	movwf	fputc@c^0,c
  6984  000F10  6A14               	clrf	(fputc@c+1)^0,c
  6985  000F12  C07C  F015         	movff	vfpfcnvrt@fp,fputc@fp
  6986  000F16  C07D  F016         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6987  000F1A  EC30  F010         	call	_fputc	;wreg free
  6988  000F1E                     
  6989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6990  000F1E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6991  000F22  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6992  000F26  2ADE               	incf	postinc2,f,c
  6993  000F28  0E00               	movlw	0
  6994  000F2A  22DD               	addwfc	postdec2,f,c
  6995  000F2C  EF68  F007         	goto	l4708
  6996  000F30                     l701:
  6997  000F30  0012               	return		;funcret
  6998  000F32                     __end_of_vfpfcnvrt:
  6999                           	opt callstack 0
  7000                           
  7001 ;; *************** function _xtoa *****************
  7002 ;; Defined at:
  7003 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  7006 ;;		 -> NULL(0), 
  7007 ;;  d               8   47[COMRAM] unsigned long long 
  7008 ;;  x               1   55[COMRAM] unsigned char 
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;  n               8   16[BANK0 ] unsigned long long 
  7011 ;;  c               2   26[BANK0 ] int 
  7012 ;;  i               2   24[BANK0 ] int 
  7013 ;;  w               2   14[BANK0 ] int 
  7014 ;;  p               2   12[BANK0 ] int 
  7015 ;; Return value:  Size  Location     Type
  7016 ;;                  2   45[COMRAM] int 
  7017 ;; Registers used:
  7018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7019 ;; Tracked objects:
  7020 ;;		On entry : 0/0
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7024 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7025 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7026 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7027 ;;      Totals:        11      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7028 ;;Total ram usage:       39 bytes
  7029 ;; Hardware stack levels used:    1
  7030 ;; Hardware stack levels required when called:    9
  7031 ;; This function calls:
  7032 ;;		_isalpha
  7033 ;;		_isupper
  7034 ;;		_pad
  7035 ;;		_toupper
  7036 ;; This function is called by:
  7037 ;;		_vfpfcnvrt
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           	psect	text25
  7042  001214                     __ptext25:
  7043                           	opt callstack 0
  7044  001214                     _xtoa:
  7045                           	opt callstack 18
  7046  001214                     
  7047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  7048  001214  BE43               	btfsc	(_prec+1)^0,7,c
  7049  001216  EF0F  F009         	goto	u3661
  7050  00121A  EF11  F009         	goto	u3660
  7051  00121E                     u3661:
  7052  00121E  EF12  F009         	goto	l4508
  7053  001222                     u3660:
  7054  001222                     
  7055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  7056  001222  9244               	bcf	_flags^0,1,c
  7057  001224                     l4508:
  7058                           
  7059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  7060  001224  BE43               	btfsc	(_prec+1)^0,7,c
  7061  001226  EF1F  F009         	goto	u3670
  7062  00122A  5043               	movf	(_prec+1)^0,w,c
  7063  00122C  E106               	bnz	u3671
  7064  00122E  0442               	decf	_prec^0,w,c
  7065  001230  B0D8               	btfsc	status,0,c
  7066  001232  EF1D  F009         	goto	u3671
  7067  001236  EF1F  F009         	goto	u3670
  7068  00123A                     u3671:
  7069  00123A  EF26  F009         	goto	l649
  7070  00123E                     u3670:
  7071  00123E  0E00               	movlw	0
  7072  001240  0100               	movlb	0	; () banked
  7073  001242  6F6D               	movwf	(xtoa@p+1)& (0+255),b
  7074  001244  0E01               	movlw	1
  7075  001246  6F6C               	movwf	xtoa@p& (0+255),b
  7076  001248  EF2A  F009         	goto	l651
  7077  00124C                     l649:
  7078  00124C  C042  F06C         	movff	_prec,xtoa@p
  7079  001250  C043  F06D         	movff	_prec+1,xtoa@p+1
  7080  001254                     l651:
  7081                           
  7082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  7083  001254  C040  F06E         	movff	_width,xtoa@w
  7084  001258  C041  F06F         	movff	_width+1,xtoa@w+1
  7085                           
  7086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  7087  00125C  A844               	btfss	_flags^0,4,c
  7088  00125E  EF33  F009         	goto	u3681
  7089  001262  EF35  F009         	goto	u3680
  7090  001266                     u3681:
  7091  001266  EF3A  F009         	goto	l4514
  7092  00126A                     u3680:
  7093  00126A                     
  7094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  7095  00126A  0100               	movlb	0	; () banked
  7096  00126C  0EFE               	movlw	254
  7097  00126E  276E               	addwf	xtoa@w& (0+255),f,b
  7098  001270  0EFF               	movlw	255
  7099  001272  236F               	addwfc	(xtoa@w+1)& (0+255),f,b
  7100  001274                     l4514:
  7101                           
  7102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  7103  001274  C030  F070         	movff	xtoa@d,xtoa@n
  7104  001278  C031  F071         	movff	xtoa@d+1,xtoa@n+1
  7105  00127C  C032  F072         	movff	xtoa@d+2,xtoa@n+2
  7106  001280  C033  F073         	movff	xtoa@d+3,xtoa@n+3
  7107  001284  C034  F074         	movff	xtoa@d+4,xtoa@n+4
  7108  001288  C035  F075         	movff	xtoa@d+5,xtoa@n+5
  7109  00128C  C036  F076         	movff	xtoa@d+6,xtoa@n+6
  7110  001290  C037  F077         	movff	xtoa@d+7,xtoa@n+7
  7111  001294                     
  7112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  7113  001294  0E00               	movlw	0
  7114  001296  0100               	movlb	0	; () banked
  7115  001298  6F79               	movwf	(xtoa@i+1)& (0+255),b
  7116  00129A  0E1F               	movlw	31
  7117  00129C  6F78               	movwf	xtoa@i& (0+255),b
  7118  00129E                     
  7119                           ; BSR set to: 0
  7120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  7121  00129E  0E00               	movlw	0
  7122  0012A0  6FF1               	movwf	(_dbuf+31)& (0+255),b
  7123                           
  7124                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7125  0012A2  EF07  F00A         	goto	l4550
  7126  0012A6                     l4520:
  7127                           
  7128                           ; BSR set to: 0
  7129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  7130  0012A6  0778               	decf	xtoa@i& (0+255),f,b
  7131  0012A8  A0D8               	btfss	status,0,c
  7132  0012AA  0779               	decf	(xtoa@i+1)& (0+255),f,b
  7133  0012AC                     
  7134                           ; BSR set to: 0
  7135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  7136  0012AC  0E0F               	movlw	15
  7137  0012AE  1570               	andwf	xtoa@n& (0+255),w,b
  7138  0012B0  6F7A               	movwf	xtoa@c& (0+255),b
  7139  0012B2  6B7B               	clrf	(xtoa@c+1)& (0+255),b
  7140  0012B4                     
  7141                           ; BSR set to: 0
  7142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  7143  0012B4  BF7B               	btfsc	(xtoa@c+1)& (0+255),7,b
  7144  0012B6  EF66  F009         	goto	u3691
  7145  0012BA  517B               	movf	(xtoa@c+1)& (0+255),w,b
  7146  0012BC  E109               	bnz	u3690
  7147  0012BE  0E0A               	movlw	10
  7148  0012C0  5D7A               	subwf	xtoa@c& (0+255),w,b
  7149  0012C2  A0D8               	btfss	status,0,c
  7150  0012C4  EF66  F009         	goto	u3691
  7151  0012C8  EF68  F009         	goto	u3690
  7152  0012CC                     u3691:
  7153  0012CC  EF70  F009         	goto	l4528
  7154  0012D0                     u3690:
  7155  0012D0                     
  7156                           ; BSR set to: 0
  7157  0012D0  0E57               	movlw	87
  7158  0012D2  257A               	addwf	xtoa@c& (0+255),w,b
  7159  0012D4  6F7A               	movwf	xtoa@c& (0+255),b
  7160  0012D6  0E00               	movlw	0
  7161  0012D8  217B               	addwfc	(xtoa@c+1)& (0+255),w,b
  7162  0012DA  6F7B               	movwf	(xtoa@c+1)& (0+255),b
  7163  0012DC  EF76  F009         	goto	l658
  7164  0012E0                     l4528:
  7165                           
  7166                           ; BSR set to: 0
  7167  0012E0  0E30               	movlw	48
  7168  0012E2  257A               	addwf	xtoa@c& (0+255),w,b
  7169  0012E4  6F7A               	movwf	xtoa@c& (0+255),b
  7170  0012E6  0E00               	movlw	0
  7171  0012E8  217B               	addwfc	(xtoa@c+1)& (0+255),w,b
  7172  0012EA  6F7B               	movwf	(xtoa@c+1)& (0+255),b
  7173  0012EC                     l658:
  7174                           
  7175                           ; BSR set to: 0
  7176  0012EC  0EBF               	movlw	191
  7177  0012EE  6F60               	movwf	??_xtoa& (0+255),b
  7178  0012F0  0EFF               	movlw	255
  7179  0012F2  6F61               	movwf	(??_xtoa+1)& (0+255),b
  7180  0012F4  5038               	movf	xtoa@x^0,w,c
  7181  0012F6  6F62               	movwf	(??_xtoa+2)& (0+255),b
  7182  0012F8  6B63               	clrf	(??_xtoa+3)& (0+255),b
  7183  0012FA  5160               	movf	??_xtoa& (0+255),w,b
  7184  0012FC  2762               	addwf	(??_xtoa+2)& (0+255),f,b
  7185  0012FE  5161               	movf	(??_xtoa+1)& (0+255),w,b
  7186  001300  2363               	addwfc	(??_xtoa+3)& (0+255),f,b
  7187  001302  5163               	movf	(??_xtoa+3)& (0+255),w,b
  7188  001304  E10A               	bnz	u3700
  7189  001306  0E1A               	movlw	26
  7190  001308  5D62               	subwf	(??_xtoa+2)& (0+255),w,b
  7191  00130A  A0D8               	btfss	status,0,c
  7192  00130C  EF8A  F009         	goto	u3701
  7193  001310  EF8D  F009         	goto	u3700
  7194  001314                     u3701:
  7195  001314  0E01               	movlw	1
  7196  001316  EF8E  F009         	goto	u3710
  7197  00131A                     u3700:
  7198  00131A  0E00               	movlw	0
  7199  00131C                     u3710:
  7200  00131C  6F68               	movwf	_xtoa$1363& (0+255),b
  7201  00131E  6B69               	clrf	(_xtoa$1363+1)& (0+255),b
  7202  001320                     
  7203                           ; BSR set to: 0
  7204  001320  5168               	movf	_xtoa$1363& (0+255),w,b
  7205  001322  1169               	iorwf	(_xtoa$1363+1)& (0+255),w,b
  7206  001324  B4D8               	btfsc	status,2,c
  7207  001326  EF97  F009         	goto	u3721
  7208  00132A  EF99  F009         	goto	u3720
  7209  00132E                     u3721:
  7210  00132E  EFC9  F009         	goto	l4542
  7211  001332                     u3720:
  7212  001332                     
  7213                           ; BSR set to: 0
  7214  001332  0E9F               	movlw	159
  7215  001334  6F60               	movwf	??_xtoa& (0+255),b
  7216  001336  0EFF               	movlw	255
  7217  001338  6F61               	movwf	(??_xtoa+1)& (0+255),b
  7218  00133A  0E20               	movlw	32
  7219  00133C  117A               	iorwf	xtoa@c& (0+255),w,b
  7220  00133E  6F62               	movwf	(??_xtoa+2)& (0+255),b
  7221  001340  0E00               	movlw	0
  7222  001342  117B               	iorwf	(xtoa@c+1)& (0+255),w,b
  7223  001344  6F63               	movwf	(??_xtoa+3)& (0+255),b
  7224  001346  5160               	movf	??_xtoa& (0+255),w,b
  7225  001348  2762               	addwf	(??_xtoa+2)& (0+255),f,b
  7226  00134A  5161               	movf	(??_xtoa+1)& (0+255),w,b
  7227  00134C  2363               	addwfc	(??_xtoa+3)& (0+255),f,b
  7228  00134E  5163               	movf	(??_xtoa+3)& (0+255),w,b
  7229  001350  E10A               	bnz	u3730
  7230  001352  0E1A               	movlw	26
  7231  001354  5D62               	subwf	(??_xtoa+2)& (0+255),w,b
  7232  001356  A0D8               	btfss	status,0,c
  7233  001358  EFB0  F009         	goto	u3731
  7234  00135C  EFB3  F009         	goto	u3730
  7235  001360                     u3731:
  7236  001360  0E01               	movlw	1
  7237  001362  EFB4  F009         	goto	u3740
  7238  001366                     u3730:
  7239  001366  0E00               	movlw	0
  7240  001368                     u3740:
  7241  001368  6F6A               	movwf	_xtoa$1364& (0+255),b
  7242  00136A  6B6B               	clrf	(_xtoa$1364+1)& (0+255),b
  7243  00136C                     
  7244                           ; BSR set to: 0
  7245  00136C  516A               	movf	_xtoa$1364& (0+255),w,b
  7246  00136E  116B               	iorwf	(_xtoa$1364+1)& (0+255),w,b
  7247  001370  B4D8               	btfsc	status,2,c
  7248  001372  EFBD  F009         	goto	u3751
  7249  001376  EFBF  F009         	goto	u3750
  7250  00137A                     u3751:
  7251  00137A  EFC9  F009         	goto	l4542
  7252  00137E                     u3750:
  7253  00137E                     
  7254                           ; BSR set to: 0
  7255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  7256  00137E  C07A  F017         	movff	xtoa@c,toupper@c
  7257  001382  C07B  F018         	movff	xtoa@c+1,toupper@c+1
  7258  001386  EC24  F011         	call	_toupper	;wreg free
  7259  00138A  C017  F07A         	movff	?_toupper,xtoa@c
  7260  00138E  C018  F07B         	movff	?_toupper+1,xtoa@c+1
  7261  001392                     l4542:
  7262                           
  7263                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  7264  001392  0ED2               	movlw	low _dbuf
  7265  001394  0100               	movlb	0	; () banked
  7266  001396  2578               	addwf	xtoa@i& (0+255),w,b
  7267  001398  6ED9               	movwf	fsr2l,c
  7268  00139A  0E00               	movlw	high _dbuf
  7269  00139C  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  7270  00139E  6EDA               	movwf	fsr2h,c
  7271  0013A0  C07A  FFDF         	movff	xtoa@c,indf2
  7272  0013A4                     
  7273                           ; BSR set to: 0
  7274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  7275  0013A4  076C               	decf	xtoa@p& (0+255),f,b
  7276  0013A6  A0D8               	btfss	status,0,c
  7277  0013A8  076D               	decf	(xtoa@p+1)& (0+255),f,b
  7278  0013AA                     
  7279                           ; BSR set to: 0
  7280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  7281  0013AA  076E               	decf	xtoa@w& (0+255),f,b
  7282  0013AC  A0D8               	btfss	status,0,c
  7283  0013AE  076F               	decf	(xtoa@w+1)& (0+255),f,b
  7284  0013B0                     
  7285                           ; BSR set to: 0
  7286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  7287  0013B0  C070  F060         	movff	xtoa@n,??_xtoa
  7288  0013B4  C071  F061         	movff	xtoa@n+1,??_xtoa+1
  7289  0013B8  C072  F062         	movff	xtoa@n+2,??_xtoa+2
  7290  0013BC  C073  F063         	movff	xtoa@n+3,??_xtoa+3
  7291  0013C0  C074  F064         	movff	xtoa@n+4,??_xtoa+4
  7292  0013C4  C075  F065         	movff	xtoa@n+5,??_xtoa+5
  7293  0013C8  C076  F066         	movff	xtoa@n+6,??_xtoa+6
  7294  0013CC  C077  F067         	movff	xtoa@n+7,??_xtoa+7
  7295  0013D0  0E05               	movlw	5
  7296  0013D2  EFF4  F009         	goto	u3760
  7297  0013D6                     u3765:
  7298  0013D6  90D8               	bcf	status,0,c
  7299  0013D8  3367               	rrcf	(??_xtoa+7)& (0+255),f,b
  7300  0013DA  3366               	rrcf	(??_xtoa+6)& (0+255),f,b
  7301  0013DC  3365               	rrcf	(??_xtoa+5)& (0+255),f,b
  7302  0013DE  3364               	rrcf	(??_xtoa+4)& (0+255),f,b
  7303  0013E0  3363               	rrcf	(??_xtoa+3)& (0+255),f,b
  7304  0013E2  3362               	rrcf	(??_xtoa+2)& (0+255),f,b
  7305  0013E4  3361               	rrcf	(??_xtoa+1)& (0+255),f,b
  7306  0013E6  3360               	rrcf	??_xtoa& (0+255),f,b
  7307  0013E8                     u3760:
  7308  0013E8  2EE8               	decfsz	wreg,f,c
  7309  0013EA  EFEB  F009         	goto	u3765
  7310  0013EE  C060  F070         	movff	??_xtoa,xtoa@n
  7311  0013F2  C061  F071         	movff	??_xtoa+1,xtoa@n+1
  7312  0013F6  C062  F072         	movff	??_xtoa+2,xtoa@n+2
  7313  0013FA  C063  F073         	movff	??_xtoa+3,xtoa@n+3
  7314  0013FE  C064  F074         	movff	??_xtoa+4,xtoa@n+4
  7315  001402  C065  F075         	movff	??_xtoa+5,xtoa@n+5
  7316  001406  C066  F076         	movff	??_xtoa+6,xtoa@n+6
  7317  00140A  C067  F077         	movff	??_xtoa+7,xtoa@n+7
  7318  00140E                     l4550:
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7322  00140E  BF79               	btfsc	(xtoa@i+1)& (0+255),7,b
  7323  001410  EF13  F00A         	goto	u3771
  7324  001414  5179               	movf	(xtoa@i+1)& (0+255),w,b
  7325  001416  E109               	bnz	u3770
  7326  001418  0E02               	movlw	2
  7327  00141A  5D78               	subwf	xtoa@i& (0+255),w,b
  7328  00141C  A0D8               	btfss	status,0,c
  7329  00141E  EF13  F00A         	goto	u3771
  7330  001422  EF15  F00A         	goto	u3770
  7331  001426                     u3771:
  7332  001426  EF45  F00A         	goto	l672
  7333  00142A                     u3770:
  7334  00142A                     
  7335                           ; BSR set to: 0
  7336  00142A  5170               	movf	xtoa@n& (0+255),w,b
  7337  00142C  1171               	iorwf	(xtoa@n+1)& (0+255),w,b
  7338  00142E  1172               	iorwf	(xtoa@n+2)& (0+255),w,b
  7339  001430  1173               	iorwf	(xtoa@n+3)& (0+255),w,b
  7340  001432  1174               	iorwf	(xtoa@n+4)& (0+255),w,b
  7341  001434  1175               	iorwf	(xtoa@n+5)& (0+255),w,b
  7342  001436  1176               	iorwf	(xtoa@n+6)& (0+255),w,b
  7343  001438  1177               	iorwf	(xtoa@n+7)& (0+255),w,b
  7344  00143A  A4D8               	btfss	status,2,c
  7345  00143C  EF22  F00A         	goto	u3781
  7346  001440  EF24  F00A         	goto	u3780
  7347  001444                     u3781:
  7348  001444  EF53  F009         	goto	l4520
  7349  001448                     u3780:
  7350  001448                     
  7351                           ; BSR set to: 0
  7352  001448  BF6D               	btfsc	(xtoa@p+1)& (0+255),7,b
  7353  00144A  EF31  F00A         	goto	u3790
  7354  00144E  516D               	movf	(xtoa@p+1)& (0+255),w,b
  7355  001450  E106               	bnz	u3791
  7356  001452  056C               	decf	xtoa@p& (0+255),w,b
  7357  001454  B0D8               	btfsc	status,0,c
  7358  001456  EF2F  F00A         	goto	u3791
  7359  00145A  EF31  F00A         	goto	u3790
  7360  00145E                     u3791:
  7361  00145E  EF53  F009         	goto	l4520
  7362  001462                     u3790:
  7363  001462                     
  7364                           ; BSR set to: 0
  7365  001462  BF6F               	btfsc	(xtoa@w+1)& (0+255),7,b
  7366  001464  EF3C  F00A         	goto	u3801
  7367  001468  516F               	movf	(xtoa@w+1)& (0+255),w,b
  7368  00146A  E108               	bnz	u3800
  7369  00146C  056E               	decf	xtoa@w& (0+255),w,b
  7370  00146E  A0D8               	btfss	status,0,c
  7371  001470  EF3C  F00A         	goto	u3801
  7372  001474  EF3E  F00A         	goto	u3800
  7373  001478                     u3801:
  7374  001478  EF45  F00A         	goto	l672
  7375  00147C                     u3800:
  7376  00147C                     
  7377                           ; BSR set to: 0
  7378  00147C  B244               	btfsc	_flags^0,1,c
  7379  00147E  EF43  F00A         	goto	u3811
  7380  001482  EF45  F00A         	goto	u3810
  7381  001486                     u3811:
  7382  001486  EF53  F009         	goto	l4520
  7383  00148A                     u3810:
  7384  00148A                     l672:
  7385                           
  7386                           ; BSR set to: 0
  7387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7388  00148A  A844               	btfss	_flags^0,4,c
  7389  00148C  EF4A  F00A         	goto	u3821
  7390  001490  EF4C  F00A         	goto	u3820
  7391  001494                     u3821:
  7392  001494  EF62  F00A         	goto	l4566
  7393  001498                     u3820:
  7394  001498                     
  7395                           ; BSR set to: 0
  7396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7397  001498  0778               	decf	xtoa@i& (0+255),f,b
  7398  00149A  A0D8               	btfss	status,0,c
  7399  00149C  0779               	decf	(xtoa@i+1)& (0+255),f,b
  7400  00149E                     
  7401                           ; BSR set to: 0
  7402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7403  00149E  0ED2               	movlw	low _dbuf
  7404  0014A0  2578               	addwf	xtoa@i& (0+255),w,b
  7405  0014A2  6ED9               	movwf	fsr2l,c
  7406  0014A4  0E00               	movlw	high _dbuf
  7407  0014A6  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  7408  0014A8  6EDA               	movwf	fsr2h,c
  7409  0014AA  C038  FFDF         	movff	xtoa@x,indf2
  7410  0014AE                     
  7411                           ; BSR set to: 0
  7412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7413  0014AE  0778               	decf	xtoa@i& (0+255),f,b
  7414  0014B0  A0D8               	btfss	status,0,c
  7415  0014B2  0779               	decf	(xtoa@i+1)& (0+255),f,b
  7416                           
  7417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7418  0014B4  0ED2               	movlw	low _dbuf
  7419  0014B6  2578               	addwf	xtoa@i& (0+255),w,b
  7420  0014B8  6ED9               	movwf	fsr2l,c
  7421  0014BA  0E00               	movlw	high _dbuf
  7422  0014BC  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  7423  0014BE  6EDA               	movwf	fsr2h,c
  7424  0014C0  0E30               	movlw	48
  7425  0014C2  6EDF               	movwf	indf2,c
  7426  0014C4                     l4566:
  7427                           
  7428                           ; BSR set to: 0
  7429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7430  0014C4  C02E  F023         	movff	xtoa@fp,pad@fp
  7431  0014C8  C02F  F024         	movff	xtoa@fp+1,pad@fp+1
  7432  0014CC  0ED2               	movlw	low _dbuf
  7433  0014CE  2578               	addwf	xtoa@i& (0+255),w,b
  7434  0014D0  6E25               	movwf	pad@buf^0,c
  7435  0014D2  0E00               	movlw	high _dbuf
  7436  0014D4  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
  7437  0014D6  6E26               	movwf	(pad@buf+1)^0,c
  7438  0014D8  C06E  F027         	movff	xtoa@w,pad@p
  7439  0014DC  C06F  F028         	movff	xtoa@w+1,pad@p+1
  7440  0014E0  ECE0  F00E         	call	_pad	;wreg free
  7441  0014E4  C023  F02E         	movff	?_pad,?_xtoa
  7442  0014E8  C024  F02F         	movff	?_pad+1,?_xtoa+1
  7443  0014EC  0012               	return		;funcret
  7444  0014EE                     __end_of_xtoa:
  7445                           	opt callstack 0
  7446                           
  7447 ;; *************** function _toupper *****************
  7448 ;; Defined at:
  7449 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  7450 ;; Parameters:    Size  Location     Type
  7451 ;;  c               2   22[COMRAM] int 
  7452 ;; Auto vars:     Size  Location     Type
  7453 ;;		None
  7454 ;; Return value:  Size  Location     Type
  7455 ;;                  2   22[COMRAM] int 
  7456 ;; Registers used:
  7457 ;;		wreg, status,2, status,0
  7458 ;; Tracked objects:
  7459 ;;		On entry : 0/0
  7460 ;;		On exit  : 0/0
  7461 ;;		Unchanged: 0/0
  7462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7464 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7465 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7466 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7467 ;;Total ram usage:        8 bytes
  7468 ;; Hardware stack levels used:    1
  7469 ;; Hardware stack levels required when called:    5
  7470 ;; This function calls:
  7471 ;;		_islower
  7472 ;; This function is called by:
  7473 ;;		_xtoa
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           	psect	text26
  7478  002248                     __ptext26:
  7479                           	opt callstack 0
  7480  002248                     _toupper:
  7481                           	opt callstack 21
  7482  002248  0E9F               	movlw	159
  7483  00224A  6E19               	movwf	??_toupper^0,c
  7484  00224C  0EFF               	movlw	255
  7485  00224E  6E1A               	movwf	(??_toupper+1)^0,c
  7486  002250  C017  F01B         	movff	toupper@c,??_toupper+2
  7487  002254  C018  F01C         	movff	toupper@c+1,??_toupper+3
  7488  002258  5019               	movf	??_toupper^0,w,c
  7489  00225A  261B               	addwf	(??_toupper+2)^0,f,c
  7490  00225C  501A               	movf	(??_toupper+1)^0,w,c
  7491  00225E  221C               	addwfc	(??_toupper+3)^0,f,c
  7492  002260  501C               	movf	(??_toupper+3)^0,w,c
  7493  002262  E10A               	bnz	u3300
  7494  002264  0E1A               	movlw	26
  7495  002266  5C1B               	subwf	(??_toupper+2)^0,w,c
  7496  002268  A0D8               	btfss	status,0,c
  7497  00226A  EF39  F011         	goto	u3301
  7498  00226E  EF3C  F011         	goto	u3300
  7499  002272                     u3301:
  7500  002272  0E01               	movlw	1
  7501  002274  EF3D  F011         	goto	u3310
  7502  002278                     u3300:
  7503  002278  0E00               	movlw	0
  7504  00227A                     u3310:
  7505  00227A  6E1D               	movwf	_toupper$1929^0,c
  7506  00227C  6A1E               	clrf	(_toupper$1929+1)^0,c
  7507  00227E  501D               	movf	_toupper$1929^0,w,c
  7508  002280  101E               	iorwf	(_toupper$1929+1)^0,w,c
  7509  002282  B4D8               	btfsc	status,2,c
  7510  002284  EF46  F011         	goto	u3321
  7511  002288  EF48  F011         	goto	u3320
  7512  00228C                     u3321:
  7513  00228C  EF4E  F011         	goto	l1490
  7514  002290                     u3320:
  7515  002290  0E5F               	movlw	95
  7516  002292  1417               	andwf	toupper@c^0,w,c
  7517  002294  6E17               	movwf	?_toupper^0,c
  7518  002296  6A18               	clrf	(?_toupper+1)^0,c
  7519  002298  EF52  F011         	goto	l1495
  7520  00229C                     l1490:
  7521  00229C  C017  F017         	movff	toupper@c,?_toupper
  7522  0022A0  C018  F018         	movff	toupper@c+1,?_toupper+1
  7523  0022A4                     l1495:
  7524  0022A4  0012               	return		;funcret
  7525  0022A6                     __end_of_toupper:
  7526                           	opt callstack 0
  7527                           
  7528 ;; *************** function _islower *****************
  7529 ;; Defined at:
  7530 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  7531 ;; Parameters:    Size  Location     Type
  7532 ;;  c               2   16[COMRAM] int 
  7533 ;; Auto vars:     Size  Location     Type
  7534 ;;		None
  7535 ;; Return value:  Size  Location     Type
  7536 ;;                  2   16[COMRAM] int 
  7537 ;; Registers used:
  7538 ;;		wreg, status,2, status,0
  7539 ;; Tracked objects:
  7540 ;;		On entry : 0/0
  7541 ;;		On exit  : 0/0
  7542 ;;		Unchanged: 0/0
  7543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7546 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7547 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7548 ;;Total ram usage:        6 bytes
  7549 ;; Hardware stack levels used:    1
  7550 ;; Hardware stack levels required when called:    4
  7551 ;; This function calls:
  7552 ;;		Nothing
  7553 ;; This function is called by:
  7554 ;;		_toupper
  7555 ;; This function uses a non-reentrant model
  7556 ;;
  7557                           
  7558                           	psect	text27
  7559  002488                     __ptext27:
  7560                           	opt callstack 0
  7561  002488                     _islower:
  7562                           	opt callstack 21
  7563  002488  0E9F               	movlw	159
  7564  00248A  6E13               	movwf	??_islower^0,c
  7565  00248C  0EFF               	movlw	255
  7566  00248E  6E14               	movwf	(??_islower+1)^0,c
  7567  002490  C011  F015         	movff	islower@c,??_islower+2
  7568  002494  C012  F016         	movff	islower@c+1,??_islower+3
  7569  002498  5013               	movf	??_islower^0,w,c
  7570  00249A  2615               	addwf	(??_islower+2)^0,f,c
  7571  00249C  5014               	movf	(??_islower+1)^0,w,c
  7572  00249E  2216               	addwfc	(??_islower+3)^0,f,c
  7573  0024A0  5016               	movf	(??_islower+3)^0,w,c
  7574  0024A2  E10A               	bnz	u3190
  7575  0024A4  0E1A               	movlw	26
  7576  0024A6  5C15               	subwf	(??_islower+2)^0,w,c
  7577  0024A8  A0D8               	btfss	status,0,c
  7578  0024AA  EF59  F012         	goto	u3191
  7579  0024AE  EF5C  F012         	goto	u3190
  7580  0024B2                     u3191:
  7581  0024B2  0E01               	movlw	1
  7582  0024B4  EF5D  F012         	goto	u3200
  7583  0024B8                     u3190:
  7584  0024B8  0E00               	movlw	0
  7585  0024BA                     u3200:
  7586  0024BA  6E11               	movwf	?_islower^0,c
  7587  0024BC  6A12               	clrf	(?_islower+1)^0,c
  7588  0024BE  0012               	return		;funcret
  7589  0024C0                     __end_of_islower:
  7590                           	opt callstack 0
  7591                           
  7592 ;; *************** function _isupper *****************
  7593 ;; Defined at:
  7594 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  7595 ;; Parameters:    Size  Location     Type
  7596 ;;  c               2   16[COMRAM] int 
  7597 ;; Auto vars:     Size  Location     Type
  7598 ;;		None
  7599 ;; Return value:  Size  Location     Type
  7600 ;;                  2   16[COMRAM] int 
  7601 ;; Registers used:
  7602 ;;		wreg, status,2, status,0
  7603 ;; Tracked objects:
  7604 ;;		On entry : 0/0
  7605 ;;		On exit  : 0/0
  7606 ;;		Unchanged: 0/0
  7607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7610 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7611 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7612 ;;Total ram usage:        6 bytes
  7613 ;; Hardware stack levels used:    1
  7614 ;; Hardware stack levels required when called:    4
  7615 ;; This function calls:
  7616 ;;		Nothing
  7617 ;; This function is called by:
  7618 ;;		_xtoa
  7619 ;; This function uses a non-reentrant model
  7620 ;;
  7621                           
  7622                           	psect	text28
  7623  0024C0                     __ptext28:
  7624                           	opt callstack 0
  7625  0024C0                     _isupper:
  7626                           	opt callstack 22
  7627  0024C0  0EBF               	movlw	191
  7628  0024C2  6E13               	movwf	??_isupper^0,c
  7629  0024C4  0EFF               	movlw	255
  7630  0024C6  6E14               	movwf	(??_isupper+1)^0,c
  7631  0024C8  C011  F015         	movff	isupper@c,??_isupper+2
  7632  0024CC  C012  F016         	movff	isupper@c+1,??_isupper+3
  7633  0024D0  5013               	movf	??_isupper^0,w,c
  7634  0024D2  2615               	addwf	(??_isupper+2)^0,f,c
  7635  0024D4  5014               	movf	(??_isupper+1)^0,w,c
  7636  0024D6  2216               	addwfc	(??_isupper+3)^0,f,c
  7637  0024D8  5016               	movf	(??_isupper+3)^0,w,c
  7638  0024DA  E10A               	bnz	u3260
  7639  0024DC  0E1A               	movlw	26
  7640  0024DE  5C15               	subwf	(??_isupper+2)^0,w,c
  7641  0024E0  A0D8               	btfss	status,0,c
  7642  0024E2  EF75  F012         	goto	u3261
  7643  0024E6  EF78  F012         	goto	u3260
  7644  0024EA                     u3261:
  7645  0024EA  0E01               	movlw	1
  7646  0024EC  EF79  F012         	goto	u3270
  7647  0024F0                     u3260:
  7648  0024F0  0E00               	movlw	0
  7649  0024F2                     u3270:
  7650  0024F2  6E11               	movwf	?_isupper^0,c
  7651  0024F4  6A12               	clrf	(?_isupper+1)^0,c
  7652  0024F6  0012               	return		;funcret
  7653  0024F8                     __end_of_isupper:
  7654                           	opt callstack 0
  7655                           
  7656 ;; *************** function _isalpha *****************
  7657 ;; Defined at:
  7658 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;  c               2   16[COMRAM] int 
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;		None
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  2   16[COMRAM] int 
  7665 ;; Registers used:
  7666 ;;		wreg, status,2, status,0
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7674 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7675 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7676 ;;Total ram usage:        6 bytes
  7677 ;; Hardware stack levels used:    1
  7678 ;; Hardware stack levels required when called:    4
  7679 ;; This function calls:
  7680 ;;		Nothing
  7681 ;; This function is called by:
  7682 ;;		_xtoa
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text29
  7687  002414                     __ptext29:
  7688                           	opt callstack 0
  7689  002414                     _isalpha:
  7690                           	opt callstack 22
  7691  002414  0E9F               	movlw	159
  7692  002416  6E13               	movwf	??_isalpha^0,c
  7693  002418  0EFF               	movlw	255
  7694  00241A  6E14               	movwf	(??_isalpha+1)^0,c
  7695  00241C  0E20               	movlw	32
  7696  00241E  1011               	iorwf	isalpha@c^0,w,c
  7697  002420  6E15               	movwf	(??_isalpha+2)^0,c
  7698  002422  0E00               	movlw	0
  7699  002424  1012               	iorwf	(isalpha@c+1)^0,w,c
  7700  002426  6E16               	movwf	(??_isalpha+3)^0,c
  7701  002428  5013               	movf	??_isalpha^0,w,c
  7702  00242A  2615               	addwf	(??_isalpha+2)^0,f,c
  7703  00242C  5014               	movf	(??_isalpha+1)^0,w,c
  7704  00242E  2216               	addwfc	(??_isalpha+3)^0,f,c
  7705  002430  5016               	movf	(??_isalpha+3)^0,w,c
  7706  002432  E10A               	bnz	u3280
  7707  002434  0E1A               	movlw	26
  7708  002436  5C15               	subwf	(??_isalpha+2)^0,w,c
  7709  002438  A0D8               	btfss	status,0,c
  7710  00243A  EF21  F012         	goto	u3281
  7711  00243E  EF24  F012         	goto	u3280
  7712  002442                     u3281:
  7713  002442  0E01               	movlw	1
  7714  002444  EF25  F012         	goto	u3290
  7715  002448                     u3280:
  7716  002448  0E00               	movlw	0
  7717  00244A                     u3290:
  7718  00244A  6E11               	movwf	?_isalpha^0,c
  7719  00244C  6A12               	clrf	(?_isalpha+1)^0,c
  7720  00244E  0012               	return		;funcret
  7721  002450                     __end_of_isalpha:
  7722                           	opt callstack 0
  7723                           
  7724 ;; *************** function _dtoa *****************
  7725 ;; Defined at:
  7726 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7727 ;; Parameters:    Size  Location     Type
  7728 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  7729 ;;		 -> NULL(0), 
  7730 ;;  d               8   47[COMRAM] long long 
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;  n               8    8[BANK0 ] long long 
  7733 ;;  i               2   16[BANK0 ] int 
  7734 ;;  s               2    6[BANK0 ] int 
  7735 ;;  w               2    4[BANK0 ] int 
  7736 ;;  p               2    2[BANK0 ] int 
  7737 ;; Return value:  Size  Location     Type
  7738 ;;                  2   45[COMRAM] int 
  7739 ;; Registers used:
  7740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7741 ;; Tracked objects:
  7742 ;;		On entry : 0/0
  7743 ;;		On exit  : 0/0
  7744 ;;		Unchanged: 0/0
  7745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7746 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7747 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7748 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7749 ;;      Totals:        18      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7750 ;;Total ram usage:       36 bytes
  7751 ;; Hardware stack levels used:    1
  7752 ;; Hardware stack levels required when called:    9
  7753 ;; This function calls:
  7754 ;;		___aodiv
  7755 ;;		___aomod
  7756 ;;		_abs
  7757 ;;		_pad
  7758 ;; This function is called by:
  7759 ;;		_vfpfcnvrt
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           	psect	text30
  7764  000F32                     __ptext30:
  7765                           	opt callstack 0
  7766  000F32                     _dtoa:
  7767                           	opt callstack 18
  7768  000F32                     
  7769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  7770  000F32  C030  F068         	movff	dtoa@d,dtoa@n
  7771  000F36  C031  F069         	movff	dtoa@d+1,dtoa@n+1
  7772  000F3A  C032  F06A         	movff	dtoa@d+2,dtoa@n+2
  7773  000F3E  C033  F06B         	movff	dtoa@d+3,dtoa@n+3
  7774  000F42  C034  F06C         	movff	dtoa@d+4,dtoa@n+4
  7775  000F46  C035  F06D         	movff	dtoa@d+5,dtoa@n+5
  7776  000F4A  C036  F06E         	movff	dtoa@d+6,dtoa@n+6
  7777  000F4E  C037  F06F         	movff	dtoa@d+7,dtoa@n+7
  7778  000F52                     
  7779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  7780  000F52  0100               	movlb	0	; () banked
  7781  000F54  BF6F               	btfsc	(dtoa@n+7)& (0+255),7,b
  7782  000F56  EFAF  F007         	goto	u3511
  7783  000F5A  EFB2  F007         	goto	u3510
  7784  000F5E                     u3511:
  7785  000F5E  0E01               	movlw	1
  7786  000F60  EFB3  F007         	goto	u3520
  7787  000F64                     u3510:
  7788  000F64  0E00               	movlw	0
  7789  000F66                     u3520:
  7790  000F66  6F66               	movwf	dtoa@s& (0+255),b
  7791  000F68  6B67               	clrf	(dtoa@s+1)& (0+255),b
  7792                           
  7793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  7794  000F6A  5166               	movf	dtoa@s& (0+255),w,b
  7795  000F6C  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  7796  000F6E  B4D8               	btfsc	status,2,c
  7797  000F70  EFBC  F007         	goto	u3531
  7798  000F74  EFBE  F007         	goto	u3530
  7799  000F78                     u3531:
  7800  000F78  EFCE  F007         	goto	l4448
  7801  000F7C                     u3530:
  7802  000F7C                     
  7803                           ; BSR set to: 0
  7804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  7805  000F7C  1F6F               	comf	(dtoa@n+7)& (0+255),f,b
  7806  000F7E  1F6E               	comf	(dtoa@n+6)& (0+255),f,b
  7807  000F80  1F6D               	comf	(dtoa@n+5)& (0+255),f,b
  7808  000F82  1F6C               	comf	(dtoa@n+4)& (0+255),f,b
  7809  000F84  1F6B               	comf	(dtoa@n+3)& (0+255),f,b
  7810  000F86  1F6A               	comf	(dtoa@n+2)& (0+255),f,b
  7811  000F88  1F69               	comf	(dtoa@n+1)& (0+255),f,b
  7812  000F8A  6D68               	negf	dtoa@n& (0+255),b
  7813  000F8C  0E00               	movlw	0
  7814  000F8E  2369               	addwfc	(dtoa@n+1)& (0+255),f,b
  7815  000F90  236A               	addwfc	(dtoa@n+2)& (0+255),f,b
  7816  000F92  236B               	addwfc	(dtoa@n+3)& (0+255),f,b
  7817  000F94  236C               	addwfc	(dtoa@n+4)& (0+255),f,b
  7818  000F96  236D               	addwfc	(dtoa@n+5)& (0+255),f,b
  7819  000F98  236E               	addwfc	(dtoa@n+6)& (0+255),f,b
  7820  000F9A  236F               	addwfc	(dtoa@n+7)& (0+255),f,b
  7821  000F9C                     l4448:
  7822                           
  7823                           ; BSR set to: 0
  7824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  7825  000F9C  BE43               	btfsc	(_prec+1)^0,7,c
  7826  000F9E  EFD3  F007         	goto	u3541
  7827  000FA2  EFD5  F007         	goto	u3540
  7828  000FA6                     u3541:
  7829  000FA6  EFD6  F007         	goto	l4452
  7830  000FAA                     u3540:
  7831  000FAA                     
  7832                           ; BSR set to: 0
  7833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  7834  000FAA  9244               	bcf	_flags^0,1,c
  7835  000FAC                     l4452:
  7836                           
  7837                           ; BSR set to: 0
  7838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  7839  000FAC  BE43               	btfsc	(_prec+1)^0,7,c
  7840  000FAE  EFE3  F007         	goto	u3550
  7841  000FB2  5043               	movf	(_prec+1)^0,w,c
  7842  000FB4  E106               	bnz	u3551
  7843  000FB6  0442               	decf	_prec^0,w,c
  7844  000FB8  B0D8               	btfsc	status,0,c
  7845  000FBA  EFE1  F007         	goto	u3551
  7846  000FBE  EFE3  F007         	goto	u3550
  7847  000FC2                     u3551:
  7848  000FC2  EFE9  F007         	goto	l624
  7849  000FC6                     u3550:
  7850  000FC6                     
  7851                           ; BSR set to: 0
  7852  000FC6  0E00               	movlw	0
  7853  000FC8  6F63               	movwf	(dtoa@p+1)& (0+255),b
  7854  000FCA  0E01               	movlw	1
  7855  000FCC  6F62               	movwf	dtoa@p& (0+255),b
  7856  000FCE  EFED  F007         	goto	l626
  7857  000FD2                     l624:
  7858                           
  7859                           ; BSR set to: 0
  7860  000FD2  C042  F062         	movff	_prec,dtoa@p
  7861  000FD6  C043  F063         	movff	_prec+1,dtoa@p+1
  7862  000FDA                     l626:
  7863                           
  7864                           ; BSR set to: 0
  7865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  7866  000FDA  C040  F064         	movff	_width,dtoa@w
  7867  000FDE  C041  F065         	movff	_width+1,dtoa@w+1
  7868  000FE2                     
  7869                           ; BSR set to: 0
  7870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  7871  000FE2  5166               	movf	dtoa@s& (0+255),w,b
  7872  000FE4  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  7873  000FE6  A4D8               	btfss	status,2,c
  7874  000FE8  EFF8  F007         	goto	u3561
  7875  000FEC  EFFA  F007         	goto	u3560
  7876  000FF0                     u3561:
  7877  000FF0  EF01  F008         	goto	l4460
  7878  000FF4                     u3560:
  7879  000FF4                     
  7880                           ; BSR set to: 0
  7881  000FF4  A444               	btfss	_flags^0,2,c
  7882  000FF6  EFFF  F007         	goto	u3571
  7883  000FFA  EF01  F008         	goto	u3570
  7884  000FFE                     u3571:
  7885  000FFE  EF04  F008         	goto	l4462
  7886  001002                     u3570:
  7887  001002                     l4460:
  7888                           
  7889                           ; BSR set to: 0
  7890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  7891  001002  0764               	decf	dtoa@w& (0+255),f,b
  7892  001004  A0D8               	btfss	status,0,c
  7893  001006  0765               	decf	(dtoa@w+1)& (0+255),f,b
  7894  001008                     l4462:
  7895                           
  7896                           ; BSR set to: 0
  7897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  7898  001008  0E00               	movlw	0
  7899  00100A  6F71               	movwf	(dtoa@i+1)& (0+255),b
  7900  00100C  0E1F               	movlw	31
  7901  00100E  6F70               	movwf	dtoa@i& (0+255),b
  7902  001010                     
  7903                           ; BSR set to: 0
  7904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  7905  001010  0E00               	movlw	0
  7906  001012  6FF1               	movwf	(_dbuf+31)& (0+255),b
  7907                           
  7908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7909  001014  EF89  F008         	goto	l4476
  7910  001018                     l4466:
  7911                           
  7912                           ; BSR set to: 0
  7913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  7914  001018  0770               	decf	dtoa@i& (0+255),f,b
  7915  00101A  A0D8               	btfss	status,0,c
  7916  00101C  0771               	decf	(dtoa@i+1)& (0+255),f,b
  7917  00101E                     
  7918                           ; BSR set to: 0
  7919                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  7920  00101E  0ED2               	movlw	low _dbuf
  7921  001020  2570               	addwf	dtoa@i& (0+255),w,b
  7922  001022  6ED9               	movwf	fsr2l,c
  7923  001024  0E00               	movlw	high _dbuf
  7924  001026  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  7925  001028  6EDA               	movwf	fsr2h,c
  7926  00102A  C068  F011         	movff	dtoa@n,___aomod@dividend
  7927  00102E  C069  F012         	movff	dtoa@n+1,___aomod@dividend+1
  7928  001032  C06A  F013         	movff	dtoa@n+2,___aomod@dividend+2
  7929  001036  C06B  F014         	movff	dtoa@n+3,___aomod@dividend+3
  7930  00103A  C06C  F015         	movff	dtoa@n+4,___aomod@dividend+4
  7931  00103E  C06D  F016         	movff	dtoa@n+5,___aomod@dividend+5
  7932  001042  C06E  F017         	movff	dtoa@n+6,___aomod@dividend+6
  7933  001046  C06F  F018         	movff	dtoa@n+7,___aomod@dividend+7
  7934  00104A  0E0A               	movlw	10
  7935  00104C  6E19               	movwf	___aomod@divisor^0,c
  7936  00104E  0E00               	movlw	0
  7937  001050  6E1A               	movwf	(___aomod@divisor+1)^0,c
  7938  001052  0E00               	movlw	0
  7939  001054  6E1B               	movwf	(___aomod@divisor+2)^0,c
  7940  001056  0E00               	movlw	0
  7941  001058  6E1C               	movwf	(___aomod@divisor+3)^0,c
  7942  00105A  0E00               	movlw	0
  7943  00105C  6E1D               	movwf	(___aomod@divisor+4)^0,c
  7944  00105E  0E00               	movlw	0
  7945  001060  6E1E               	movwf	(___aomod@divisor+5)^0,c
  7946  001062  0E00               	movlw	0
  7947  001064  6E1F               	movwf	(___aomod@divisor+6)^0,c
  7948  001066  0E00               	movlw	0
  7949  001068  6E20               	movwf	(___aomod@divisor+7)^0,c
  7950  00106A  ECC1  F00D         	call	___aomod	;wreg free
  7951  00106E  C011  F038         	movff	?___aomod,??_dtoa
  7952  001072  C012  F039         	movff	?___aomod+1,??_dtoa+1
  7953  001076  C013  F03A         	movff	?___aomod+2,??_dtoa+2
  7954  00107A  C014  F03B         	movff	?___aomod+3,??_dtoa+3
  7955  00107E  C015  F03C         	movff	?___aomod+4,??_dtoa+4
  7956  001082  C016  F03D         	movff	?___aomod+5,??_dtoa+5
  7957  001086  C017  F03E         	movff	?___aomod+6,??_dtoa+6
  7958  00108A  C018  F03F         	movff	?___aomod+7,??_dtoa+7
  7959  00108E  C038  F023         	movff	??_dtoa,abs@a
  7960  001092  C03A  F024         	movff	??_dtoa+2,abs@a+1
  7961  001096  ECCB  F011         	call	_abs	;wreg free
  7962  00109A  5023               	movf	?_abs^0,w,c
  7963  00109C  0F30               	addlw	48
  7964  00109E  6EDF               	movwf	indf2,c
  7965  0010A0                     
  7966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  7967  0010A0  0100               	movlb	0	; () banked
  7968  0010A2  0762               	decf	dtoa@p& (0+255),f,b
  7969  0010A4  A0D8               	btfss	status,0,c
  7970  0010A6  0763               	decf	(dtoa@p+1)& (0+255),f,b
  7971  0010A8                     
  7972                           ; BSR set to: 0
  7973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  7974  0010A8  0764               	decf	dtoa@w& (0+255),f,b
  7975  0010AA  A0D8               	btfss	status,0,c
  7976  0010AC  0765               	decf	(dtoa@w+1)& (0+255),f,b
  7977  0010AE                     
  7978                           ; BSR set to: 0
  7979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  7980  0010AE  C068  F011         	movff	dtoa@n,___aodiv@dividend
  7981  0010B2  C069  F012         	movff	dtoa@n+1,___aodiv@dividend+1
  7982  0010B6  C06A  F013         	movff	dtoa@n+2,___aodiv@dividend+2
  7983  0010BA  C06B  F014         	movff	dtoa@n+3,___aodiv@dividend+3
  7984  0010BE  C06C  F015         	movff	dtoa@n+4,___aodiv@dividend+4
  7985  0010C2  C06D  F016         	movff	dtoa@n+5,___aodiv@dividend+5
  7986  0010C6  C06E  F017         	movff	dtoa@n+6,___aodiv@dividend+6
  7987  0010CA  C06F  F018         	movff	dtoa@n+7,___aodiv@dividend+7
  7988  0010CE  0E0A               	movlw	10
  7989  0010D0  6E19               	movwf	___aodiv@divisor^0,c
  7990  0010D2  0E00               	movlw	0
  7991  0010D4  6E1A               	movwf	(___aodiv@divisor+1)^0,c
  7992  0010D6  0E00               	movlw	0
  7993  0010D8  6E1B               	movwf	(___aodiv@divisor+2)^0,c
  7994  0010DA  0E00               	movlw	0
  7995  0010DC  6E1C               	movwf	(___aodiv@divisor+3)^0,c
  7996  0010DE  0E00               	movlw	0
  7997  0010E0  6E1D               	movwf	(___aodiv@divisor+4)^0,c
  7998  0010E2  0E00               	movlw	0
  7999  0010E4  6E1E               	movwf	(___aodiv@divisor+5)^0,c
  8000  0010E6  0E00               	movlw	0
  8001  0010E8  6E1F               	movwf	(___aodiv@divisor+6)^0,c
  8002  0010EA  0E00               	movlw	0
  8003  0010EC  6E20               	movwf	(___aodiv@divisor+7)^0,c
  8004  0010EE  EC3A  F00C         	call	___aodiv	;wreg free
  8005  0010F2  C011  F068         	movff	?___aodiv,dtoa@n
  8006  0010F6  C012  F069         	movff	?___aodiv+1,dtoa@n+1
  8007  0010FA  C013  F06A         	movff	?___aodiv+2,dtoa@n+2
  8008  0010FE  C014  F06B         	movff	?___aodiv+3,dtoa@n+3
  8009  001102  C015  F06C         	movff	?___aodiv+4,dtoa@n+4
  8010  001106  C016  F06D         	movff	?___aodiv+5,dtoa@n+5
  8011  00110A  C017  F06E         	movff	?___aodiv+6,dtoa@n+6
  8012  00110E  C018  F06F         	movff	?___aodiv+7,dtoa@n+7
  8013  001112                     l4476:
  8014                           
  8015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8016  001112  0100               	movlb	0	; () banked
  8017  001114  BF71               	btfsc	(dtoa@i+1)& (0+255),7,b
  8018  001116  EF95  F008         	goto	u3581
  8019  00111A  5171               	movf	(dtoa@i+1)& (0+255),w,b
  8020  00111C  E108               	bnz	u3580
  8021  00111E  0570               	decf	dtoa@i& (0+255),w,b
  8022  001120  A0D8               	btfss	status,0,c
  8023  001122  EF95  F008         	goto	u3581
  8024  001126  EF97  F008         	goto	u3580
  8025  00112A                     u3581:
  8026  00112A  EFC7  F008         	goto	l4486
  8027  00112E                     u3580:
  8028  00112E                     
  8029                           ; BSR set to: 0
  8030  00112E  5168               	movf	dtoa@n& (0+255),w,b
  8031  001130  1169               	iorwf	(dtoa@n+1)& (0+255),w,b
  8032  001132  116A               	iorwf	(dtoa@n+2)& (0+255),w,b
  8033  001134  116B               	iorwf	(dtoa@n+3)& (0+255),w,b
  8034  001136  116C               	iorwf	(dtoa@n+4)& (0+255),w,b
  8035  001138  116D               	iorwf	(dtoa@n+5)& (0+255),w,b
  8036  00113A  116E               	iorwf	(dtoa@n+6)& (0+255),w,b
  8037  00113C  116F               	iorwf	(dtoa@n+7)& (0+255),w,b
  8038  00113E  A4D8               	btfss	status,2,c
  8039  001140  EFA4  F008         	goto	u3591
  8040  001144  EFA6  F008         	goto	u3590
  8041  001148                     u3591:
  8042  001148  EF0C  F008         	goto	l4466
  8043  00114C                     u3590:
  8044  00114C                     
  8045                           ; BSR set to: 0
  8046  00114C  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
  8047  00114E  EFB3  F008         	goto	u3600
  8048  001152  5163               	movf	(dtoa@p+1)& (0+255),w,b
  8049  001154  E106               	bnz	u3601
  8050  001156  0562               	decf	dtoa@p& (0+255),w,b
  8051  001158  B0D8               	btfsc	status,0,c
  8052  00115A  EFB1  F008         	goto	u3601
  8053  00115E  EFB3  F008         	goto	u3600
  8054  001162                     u3601:
  8055  001162  EF0C  F008         	goto	l4466
  8056  001166                     u3600:
  8057  001166                     
  8058                           ; BSR set to: 0
  8059  001166  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
  8060  001168  EFBE  F008         	goto	u3611
  8061  00116C  5165               	movf	(dtoa@w+1)& (0+255),w,b
  8062  00116E  E108               	bnz	u3610
  8063  001170  0564               	decf	dtoa@w& (0+255),w,b
  8064  001172  A0D8               	btfss	status,0,c
  8065  001174  EFBE  F008         	goto	u3611
  8066  001178  EFC0  F008         	goto	u3610
  8067  00117C                     u3611:
  8068  00117C  EFC7  F008         	goto	l4486
  8069  001180                     u3610:
  8070  001180                     
  8071                           ; BSR set to: 0
  8072  001180  B244               	btfsc	_flags^0,1,c
  8073  001182  EFC5  F008         	goto	u3621
  8074  001186  EFC7  F008         	goto	u3620
  8075  00118A                     u3621:
  8076  00118A  EF0C  F008         	goto	l4466
  8077  00118E                     u3620:
  8078  00118E                     l4486:
  8079                           
  8080                           ; BSR set to: 0
  8081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  8082  00118E  5166               	movf	dtoa@s& (0+255),w,b
  8083  001190  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  8084  001192  A4D8               	btfss	status,2,c
  8085  001194  EFCE  F008         	goto	u3631
  8086  001198  EFD0  F008         	goto	u3630
  8087  00119C                     u3631:
  8088  00119C  EFD7  F008         	goto	l4490
  8089  0011A0                     u3630:
  8090  0011A0                     
  8091                           ; BSR set to: 0
  8092  0011A0  A444               	btfss	_flags^0,2,c
  8093  0011A2  EFD5  F008         	goto	u3641
  8094  0011A6  EFD7  F008         	goto	u3640
  8095  0011AA                     u3641:
  8096  0011AA  EFF5  F008         	goto	l4500
  8097  0011AE                     u3640:
  8098  0011AE                     l4490:
  8099                           
  8100                           ; BSR set to: 0
  8101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  8102  0011AE  0770               	decf	dtoa@i& (0+255),f,b
  8103  0011B0  A0D8               	btfss	status,0,c
  8104  0011B2  0771               	decf	(dtoa@i+1)& (0+255),f,b
  8105  0011B4                     
  8106                           ; BSR set to: 0
  8107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  8108  0011B4  5166               	movf	dtoa@s& (0+255),w,b
  8109  0011B6  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
  8110  0011B8  A4D8               	btfss	status,2,c
  8111  0011BA  EFE1  F008         	goto	u3651
  8112  0011BE  EFE3  F008         	goto	u3650
  8113  0011C2                     u3651:
  8114  0011C2  EFE9  F008         	goto	l4496
  8115  0011C6                     u3650:
  8116  0011C6                     
  8117                           ; BSR set to: 0
  8118  0011C6  0E00               	movlw	0
  8119  0011C8  6F61               	movwf	(_dtoa$1353+1)& (0+255),b
  8120  0011CA  0E2B               	movlw	43
  8121  0011CC  6F60               	movwf	_dtoa$1353& (0+255),b
  8122  0011CE  EFED  F008         	goto	l4498
  8123  0011D2                     l4496:
  8124                           
  8125                           ; BSR set to: 0
  8126  0011D2  0E00               	movlw	0
  8127  0011D4  6F61               	movwf	(_dtoa$1353+1)& (0+255),b
  8128  0011D6  0E2D               	movlw	45
  8129  0011D8  6F60               	movwf	_dtoa$1353& (0+255),b
  8130  0011DA                     l4498:
  8131                           
  8132                           ; BSR set to: 0
  8133  0011DA  0ED2               	movlw	low _dbuf
  8134  0011DC  2570               	addwf	dtoa@i& (0+255),w,b
  8135  0011DE  6ED9               	movwf	fsr2l,c
  8136  0011E0  0E00               	movlw	high _dbuf
  8137  0011E2  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  8138  0011E4  6EDA               	movwf	fsr2h,c
  8139  0011E6  C060  FFDF         	movff	_dtoa$1353,indf2
  8140  0011EA                     l4500:
  8141                           
  8142                           ; BSR set to: 0
  8143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  8144  0011EA  C02E  F023         	movff	dtoa@fp,pad@fp
  8145  0011EE  C02F  F024         	movff	dtoa@fp+1,pad@fp+1
  8146  0011F2  0ED2               	movlw	low _dbuf
  8147  0011F4  2570               	addwf	dtoa@i& (0+255),w,b
  8148  0011F6  6E25               	movwf	pad@buf^0,c
  8149  0011F8  0E00               	movlw	high _dbuf
  8150  0011FA  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
  8151  0011FC  6E26               	movwf	(pad@buf+1)^0,c
  8152  0011FE  C064  F027         	movff	dtoa@w,pad@p
  8153  001202  C065  F028         	movff	dtoa@w+1,pad@p+1
  8154  001206  ECE0  F00E         	call	_pad	;wreg free
  8155  00120A  C023  F02E         	movff	?_pad,?_dtoa
  8156  00120E  C024  F02F         	movff	?_pad+1,?_dtoa+1
  8157  001212  0012               	return		;funcret
  8158  001214                     __end_of_dtoa:
  8159                           	opt callstack 0
  8160                           
  8161 ;; *************** function _abs *****************
  8162 ;; Defined at:
  8163 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  8164 ;; Parameters:    Size  Location     Type
  8165 ;;  a               2   34[COMRAM] int 
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;		None
  8168 ;; Return value:  Size  Location     Type
  8169 ;;                  2   34[COMRAM] int 
  8170 ;; Registers used:
  8171 ;;		wreg, status,2, status,0
  8172 ;; Tracked objects:
  8173 ;;		On entry : 0/0
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8179 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8180 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8181 ;;Total ram usage:        4 bytes
  8182 ;; Hardware stack levels used:    1
  8183 ;; Hardware stack levels required when called:    4
  8184 ;; This function calls:
  8185 ;;		Nothing
  8186 ;; This function is called by:
  8187 ;;		_dtoa
  8188 ;; This function uses a non-reentrant model
  8189 ;;
  8190                           
  8191                           	psect	text31
  8192  002396                     __ptext31:
  8193                           	opt callstack 0
  8194  002396                     _abs:
  8195                           	opt callstack 22
  8196  002396  BE24               	btfsc	(abs@a+1)^0,7,c
  8197  002398  EFD8  F011         	goto	u3250
  8198  00239C  5024               	movf	(abs@a+1)^0,w,c
  8199  00239E  E106               	bnz	u3251
  8200  0023A0  0423               	decf	abs@a^0,w,c
  8201  0023A2  B0D8               	btfsc	status,0,c
  8202  0023A4  EFD6  F011         	goto	u3251
  8203  0023A8  EFD8  F011         	goto	u3250
  8204  0023AC                     u3251:
  8205  0023AC  EFE6  F011         	goto	l1392
  8206  0023B0                     u3250:
  8207  0023B0  C023  F025         	movff	abs@a,??_abs
  8208  0023B4  C024  F026         	movff	abs@a+1,??_abs+1
  8209  0023B8  1E25               	comf	??_abs^0,f,c
  8210  0023BA  1E26               	comf	(??_abs+1)^0,f,c
  8211  0023BC  4A25               	infsnz	??_abs^0,f,c
  8212  0023BE  2A26               	incf	(??_abs+1)^0,f,c
  8213  0023C0  C025  F023         	movff	??_abs,?_abs
  8214  0023C4  C026  F024         	movff	??_abs+1,?_abs+1
  8215  0023C8  EFEA  F011         	goto	l1395
  8216  0023CC                     l1392:
  8217  0023CC  C023  F023         	movff	abs@a,?_abs
  8218  0023D0  C024  F024         	movff	abs@a+1,?_abs+1
  8219  0023D4                     l1395:
  8220  0023D4  0012               	return		;funcret
  8221  0023D6                     __end_of_abs:
  8222                           	opt callstack 0
  8223                           
  8224 ;; *************** function ___aomod *****************
  8225 ;; Defined at:
  8226 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  8227 ;; Parameters:    Size  Location     Type
  8228 ;;  dividend        8   16[COMRAM] long long 
  8229 ;;  divisor         8   24[COMRAM] long long 
  8230 ;; Auto vars:     Size  Location     Type
  8231 ;;  sign            1   33[COMRAM] unsigned char 
  8232 ;;  counter         1   32[COMRAM] unsigned char 
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  8   16[COMRAM] long long 
  8235 ;; Registers used:
  8236 ;;		wreg, status,2, status,0
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8242 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8243 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8245 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8246 ;;Total ram usage:       18 bytes
  8247 ;; Hardware stack levels used:    1
  8248 ;; Hardware stack levels required when called:    4
  8249 ;; This function calls:
  8250 ;;		Nothing
  8251 ;; This function is called by:
  8252 ;;		_dtoa
  8253 ;; This function uses a non-reentrant model
  8254 ;;
  8255                           
  8256                           	psect	text32
  8257  001B82                     __ptext32:
  8258                           	opt callstack 0
  8259  001B82                     ___aomod:
  8260                           	opt callstack 22
  8261  001B82  0E00               	movlw	0
  8262  001B84  6E22               	movwf	___aomod@sign^0,c
  8263  001B86  BE18               	btfsc	(___aomod@dividend+7)^0,7,c
  8264  001B88  EFCA  F00D         	goto	u3420
  8265  001B8C  EFC8  F00D         	goto	u3421
  8266  001B90                     u3421:
  8267  001B90  EFDC  F00D         	goto	l4388
  8268  001B94                     u3420:
  8269  001B94  1E18               	comf	(___aomod@dividend+7)^0,f,c
  8270  001B96  1E17               	comf	(___aomod@dividend+6)^0,f,c
  8271  001B98  1E16               	comf	(___aomod@dividend+5)^0,f,c
  8272  001B9A  1E15               	comf	(___aomod@dividend+4)^0,f,c
  8273  001B9C  1E14               	comf	(___aomod@dividend+3)^0,f,c
  8274  001B9E  1E13               	comf	(___aomod@dividend+2)^0,f,c
  8275  001BA0  1E12               	comf	(___aomod@dividend+1)^0,f,c
  8276  001BA2  6C11               	negf	___aomod@dividend^0,c
  8277  001BA4  0E00               	movlw	0
  8278  001BA6  2212               	addwfc	(___aomod@dividend+1)^0,f,c
  8279  001BA8  2213               	addwfc	(___aomod@dividend+2)^0,f,c
  8280  001BAA  2214               	addwfc	(___aomod@dividend+3)^0,f,c
  8281  001BAC  2215               	addwfc	(___aomod@dividend+4)^0,f,c
  8282  001BAE  2216               	addwfc	(___aomod@dividend+5)^0,f,c
  8283  001BB0  2217               	addwfc	(___aomod@dividend+6)^0,f,c
  8284  001BB2  2218               	addwfc	(___aomod@dividend+7)^0,f,c
  8285  001BB4  0E01               	movlw	1
  8286  001BB6  6E22               	movwf	___aomod@sign^0,c
  8287  001BB8                     l4388:
  8288  001BB8  BE20               	btfsc	(___aomod@divisor+7)^0,7,c
  8289  001BBA  EFE3  F00D         	goto	u3430
  8290  001BBE  EFE1  F00D         	goto	u3431
  8291  001BC2                     u3431:
  8292  001BC2  EFF3  F00D         	goto	l4392
  8293  001BC6                     u3430:
  8294  001BC6  1E20               	comf	(___aomod@divisor+7)^0,f,c
  8295  001BC8  1E1F               	comf	(___aomod@divisor+6)^0,f,c
  8296  001BCA  1E1E               	comf	(___aomod@divisor+5)^0,f,c
  8297  001BCC  1E1D               	comf	(___aomod@divisor+4)^0,f,c
  8298  001BCE  1E1C               	comf	(___aomod@divisor+3)^0,f,c
  8299  001BD0  1E1B               	comf	(___aomod@divisor+2)^0,f,c
  8300  001BD2  1E1A               	comf	(___aomod@divisor+1)^0,f,c
  8301  001BD4  6C19               	negf	___aomod@divisor^0,c
  8302  001BD6  0E00               	movlw	0
  8303  001BD8  221A               	addwfc	(___aomod@divisor+1)^0,f,c
  8304  001BDA  221B               	addwfc	(___aomod@divisor+2)^0,f,c
  8305  001BDC  221C               	addwfc	(___aomod@divisor+3)^0,f,c
  8306  001BDE  221D               	addwfc	(___aomod@divisor+4)^0,f,c
  8307  001BE0  221E               	addwfc	(___aomod@divisor+5)^0,f,c
  8308  001BE2  221F               	addwfc	(___aomod@divisor+6)^0,f,c
  8309  001BE4  2220               	addwfc	(___aomod@divisor+7)^0,f,c
  8310  001BE6                     l4392:
  8311  001BE6  5019               	movf	___aomod@divisor^0,w,c
  8312  001BE8  101A               	iorwf	(___aomod@divisor+1)^0,w,c
  8313  001BEA  101B               	iorwf	(___aomod@divisor+2)^0,w,c
  8314  001BEC  101C               	iorwf	(___aomod@divisor+3)^0,w,c
  8315  001BEE  101D               	iorwf	(___aomod@divisor+4)^0,w,c
  8316  001BF0  101E               	iorwf	(___aomod@divisor+5)^0,w,c
  8317  001BF2  101F               	iorwf	(___aomod@divisor+6)^0,w,c
  8318  001BF4  1020               	iorwf	(___aomod@divisor+7)^0,w,c
  8319  001BF6  B4D8               	btfsc	status,2,c
  8320  001BF8  EF00  F00E         	goto	u3441
  8321  001BFC  EF02  F00E         	goto	u3440
  8322  001C00                     u3441:
  8323  001C00  EF4A  F00E         	goto	l4408
  8324  001C04                     u3440:
  8325  001C04  0E01               	movlw	1
  8326  001C06  6E21               	movwf	___aomod@counter^0,c
  8327  001C08  EF10  F00E         	goto	l4398
  8328  001C0C                     l4396:
  8329  001C0C  90D8               	bcf	status,0,c
  8330  001C0E  3619               	rlcf	___aomod@divisor^0,f,c
  8331  001C10  361A               	rlcf	(___aomod@divisor+1)^0,f,c
  8332  001C12  361B               	rlcf	(___aomod@divisor+2)^0,f,c
  8333  001C14  361C               	rlcf	(___aomod@divisor+3)^0,f,c
  8334  001C16  361D               	rlcf	(___aomod@divisor+4)^0,f,c
  8335  001C18  361E               	rlcf	(___aomod@divisor+5)^0,f,c
  8336  001C1A  361F               	rlcf	(___aomod@divisor+6)^0,f,c
  8337  001C1C  3620               	rlcf	(___aomod@divisor+7)^0,f,c
  8338  001C1E  2A21               	incf	___aomod@counter^0,f,c
  8339  001C20                     l4398:
  8340  001C20  AE20               	btfss	(___aomod@divisor+7)^0,7,c
  8341  001C22  EF15  F00E         	goto	u3451
  8342  001C26  EF17  F00E         	goto	u3450
  8343  001C2A                     u3451:
  8344  001C2A  EF06  F00E         	goto	l4396
  8345  001C2E                     u3450:
  8346  001C2E                     l4400:
  8347  001C2E  5019               	movf	___aomod@divisor^0,w,c
  8348  001C30  5C11               	subwf	___aomod@dividend^0,w,c
  8349  001C32  501A               	movf	(___aomod@divisor+1)^0,w,c
  8350  001C34  5812               	subwfb	(___aomod@dividend+1)^0,w,c
  8351  001C36  501B               	movf	(___aomod@divisor+2)^0,w,c
  8352  001C38  5813               	subwfb	(___aomod@dividend+2)^0,w,c
  8353  001C3A  501C               	movf	(___aomod@divisor+3)^0,w,c
  8354  001C3C  5814               	subwfb	(___aomod@dividend+3)^0,w,c
  8355  001C3E  501D               	movf	(___aomod@divisor+4)^0,w,c
  8356  001C40  5815               	subwfb	(___aomod@dividend+4)^0,w,c
  8357  001C42  501E               	movf	(___aomod@divisor+5)^0,w,c
  8358  001C44  5816               	subwfb	(___aomod@dividend+5)^0,w,c
  8359  001C46  501F               	movf	(___aomod@divisor+6)^0,w,c
  8360  001C48  5817               	subwfb	(___aomod@dividend+6)^0,w,c
  8361  001C4A  5020               	movf	(___aomod@divisor+7)^0,w,c
  8362  001C4C  5818               	subwfb	(___aomod@dividend+7)^0,w,c
  8363  001C4E  A0D8               	btfss	status,0,c
  8364  001C50  EF2C  F00E         	goto	u3461
  8365  001C54  EF2E  F00E         	goto	u3460
  8366  001C58                     u3461:
  8367  001C58  EF3E  F00E         	goto	l4404
  8368  001C5C                     u3460:
  8369  001C5C  5019               	movf	___aomod@divisor^0,w,c
  8370  001C5E  5E11               	subwf	___aomod@dividend^0,f,c
  8371  001C60  501A               	movf	(___aomod@divisor+1)^0,w,c
  8372  001C62  5A12               	subwfb	(___aomod@dividend+1)^0,f,c
  8373  001C64  501B               	movf	(___aomod@divisor+2)^0,w,c
  8374  001C66  5A13               	subwfb	(___aomod@dividend+2)^0,f,c
  8375  001C68  501C               	movf	(___aomod@divisor+3)^0,w,c
  8376  001C6A  5A14               	subwfb	(___aomod@dividend+3)^0,f,c
  8377  001C6C  501D               	movf	(___aomod@divisor+4)^0,w,c
  8378  001C6E  5A15               	subwfb	(___aomod@dividend+4)^0,f,c
  8379  001C70  501E               	movf	(___aomod@divisor+5)^0,w,c
  8380  001C72  5A16               	subwfb	(___aomod@dividend+5)^0,f,c
  8381  001C74  501F               	movf	(___aomod@divisor+6)^0,w,c
  8382  001C76  5A17               	subwfb	(___aomod@dividend+6)^0,f,c
  8383  001C78  5020               	movf	(___aomod@divisor+7)^0,w,c
  8384  001C7A  5A18               	subwfb	(___aomod@dividend+7)^0,f,c
  8385  001C7C                     l4404:
  8386  001C7C  90D8               	bcf	status,0,c
  8387  001C7E  3220               	rrcf	(___aomod@divisor+7)^0,f,c
  8388  001C80  321F               	rrcf	(___aomod@divisor+6)^0,f,c
  8389  001C82  321E               	rrcf	(___aomod@divisor+5)^0,f,c
  8390  001C84  321D               	rrcf	(___aomod@divisor+4)^0,f,c
  8391  001C86  321C               	rrcf	(___aomod@divisor+3)^0,f,c
  8392  001C88  321B               	rrcf	(___aomod@divisor+2)^0,f,c
  8393  001C8A  321A               	rrcf	(___aomod@divisor+1)^0,f,c
  8394  001C8C  3219               	rrcf	___aomod@divisor^0,f,c
  8395  001C8E  2E21               	decfsz	___aomod@counter^0,f,c
  8396  001C90  EF17  F00E         	goto	l4400
  8397  001C94                     l4408:
  8398  001C94  5022               	movf	___aomod@sign^0,w,c
  8399  001C96  B4D8               	btfsc	status,2,c
  8400  001C98  EF50  F00E         	goto	u3471
  8401  001C9C  EF52  F00E         	goto	u3470
  8402  001CA0                     u3471:
  8403  001CA0  EF62  F00E         	goto	l4412
  8404  001CA4                     u3470:
  8405  001CA4  1E18               	comf	(___aomod@dividend+7)^0,f,c
  8406  001CA6  1E17               	comf	(___aomod@dividend+6)^0,f,c
  8407  001CA8  1E16               	comf	(___aomod@dividend+5)^0,f,c
  8408  001CAA  1E15               	comf	(___aomod@dividend+4)^0,f,c
  8409  001CAC  1E14               	comf	(___aomod@dividend+3)^0,f,c
  8410  001CAE  1E13               	comf	(___aomod@dividend+2)^0,f,c
  8411  001CB0  1E12               	comf	(___aomod@dividend+1)^0,f,c
  8412  001CB2  6C11               	negf	___aomod@dividend^0,c
  8413  001CB4  0E00               	movlw	0
  8414  001CB6  2212               	addwfc	(___aomod@dividend+1)^0,f,c
  8415  001CB8  2213               	addwfc	(___aomod@dividend+2)^0,f,c
  8416  001CBA  2214               	addwfc	(___aomod@dividend+3)^0,f,c
  8417  001CBC  2215               	addwfc	(___aomod@dividend+4)^0,f,c
  8418  001CBE  2216               	addwfc	(___aomod@dividend+5)^0,f,c
  8419  001CC0  2217               	addwfc	(___aomod@dividend+6)^0,f,c
  8420  001CC2  2218               	addwfc	(___aomod@dividend+7)^0,f,c
  8421  001CC4                     l4412:
  8422  001CC4  C011  F011         	movff	___aomod@dividend,?___aomod
  8423  001CC8  C012  F012         	movff	___aomod@dividend+1,?___aomod+1
  8424  001CCC  C013  F013         	movff	___aomod@dividend+2,?___aomod+2
  8425  001CD0  C014  F014         	movff	___aomod@dividend+3,?___aomod+3
  8426  001CD4  C015  F015         	movff	___aomod@dividend+4,?___aomod+4
  8427  001CD8  C016  F016         	movff	___aomod@dividend+5,?___aomod+5
  8428  001CDC  C017  F017         	movff	___aomod@dividend+6,?___aomod+6
  8429  001CE0  C018  F018         	movff	___aomod@dividend+7,?___aomod+7
  8430  001CE4  0012               	return		;funcret
  8431  001CE6                     __end_of___aomod:
  8432                           	opt callstack 0
  8433                           
  8434 ;; *************** function ___aodiv *****************
  8435 ;; Defined at:
  8436 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  8437 ;; Parameters:    Size  Location     Type
  8438 ;;  dividend        8   16[COMRAM] long long 
  8439 ;;  divisor         8   24[COMRAM] long long 
  8440 ;; Auto vars:     Size  Location     Type
  8441 ;;  quotient        8   34[COMRAM] long long 
  8442 ;;  sign            1   33[COMRAM] unsigned char 
  8443 ;;  counter         1   32[COMRAM] unsigned char 
  8444 ;; Return value:  Size  Location     Type
  8445 ;;                  8   16[COMRAM] long long 
  8446 ;; Registers used:
  8447 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8448 ;; Tracked objects:
  8449 ;;		On entry : 0/0
  8450 ;;		On exit  : 0/0
  8451 ;;		Unchanged: 0/0
  8452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8453 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8454 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8456 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8457 ;;Total ram usage:       26 bytes
  8458 ;; Hardware stack levels used:    1
  8459 ;; Hardware stack levels required when called:    4
  8460 ;; This function calls:
  8461 ;;		Nothing
  8462 ;; This function is called by:
  8463 ;;		_dtoa
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           	psect	text33
  8468  001874                     __ptext33:
  8469                           	opt callstack 0
  8470  001874                     ___aodiv:
  8471                           	opt callstack 22
  8472  001874  0E00               	movlw	0
  8473  001876  6E22               	movwf	___aodiv@sign^0,c
  8474  001878  BE20               	btfsc	(___aodiv@divisor+7)^0,7,c
  8475  00187A  EF43  F00C         	goto	u3350
  8476  00187E  EF41  F00C         	goto	u3351
  8477  001882                     u3351:
  8478  001882  EF55  F00C         	goto	l4344
  8479  001886                     u3350:
  8480  001886  1E20               	comf	(___aodiv@divisor+7)^0,f,c
  8481  001888  1E1F               	comf	(___aodiv@divisor+6)^0,f,c
  8482  00188A  1E1E               	comf	(___aodiv@divisor+5)^0,f,c
  8483  00188C  1E1D               	comf	(___aodiv@divisor+4)^0,f,c
  8484  00188E  1E1C               	comf	(___aodiv@divisor+3)^0,f,c
  8485  001890  1E1B               	comf	(___aodiv@divisor+2)^0,f,c
  8486  001892  1E1A               	comf	(___aodiv@divisor+1)^0,f,c
  8487  001894  6C19               	negf	___aodiv@divisor^0,c
  8488  001896  0E00               	movlw	0
  8489  001898  221A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8490  00189A  221B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8491  00189C  221C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8492  00189E  221D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8493  0018A0  221E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8494  0018A2  221F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8495  0018A4  2220               	addwfc	(___aodiv@divisor+7)^0,f,c
  8496  0018A6  0E01               	movlw	1
  8497  0018A8  6E22               	movwf	___aodiv@sign^0,c
  8498  0018AA                     l4344:
  8499  0018AA  BE18               	btfsc	(___aodiv@dividend+7)^0,7,c
  8500  0018AC  EF5C  F00C         	goto	u3360
  8501  0018B0  EF5A  F00C         	goto	u3361
  8502  0018B4                     u3361:
  8503  0018B4  EF6E  F00C         	goto	l4350
  8504  0018B8                     u3360:
  8505  0018B8  1E18               	comf	(___aodiv@dividend+7)^0,f,c
  8506  0018BA  1E17               	comf	(___aodiv@dividend+6)^0,f,c
  8507  0018BC  1E16               	comf	(___aodiv@dividend+5)^0,f,c
  8508  0018BE  1E15               	comf	(___aodiv@dividend+4)^0,f,c
  8509  0018C0  1E14               	comf	(___aodiv@dividend+3)^0,f,c
  8510  0018C2  1E13               	comf	(___aodiv@dividend+2)^0,f,c
  8511  0018C4  1E12               	comf	(___aodiv@dividend+1)^0,f,c
  8512  0018C6  6C11               	negf	___aodiv@dividend^0,c
  8513  0018C8  0E00               	movlw	0
  8514  0018CA  2212               	addwfc	(___aodiv@dividend+1)^0,f,c
  8515  0018CC  2213               	addwfc	(___aodiv@dividend+2)^0,f,c
  8516  0018CE  2214               	addwfc	(___aodiv@dividend+3)^0,f,c
  8517  0018D0  2215               	addwfc	(___aodiv@dividend+4)^0,f,c
  8518  0018D2  2216               	addwfc	(___aodiv@dividend+5)^0,f,c
  8519  0018D4  2217               	addwfc	(___aodiv@dividend+6)^0,f,c
  8520  0018D6  2218               	addwfc	(___aodiv@dividend+7)^0,f,c
  8521  0018D8  0E01               	movlw	1
  8522  0018DA  1A22               	xorwf	___aodiv@sign^0,f,c
  8523  0018DC                     l4350:
  8524  0018DC  EE20  F023         	lfsr	2,___aodiv@quotient
  8525  0018E0  0E07               	movlw	7
  8526  0018E2                     u3371:
  8527  0018E2  6ADE               	clrf	postinc2,c
  8528  0018E4  06E8               	decf	wreg,f,c
  8529  0018E6  E2FD               	bc	u3371
  8530  0018E8  5019               	movf	___aodiv@divisor^0,w,c
  8531  0018EA  101A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8532  0018EC  101B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8533  0018EE  101C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8534  0018F0  101D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8535  0018F2  101E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8536  0018F4  101F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8537  0018F6  1020               	iorwf	(___aodiv@divisor+7)^0,w,c
  8538  0018F8  B4D8               	btfsc	status,2,c
  8539  0018FA  EF81  F00C         	goto	u3381
  8540  0018FE  EF83  F00C         	goto	u3380
  8541  001902                     u3381:
  8542  001902  EFD5  F00C         	goto	l4372
  8543  001906                     u3380:
  8544  001906  0E01               	movlw	1
  8545  001908  6E21               	movwf	___aodiv@counter^0,c
  8546  00190A  EF91  F00C         	goto	l4358
  8547  00190E                     l4356:
  8548  00190E  90D8               	bcf	status,0,c
  8549  001910  3619               	rlcf	___aodiv@divisor^0,f,c
  8550  001912  361A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8551  001914  361B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8552  001916  361C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8553  001918  361D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8554  00191A  361E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8555  00191C  361F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8556  00191E  3620               	rlcf	(___aodiv@divisor+7)^0,f,c
  8557  001920  2A21               	incf	___aodiv@counter^0,f,c
  8558  001922                     l4358:
  8559  001922  AE20               	btfss	(___aodiv@divisor+7)^0,7,c
  8560  001924  EF96  F00C         	goto	u3391
  8561  001928  EF98  F00C         	goto	u3390
  8562  00192C                     u3391:
  8563  00192C  EF87  F00C         	goto	l4356
  8564  001930                     u3390:
  8565  001930                     l4360:
  8566  001930  90D8               	bcf	status,0,c
  8567  001932  3623               	rlcf	___aodiv@quotient^0,f,c
  8568  001934  3624               	rlcf	(___aodiv@quotient+1)^0,f,c
  8569  001936  3625               	rlcf	(___aodiv@quotient+2)^0,f,c
  8570  001938  3626               	rlcf	(___aodiv@quotient+3)^0,f,c
  8571  00193A  3627               	rlcf	(___aodiv@quotient+4)^0,f,c
  8572  00193C  3628               	rlcf	(___aodiv@quotient+5)^0,f,c
  8573  00193E  3629               	rlcf	(___aodiv@quotient+6)^0,f,c
  8574  001940  362A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8575  001942  5019               	movf	___aodiv@divisor^0,w,c
  8576  001944  5C11               	subwf	___aodiv@dividend^0,w,c
  8577  001946  501A               	movf	(___aodiv@divisor+1)^0,w,c
  8578  001948  5812               	subwfb	(___aodiv@dividend+1)^0,w,c
  8579  00194A  501B               	movf	(___aodiv@divisor+2)^0,w,c
  8580  00194C  5813               	subwfb	(___aodiv@dividend+2)^0,w,c
  8581  00194E  501C               	movf	(___aodiv@divisor+3)^0,w,c
  8582  001950  5814               	subwfb	(___aodiv@dividend+3)^0,w,c
  8583  001952  501D               	movf	(___aodiv@divisor+4)^0,w,c
  8584  001954  5815               	subwfb	(___aodiv@dividend+4)^0,w,c
  8585  001956  501E               	movf	(___aodiv@divisor+5)^0,w,c
  8586  001958  5816               	subwfb	(___aodiv@dividend+5)^0,w,c
  8587  00195A  501F               	movf	(___aodiv@divisor+6)^0,w,c
  8588  00195C  5817               	subwfb	(___aodiv@dividend+6)^0,w,c
  8589  00195E  5020               	movf	(___aodiv@divisor+7)^0,w,c
  8590  001960  5818               	subwfb	(___aodiv@dividend+7)^0,w,c
  8591  001962  A0D8               	btfss	status,0,c
  8592  001964  EFB6  F00C         	goto	u3401
  8593  001968  EFB8  F00C         	goto	u3400
  8594  00196C                     u3401:
  8595  00196C  EFC9  F00C         	goto	l4368
  8596  001970                     u3400:
  8597  001970  5019               	movf	___aodiv@divisor^0,w,c
  8598  001972  5E11               	subwf	___aodiv@dividend^0,f,c
  8599  001974  501A               	movf	(___aodiv@divisor+1)^0,w,c
  8600  001976  5A12               	subwfb	(___aodiv@dividend+1)^0,f,c
  8601  001978  501B               	movf	(___aodiv@divisor+2)^0,w,c
  8602  00197A  5A13               	subwfb	(___aodiv@dividend+2)^0,f,c
  8603  00197C  501C               	movf	(___aodiv@divisor+3)^0,w,c
  8604  00197E  5A14               	subwfb	(___aodiv@dividend+3)^0,f,c
  8605  001980  501D               	movf	(___aodiv@divisor+4)^0,w,c
  8606  001982  5A15               	subwfb	(___aodiv@dividend+4)^0,f,c
  8607  001984  501E               	movf	(___aodiv@divisor+5)^0,w,c
  8608  001986  5A16               	subwfb	(___aodiv@dividend+5)^0,f,c
  8609  001988  501F               	movf	(___aodiv@divisor+6)^0,w,c
  8610  00198A  5A17               	subwfb	(___aodiv@dividend+6)^0,f,c
  8611  00198C  5020               	movf	(___aodiv@divisor+7)^0,w,c
  8612  00198E  5A18               	subwfb	(___aodiv@dividend+7)^0,f,c
  8613  001990  8023               	bsf	___aodiv@quotient^0,0,c
  8614  001992                     l4368:
  8615  001992  90D8               	bcf	status,0,c
  8616  001994  3220               	rrcf	(___aodiv@divisor+7)^0,f,c
  8617  001996  321F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8618  001998  321E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8619  00199A  321D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8620  00199C  321C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8621  00199E  321B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8622  0019A0  321A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8623  0019A2  3219               	rrcf	___aodiv@divisor^0,f,c
  8624  0019A4  2E21               	decfsz	___aodiv@counter^0,f,c
  8625  0019A6  EF98  F00C         	goto	l4360
  8626  0019AA                     l4372:
  8627  0019AA  5022               	movf	___aodiv@sign^0,w,c
  8628  0019AC  B4D8               	btfsc	status,2,c
  8629  0019AE  EFDB  F00C         	goto	u3411
  8630  0019B2  EFDD  F00C         	goto	u3410
  8631  0019B6                     u3411:
  8632  0019B6  EFED  F00C         	goto	l4376
  8633  0019BA                     u3410:
  8634  0019BA  1E2A               	comf	(___aodiv@quotient+7)^0,f,c
  8635  0019BC  1E29               	comf	(___aodiv@quotient+6)^0,f,c
  8636  0019BE  1E28               	comf	(___aodiv@quotient+5)^0,f,c
  8637  0019C0  1E27               	comf	(___aodiv@quotient+4)^0,f,c
  8638  0019C2  1E26               	comf	(___aodiv@quotient+3)^0,f,c
  8639  0019C4  1E25               	comf	(___aodiv@quotient+2)^0,f,c
  8640  0019C6  1E24               	comf	(___aodiv@quotient+1)^0,f,c
  8641  0019C8  6C23               	negf	___aodiv@quotient^0,c
  8642  0019CA  0E00               	movlw	0
  8643  0019CC  2224               	addwfc	(___aodiv@quotient+1)^0,f,c
  8644  0019CE  2225               	addwfc	(___aodiv@quotient+2)^0,f,c
  8645  0019D0  2226               	addwfc	(___aodiv@quotient+3)^0,f,c
  8646  0019D2  2227               	addwfc	(___aodiv@quotient+4)^0,f,c
  8647  0019D4  2228               	addwfc	(___aodiv@quotient+5)^0,f,c
  8648  0019D6  2229               	addwfc	(___aodiv@quotient+6)^0,f,c
  8649  0019D8  222A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8650  0019DA                     l4376:
  8651  0019DA  C023  F011         	movff	___aodiv@quotient,?___aodiv
  8652  0019DE  C024  F012         	movff	___aodiv@quotient+1,?___aodiv+1
  8653  0019E2  C025  F013         	movff	___aodiv@quotient+2,?___aodiv+2
  8654  0019E6  C026  F014         	movff	___aodiv@quotient+3,?___aodiv+3
  8655  0019EA  C027  F015         	movff	___aodiv@quotient+4,?___aodiv+4
  8656  0019EE  C028  F016         	movff	___aodiv@quotient+5,?___aodiv+5
  8657  0019F2  C029  F017         	movff	___aodiv@quotient+6,?___aodiv+6
  8658  0019F6  C02A  F018         	movff	___aodiv@quotient+7,?___aodiv+7
  8659  0019FA  0012               	return		;funcret
  8660  0019FC                     __end_of___aodiv:
  8661                           	opt callstack 0
  8662                           
  8663 ;; *************** function _ctoa *****************
  8664 ;; Defined at:
  8665 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8666 ;; Parameters:    Size  Location     Type
  8667 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  8668 ;;		 -> NULL(0), 
  8669 ;;  c               1   47[COMRAM] unsigned char 
  8670 ;; Auto vars:     Size  Location     Type
  8671 ;;  w               2   48[COMRAM] int 
  8672 ;;  l               2    0        int 
  8673 ;; Return value:  Size  Location     Type
  8674 ;;                  2   45[COMRAM] int 
  8675 ;; Registers used:
  8676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8677 ;; Tracked objects:
  8678 ;;		On entry : 0/0
  8679 ;;		On exit  : 0/0
  8680 ;;		Unchanged: 0/0
  8681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8682 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8683 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8685 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8686 ;;Total ram usage:        5 bytes
  8687 ;; Hardware stack levels used:    1
  8688 ;; Hardware stack levels required when called:    9
  8689 ;; This function calls:
  8690 ;;		_pad
  8691 ;; This function is called by:
  8692 ;;		_vfpfcnvrt
  8693 ;; This function uses a non-reentrant model
  8694 ;;
  8695                           
  8696                           	psect	text34
  8697  0022A6                     __ptext34:
  8698                           	opt callstack 0
  8699  0022A6                     _ctoa:
  8700                           	opt callstack 18
  8701  0022A6                     
  8702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  8703  0022A6  5040               	movf	_width^0,w,c
  8704  0022A8  1041               	iorwf	(_width+1)^0,w,c
  8705  0022AA  A4D8               	btfss	status,2,c
  8706  0022AC  EF5A  F011         	goto	u3501
  8707  0022B0  EF5C  F011         	goto	u3500
  8708  0022B4                     u3501:
  8709  0022B4  EF62  F011         	goto	l4432
  8710  0022B8                     u3500:
  8711  0022B8  C040  F031         	movff	_width,ctoa@w
  8712  0022BC  C041  F032         	movff	_width+1,ctoa@w+1
  8713  0022C0  EF68  F011         	goto	l4434
  8714  0022C4                     l4432:
  8715  0022C4  0EFF               	movlw	255
  8716  0022C6  2440               	addwf	_width^0,w,c
  8717  0022C8  6E31               	movwf	ctoa@w^0,c
  8718  0022CA  0EFF               	movlw	255
  8719  0022CC  2041               	addwfc	(_width+1)^0,w,c
  8720  0022CE  6E32               	movwf	(ctoa@w+1)^0,c
  8721  0022D0                     l4434:
  8722                           
  8723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  8724  0022D0  C030  F0D2         	movff	ctoa@c,_dbuf
  8725  0022D4                     
  8726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  8727  0022D4  0E00               	movlw	0
  8728  0022D6  0100               	movlb	0	; () banked
  8729  0022D8  6FD3               	movwf	(_dbuf+1)& (0+255),b
  8730  0022DA                     
  8731                           ; BSR set to: 0
  8732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  8733  0022DA  C02E  F023         	movff	ctoa@fp,pad@fp
  8734  0022DE  C02F  F024         	movff	ctoa@fp+1,pad@fp+1
  8735  0022E2  0ED2               	movlw	low _dbuf
  8736  0022E4  6E25               	movwf	pad@buf^0,c
  8737  0022E6  0E00               	movlw	high _dbuf
  8738  0022E8  6E26               	movwf	(pad@buf+1)^0,c
  8739  0022EA  C031  F027         	movff	ctoa@w,pad@p
  8740  0022EE  C032  F028         	movff	ctoa@w+1,pad@p+1
  8741  0022F2  ECE0  F00E         	call	_pad	;wreg free
  8742  0022F6  C023  F02E         	movff	?_pad,?_ctoa
  8743  0022FA  C024  F02F         	movff	?_pad+1,?_ctoa+1
  8744  0022FE  0012               	return		;funcret
  8745  002300                     __end_of_ctoa:
  8746                           	opt callstack 0
  8747                           
  8748 ;; *************** function _pad *****************
  8749 ;; Defined at:
  8750 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8751 ;; Parameters:    Size  Location     Type
  8752 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  8753 ;;		 -> NULL(0), 
  8754 ;;  buf             2   36[COMRAM] PTR unsigned char 
  8755 ;;		 -> dbuf(32), 
  8756 ;;  p               2   38[COMRAM] int 
  8757 ;; Auto vars:     Size  Location     Type
  8758 ;;  w               2   43[COMRAM] int 
  8759 ;;  i               2   41[COMRAM] int 
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  2   34[COMRAM] int 
  8762 ;; Registers used:
  8763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8764 ;; Tracked objects:
  8765 ;;		On entry : 0/0
  8766 ;;		On exit  : 0/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8769 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8770 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8771 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8772 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8773 ;;Total ram usage:       11 bytes
  8774 ;; Hardware stack levels used:    1
  8775 ;; Hardware stack levels required when called:    8
  8776 ;; This function calls:
  8777 ;;		_fputc
  8778 ;;		_fputs
  8779 ;;		_strlen
  8780 ;; This function is called by:
  8781 ;;		_ctoa
  8782 ;;		_dtoa
  8783 ;;		_xtoa
  8784 ;; This function uses a non-reentrant model
  8785 ;;
  8786                           
  8787                           	psect	text35
  8788  001DC0                     __ptext35:
  8789                           	opt callstack 0
  8790  001DC0                     _pad:
  8791                           	opt callstack 18
  8792  001DC0                     
  8793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8794  001DC0  A044               	btfss	_flags^0,0,c
  8795  001DC2  EFE5  F00E         	goto	u3211
  8796  001DC6  EFE7  F00E         	goto	u3210
  8797  001DCA                     u3211:
  8798  001DCA  EFF1  F00E         	goto	l4286
  8799  001DCE                     u3210:
  8800  001DCE                     
  8801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  8802  001DCE  C025  F01C         	movff	pad@buf,fputs@s
  8803  001DD2  C026  F01D         	movff	pad@buf+1,fputs@s+1
  8804  001DD6  C023  F01E         	movff	pad@fp,fputs@fp
  8805  001DDA  C024  F01F         	movff	pad@fp+1,fputs@fp+1
  8806  001DDE  ECA9  F011         	call	_fputs	;wreg free
  8807  001DE2                     l4286:
  8808                           
  8809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  8810  001DE2  BE28               	btfsc	(pad@p+1)^0,7,c
  8811  001DE4  EFF6  F00E         	goto	u3221
  8812  001DE8  EFF8  F00E         	goto	u3220
  8813  001DEC                     u3221:
  8814  001DEC  EFFE  F00E         	goto	l4290
  8815  001DF0                     u3220:
  8816  001DF0  C027  F02C         	movff	pad@p,pad@w
  8817  001DF4  C028  F02D         	movff	pad@p+1,pad@w+1
  8818  001DF8  EF02  F00F         	goto	l606
  8819  001DFC                     l4290:
  8820  001DFC  0E00               	movlw	0
  8821  001DFE  6E2D               	movwf	(pad@w+1)^0,c
  8822  001E00  0E00               	movlw	0
  8823  001E02  6E2C               	movwf	pad@w^0,c
  8824  001E04                     l606:
  8825                           
  8826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  8827  001E04  0E00               	movlw	0
  8828  001E06  6E2B               	movwf	(pad@i+1)^0,c
  8829  001E08  0E00               	movlw	0
  8830  001E0A  6E2A               	movwf	pad@i^0,c
  8831                           
  8832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8833  001E0C  EF14  F00F         	goto	l4296
  8834  001E10                     l4292:
  8835                           
  8836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  8837  001E10  0E00               	movlw	0
  8838  001E12  6E14               	movwf	(fputc@c+1)^0,c
  8839  001E14  0E20               	movlw	32
  8840  001E16  6E13               	movwf	fputc@c^0,c
  8841  001E18  C023  F015         	movff	pad@fp,fputc@fp
  8842  001E1C  C024  F016         	movff	pad@fp+1,fputc@fp+1
  8843  001E20  EC30  F010         	call	_fputc	;wreg free
  8844  001E24                     
  8845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8846  001E24  4A2A               	infsnz	pad@i^0,f,c
  8847  001E26  2A2B               	incf	(pad@i+1)^0,f,c
  8848  001E28                     l4296:
  8849                           
  8850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8851  001E28  502C               	movf	pad@w^0,w,c
  8852  001E2A  5C2A               	subwf	pad@i^0,w,c
  8853  001E2C  502B               	movf	(pad@i+1)^0,w,c
  8854  001E2E  0A80               	xorlw	128
  8855  001E30  6E29               	movwf	??_pad^0,c
  8856  001E32  502D               	movf	(pad@w+1)^0,w,c
  8857  001E34  0A80               	xorlw	128
  8858  001E36  5829               	subwfb	??_pad^0,w,c
  8859  001E38  A0D8               	btfss	status,0,c
  8860  001E3A  EF21  F00F         	goto	u3231
  8861  001E3E  EF23  F00F         	goto	u3230
  8862  001E42                     u3231:
  8863  001E42  EF08  F00F         	goto	l4292
  8864  001E46                     u3230:
  8865  001E46                     
  8866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  8867  001E46  B044               	btfsc	_flags^0,0,c
  8868  001E48  EF28  F00F         	goto	u3241
  8869  001E4C  EF2A  F00F         	goto	u3240
  8870  001E50                     u3241:
  8871  001E50  EF34  F00F         	goto	l4300
  8872  001E54                     u3240:
  8873  001E54                     
  8874                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  8875  001E54  C025  F01C         	movff	pad@buf,fputs@s
  8876  001E58  C026  F01D         	movff	pad@buf+1,fputs@s+1
  8877  001E5C  C023  F01E         	movff	pad@fp,fputs@fp
  8878  001E60  C024  F01F         	movff	pad@fp+1,fputs@fp+1
  8879  001E64  ECA9  F011         	call	_fputs	;wreg free
  8880  001E68                     l4300:
  8881                           
  8882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  8883  001E68  C025  F011         	movff	pad@buf,strlen@s
  8884  001E6C  C026  F012         	movff	pad@buf+1,strlen@s+1
  8885  001E70  EC98  F012         	call	_strlen	;wreg free
  8886  001E74  502C               	movf	pad@w^0,w,c
  8887  001E76  2411               	addwf	?_strlen^0,w,c
  8888  001E78  6E23               	movwf	?_pad^0,c
  8889  001E7A  502D               	movf	(pad@w+1)^0,w,c
  8890  001E7C  2012               	addwfc	(?_strlen+1)^0,w,c
  8891  001E7E  6E24               	movwf	(?_pad+1)^0,c
  8892  001E80  0012               	return		;funcret
  8893  001E82                     __end_of_pad:
  8894                           	opt callstack 0
  8895                           
  8896 ;; *************** function _strlen *****************
  8897 ;; Defined at:
  8898 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  8899 ;; Parameters:    Size  Location     Type
  8900 ;;  s               2   16[COMRAM] PTR const unsigned char 
  8901 ;;		 -> dbuf(32), 
  8902 ;; Auto vars:     Size  Location     Type
  8903 ;;  a               2   18[COMRAM] PTR const unsigned char 
  8904 ;;		 -> dbuf(32), 
  8905 ;; Return value:  Size  Location     Type
  8906 ;;                  2   16[COMRAM] unsigned int 
  8907 ;; Registers used:
  8908 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8909 ;; Tracked objects:
  8910 ;;		On entry : 0/0
  8911 ;;		On exit  : 0/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8915 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8917 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8918 ;;Total ram usage:        4 bytes
  8919 ;; Hardware stack levels used:    1
  8920 ;; Hardware stack levels required when called:    4
  8921 ;; This function calls:
  8922 ;;		Nothing
  8923 ;; This function is called by:
  8924 ;;		_pad
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           	psect	text36
  8929  002530                     __ptext36:
  8930                           	opt callstack 0
  8931  002530                     _strlen:
  8932                           	opt callstack 21
  8933  002530  C011  F013         	movff	strlen@s,strlen@a
  8934  002534  C012  F014         	movff	strlen@s+1,strlen@a+1
  8935  002538  EFA0  F012         	goto	l4272
  8936  00253C                     l4270:
  8937  00253C  4A11               	infsnz	strlen@s^0,f,c
  8938  00253E  2A12               	incf	(strlen@s+1)^0,f,c
  8939  002540                     l4272:
  8940  002540  C011  FFD9         	movff	strlen@s,fsr2l
  8941  002544  C012  FFDA         	movff	strlen@s+1,fsr2h
  8942  002548  50DF               	movf	indf2,w,c
  8943  00254A  A4D8               	btfss	status,2,c
  8944  00254C  EFAA  F012         	goto	u3181
  8945  002550  EFAC  F012         	goto	u3180
  8946  002554                     u3181:
  8947  002554  EF9E  F012         	goto	l4270
  8948  002558                     u3180:
  8949  002558  5013               	movf	strlen@a^0,w,c
  8950  00255A  5C11               	subwf	strlen@s^0,w,c
  8951  00255C  6E11               	movwf	?_strlen^0,c
  8952  00255E  5014               	movf	(strlen@a+1)^0,w,c
  8953  002560  5812               	subwfb	(strlen@s+1)^0,w,c
  8954  002562  6E12               	movwf	(?_strlen+1)^0,c
  8955  002564  0012               	return		;funcret
  8956  002566                     __end_of_strlen:
  8957                           	opt callstack 0
  8958                           
  8959 ;; *************** function _fputs *****************
  8960 ;; Defined at:
  8961 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  8962 ;; Parameters:    Size  Location     Type
  8963 ;;  s               2   27[COMRAM] PTR const unsigned char 
  8964 ;;		 -> dbuf(32), 
  8965 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  8966 ;;		 -> NULL(0), 
  8967 ;; Auto vars:     Size  Location     Type
  8968 ;;  i               2   32[COMRAM] int 
  8969 ;;  c               1   31[COMRAM] unsigned char 
  8970 ;; Return value:  Size  Location     Type
  8971 ;;                  2   27[COMRAM] int 
  8972 ;; Registers used:
  8973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8974 ;; Tracked objects:
  8975 ;;		On entry : 0/0
  8976 ;;		On exit  : 0/0
  8977 ;;		Unchanged: 0/0
  8978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8979 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8980 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8982 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8983 ;;Total ram usage:        7 bytes
  8984 ;; Hardware stack levels used:    1
  8985 ;; Hardware stack levels required when called:    7
  8986 ;; This function calls:
  8987 ;;		_fputc
  8988 ;; This function is called by:
  8989 ;;		_pad
  8990 ;; This function uses a non-reentrant model
  8991 ;;
  8992                           
  8993                           	psect	text37
  8994  002352                     __ptext37:
  8995                           	opt callstack 0
  8996  002352                     _fputs:
  8997                           	opt callstack 18
  8998  002352  0E00               	movlw	0
  8999  002354  6E22               	movwf	(fputs@i+1)^0,c
  9000  002356  0E00               	movlw	0
  9001  002358  6E21               	movwf	fputs@i^0,c
  9002  00235A  EFBA  F011         	goto	l4266
  9003  00235E                     l4262:
  9004  00235E  C020  F013         	movff	fputs@c,fputc@c
  9005  002362  6A14               	clrf	(fputc@c+1)^0,c
  9006  002364  C01E  F015         	movff	fputs@fp,fputc@fp
  9007  002368  C01F  F016         	movff	fputs@fp+1,fputc@fp+1
  9008  00236C  EC30  F010         	call	_fputc	;wreg free
  9009  002370  4A21               	infsnz	fputs@i^0,f,c
  9010  002372  2A22               	incf	(fputs@i+1)^0,f,c
  9011  002374                     l4266:
  9012  002374  5021               	movf	fputs@i^0,w,c
  9013  002376  241C               	addwf	fputs@s^0,w,c
  9014  002378  6ED9               	movwf	fsr2l,c
  9015  00237A  5022               	movf	(fputs@i+1)^0,w,c
  9016  00237C  201D               	addwfc	(fputs@s+1)^0,w,c
  9017  00237E  6EDA               	movwf	fsr2h,c
  9018  002380  50DF               	movf	indf2,w,c
  9019  002382  6E20               	movwf	fputs@c^0,c
  9020  002384  5020               	movf	fputs@c^0,w,c
  9021  002386  A4D8               	btfss	status,2,c
  9022  002388  EFC8  F011         	goto	u3171
  9023  00238C  EFCA  F011         	goto	u3170
  9024  002390                     u3171:
  9025  002390  EFAF  F011         	goto	l4262
  9026  002394                     u3170:
  9027  002394  0012               	return		;funcret
  9028  002396                     __end_of_fputs:
  9029                           	opt callstack 0
  9030                           
  9031 ;; *************** function _fputc *****************
  9032 ;; Defined at:
  9033 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  9034 ;; Parameters:    Size  Location     Type
  9035 ;;  c               2   18[COMRAM] int 
  9036 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  9037 ;;		 -> NULL(0), 
  9038 ;; Auto vars:     Size  Location     Type
  9039 ;;		None
  9040 ;; Return value:  Size  Location     Type
  9041 ;;                  2   18[COMRAM] int 
  9042 ;; Registers used:
  9043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/0
  9046 ;;		On exit  : 0/0
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9049 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9051 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9052 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9053 ;;Total ram usage:        9 bytes
  9054 ;; Hardware stack levels used:    1
  9055 ;; Hardware stack levels required when called:    6
  9056 ;; This function calls:
  9057 ;;		_putch
  9058 ;; This function is called by:
  9059 ;;		_pad
  9060 ;;		_vfpfcnvrt
  9061 ;;		_fputs
  9062 ;; This function uses a non-reentrant model
  9063 ;;
  9064                           
  9065                           	psect	text38
  9066  002060                     __ptext38:
  9067                           	opt callstack 0
  9068  002060                     _fputc:
  9069                           	opt callstack 18
  9070  002060  5015               	movf	fputc@fp^0,w,c
  9071  002062  1016               	iorwf	(fputc@fp+1)^0,w,c
  9072  002064  B4D8               	btfsc	status,2,c
  9073  002066  EF37  F010         	goto	u3131
  9074  00206A  EF39  F010         	goto	u3130
  9075  00206E                     u3131:
  9076  00206E  EF42  F010         	goto	l4250
  9077  002072                     u3130:
  9078  002072  5015               	movf	fputc@fp^0,w,c
  9079  002074  1016               	iorwf	(fputc@fp+1)^0,w,c
  9080  002076  A4D8               	btfss	status,2,c
  9081  002078  EF40  F010         	goto	u3141
  9082  00207C  EF42  F010         	goto	u3140
  9083  002080                     u3141:
  9084  002080  EF47  F010         	goto	l4252
  9085  002084                     u3140:
  9086  002084                     l4250:
  9087  002084  5013               	movf	fputc@c^0,w,c
  9088  002086  ECB4  F013         	call	_putch
  9089  00208A  EF7A  F010         	goto	l1464
  9090  00208E                     l4252:
  9091  00208E  EE20 F004          	lfsr	2,4
  9092  002092  5015               	movf	fputc@fp^0,w,c
  9093  002094  26D9               	addwf	fsr2l,f,c
  9094  002096  5016               	movf	(fputc@fp+1)^0,w,c
  9095  002098  22DA               	addwfc	fsr2h,f,c
  9096  00209A  50DE               	movf	postinc2,w,c
  9097  00209C  10DE               	iorwf	postinc2,w,c
  9098  00209E  B4D8               	btfsc	status,2,c
  9099  0020A0  EF54  F010         	goto	u3151
  9100  0020A4  EF56  F010         	goto	u3150
  9101  0020A8                     u3151:
  9102  0020A8  EF71  F010         	goto	l4256
  9103  0020AC                     u3150:
  9104  0020AC  EE20 F004          	lfsr	2,4
  9105  0020B0  5015               	movf	fputc@fp^0,w,c
  9106  0020B2  26D9               	addwf	fsr2l,f,c
  9107  0020B4  5016               	movf	(fputc@fp+1)^0,w,c
  9108  0020B6  22DA               	addwfc	fsr2h,f,c
  9109  0020B8  EE10 F002          	lfsr	1,2
  9110  0020BC  5015               	movf	fputc@fp^0,w,c
  9111  0020BE  26E1               	addwf	fsr1l,f,c
  9112  0020C0  5016               	movf	(fputc@fp+1)^0,w,c
  9113  0020C2  22E2               	addwfc	fsr1h,f,c
  9114  0020C4  50DE               	movf	postinc2,w,c
  9115  0020C6  5CE6               	subwf	postinc1,w,c
  9116  0020C8  50E6               	movf	postinc1,w,c
  9117  0020CA  0A80               	xorlw	128
  9118  0020CC  6E1B               	movwf	(??_fputc+4)^0,c
  9119  0020CE  50DE               	movf	postinc2,w,c
  9120  0020D0  0A80               	xorlw	128
  9121  0020D2  581B               	subwfb	(??_fputc+4)^0,w,c
  9122  0020D4  B0D8               	btfsc	status,0,c
  9123  0020D6  EF6F  F010         	goto	u3161
  9124  0020DA  EF71  F010         	goto	u3160
  9125  0020DE                     u3161:
  9126  0020DE  EF7A  F010         	goto	l1464
  9127  0020E2                     u3160:
  9128  0020E2                     l4256:
  9129  0020E2  EE20 F002          	lfsr	2,2
  9130  0020E6  5015               	movf	fputc@fp^0,w,c
  9131  0020E8  26D9               	addwf	fsr2l,f,c
  9132  0020EA  5016               	movf	(fputc@fp+1)^0,w,c
  9133  0020EC  22DA               	addwfc	fsr2h,f,c
  9134  0020EE  2ADE               	incf	postinc2,f,c
  9135  0020F0  0E00               	movlw	0
  9136  0020F2  22DD               	addwfc	postdec2,f,c
  9137  0020F4                     l1464:
  9138  0020F4  0012               	return		;funcret
  9139  0020F6                     __end_of_fputc:
  9140                           	opt callstack 0
  9141                           
  9142 ;; *************** function _putch *****************
  9143 ;; Defined at:
  9144 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;  txData          1    wreg     unsigned char 
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;  txData          1   17[COMRAM] unsigned char 
  9149 ;; Return value:  Size  Location     Type
  9150 ;;                  1    wreg      void 
  9151 ;; Registers used:
  9152 ;;		wreg, status,2, cstack
  9153 ;; Tracked objects:
  9154 ;;		On entry : 0/0
  9155 ;;		On exit  : 0/0
  9156 ;;		Unchanged: 0/0
  9157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9159 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9161 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9162 ;;Total ram usage:        1 bytes
  9163 ;; Hardware stack levels used:    1
  9164 ;; Hardware stack levels required when called:    5
  9165 ;; This function calls:
  9166 ;;		_EUSART1_Write
  9167 ;; This function is called by:
  9168 ;;		_fputc
  9169 ;; This function uses a non-reentrant model
  9170 ;;
  9171                           
  9172                           	psect	text39
  9173  002768                     __ptext39:
  9174                           	opt callstack 0
  9175  002768                     _putch:
  9176                           	opt callstack 18
  9177                           
  9178                           ;incstack = 0
  9179                           ;putch@txData stored from wreg
  9180  002768  6E12               	movwf	putch@txData^0,c
  9181  00276A                     
  9182                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  9183  00276A  5012               	movf	putch@txData^0,w,c
  9184  00276C  EC7D  F013         	call	_EUSART1_Write
  9185  002770  0012               	return		;funcret
  9186  002772                     __end_of_putch:
  9187                           	opt callstack 0
  9188                           
  9189 ;; *************** function _EUSART1_Write *****************
  9190 ;; Defined at:
  9191 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  9192 ;; Parameters:    Size  Location     Type
  9193 ;;  txData          1    wreg     unsigned char 
  9194 ;; Auto vars:     Size  Location     Type
  9195 ;;  txData          1   16[COMRAM] unsigned char 
  9196 ;; Return value:  Size  Location     Type
  9197 ;;                  1    wreg      void 
  9198 ;; Registers used:
  9199 ;;		wreg
  9200 ;; Tracked objects:
  9201 ;;		On entry : 0/0
  9202 ;;		On exit  : 0/0
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9208 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9209 ;;Total ram usage:        1 bytes
  9210 ;; Hardware stack levels used:    1
  9211 ;; Hardware stack levels required when called:    4
  9212 ;; This function calls:
  9213 ;;		Nothing
  9214 ;; This function is called by:
  9215 ;;		_putch
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           	psect	text40
  9220  0026FA                     __ptext40:
  9221                           	opt callstack 0
  9222  0026FA                     _EUSART1_Write:
  9223                           	opt callstack 18
  9224                           
  9225                           ;incstack = 0
  9226                           ;EUSART1_Write@txData stored from wreg
  9227  0026FA  6E11               	movwf	EUSART1_Write@txData^0,c
  9228  0026FC                     l174:
  9229                           
  9230                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  9231  0026FC  A89E               	btfss	158,4,c	;volatile
  9232  0026FE  EF83  F013         	goto	u3121
  9233  002702  EF85  F013         	goto	u3120
  9234  002706                     u3121:
  9235  002706  EF7E  F013         	goto	l174
  9236  00270A                     u3120:
  9237  00270A                     
  9238                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  9239  00270A  C011  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  9240  00270E  0012               	return		;funcret
  9241  002710                     __end_of_EUSART1_Write:
  9242                           	opt callstack 0
  9243                           
  9244 ;; *************** function _atoi *****************
  9245 ;; Defined at:
  9246 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  9247 ;; Parameters:    Size  Location     Type
  9248 ;;  s               2   23[COMRAM] PTR const unsigned char 
  9249 ;;		 -> STR_105(3), STR_104(3), STR_103(2), STR_102(4), 
  9250 ;;		 -> STR_101(6), STR_100(3), STR_99(3), STR_98(2), 
  9251 ;;		 -> STR_97(3), STR_96(2), STR_95(4), STR_94(27), 
  9252 ;;		 -> STR_93(29), STR_92(35), STR_91(23), STR_90(22), 
  9253 ;;		 -> STR_89(21), STR_88(3), STR_87(3), STR_86(28), 
  9254 ;;		 -> STR_85(26), STR_84(17), STR_83(20), STR_82(24), 
  9255 ;;		 -> STR_81(22), STR_80(33), STR_79(58), STR_78(3), 
  9256 ;;		 -> STR_77(47), STR_76(35), STR_75(5), STR_74(25), 
  9257 ;;		 -> STR_73(20), STR_72(71), STR_71(50), STR_70(22), 
  9258 ;;		 -> STR_69(33), STR_68(58), STR_67(3), STR_66(68), 
  9259 ;;		 -> STR_65(57), STR_64(3), STR_63(5), STR_62(2), 
  9260 ;;		 -> STR_61(5), STR_60(17), STR_59(15), STR_58(3), 
  9261 ;;		 -> STR_57(5), STR_56(2), STR_55(5), STR_54(17), 
  9262 ;;		 -> STR_53(15), STR_52(78), STR_51(44), STR_50(3), 
  9263 ;;		 -> STR_49(5), STR_48(2), STR_47(5), STR_46(17), 
  9264 ;;		 -> STR_45(15), STR_44(3), STR_43(5), STR_42(2), 
  9265 ;;		 -> STR_41(5), STR_40(17), STR_39(15), STR_38(3), 
  9266 ;;		 -> STR_37(5), STR_36(2), STR_35(5), STR_34(19), 
  9267 ;;		 -> STR_33(11), STR_32(11), STR_31(29), STR_30(42), 
  9268 ;;		 -> STR_29(2), STR_28(2), STR_27(8), STR_26(52), 
  9269 ;;		 -> STR_25(32), STR_24(42), STR_23(50), STR_22(52), 
  9270 ;;		 -> STR_21(55), STR_20(43), STR_19(37), STR_18(52), 
  9271 ;;		 -> STR_17(24), STR_16(52), STR_15(24), STR_14(21), 
  9272 ;;		 -> STR_13(7), STR_12(15), STR_11(52), STR_10(3), 
  9273 ;;		 -> STR_9(5), STR_8(2), STR_7(5), STR_6(19), 
  9274 ;;		 -> STR_5(54), STR_4(5), STR_3(18), STR_2(20), 
  9275 ;;		 -> STR_1(20), 
  9276 ;; Auto vars:     Size  Location     Type
  9277 ;;  n               2   36[COMRAM] int 
  9278 ;;  neg             2   29[COMRAM] int 
  9279 ;; Return value:  Size  Location     Type
  9280 ;;                  2   23[COMRAM] int 
  9281 ;; Registers used:
  9282 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9283 ;; Tracked objects:
  9284 ;;		On entry : 0/0
  9285 ;;		On exit  : 0/0
  9286 ;;		Unchanged: 0/0
  9287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9289 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9290 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9291 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9292 ;;Total ram usage:       15 bytes
  9293 ;; Hardware stack levels used:    1
  9294 ;; Hardware stack levels required when called:    5
  9295 ;; This function calls:
  9296 ;;		___wmul
  9297 ;;		_isdigit
  9298 ;;		_isspace
  9299 ;; This function is called by:
  9300 ;;		_vfpfcnvrt
  9301 ;; This function uses a non-reentrant model
  9302 ;;
  9303                           
  9304                           	psect	text41
  9305  0016DA                     __ptext41:
  9306                           	opt callstack 0
  9307  0016DA                     _atoi:
  9308                           	opt callstack 22
  9309  0016DA  0E00               	movlw	0
  9310  0016DC  6E26               	movwf	(atoi@n+1)^0,c
  9311  0016DE  0E00               	movlw	0
  9312  0016E0  6E25               	movwf	atoi@n^0,c
  9313  0016E2  0E00               	movlw	0
  9314  0016E4  6E1F               	movwf	(atoi@neg+1)^0,c
  9315  0016E6  0E00               	movlw	0
  9316  0016E8  6E1E               	movwf	atoi@neg^0,c
  9317  0016EA  EF79  F00B         	goto	l4574
  9318  0016EE                     l4572:
  9319  0016EE  4A18               	infsnz	atoi@s^0,f,c
  9320  0016F0  2A19               	incf	(atoi@s+1)^0,f,c
  9321  0016F2                     l4574:
  9322  0016F2  0E01               	movlw	1
  9323  0016F4  6E24               	movwf	_atoi$1838^0,c
  9324  0016F6  C018  FFF6         	movff	atoi@s,tblptrl
  9325  0016FA  C019  FFF7         	movff	atoi@s+1,tblptrh
  9326  0016FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9327  0016FE  6AF8               	clrf	tblptru,c
  9328  001700                     	endif
  9329  001700                     	if	0	;tblptru may be non-zero
  9330  001700                     	endif
  9331  001700  0008               	tblrd		*
  9332  001702  50F5               	movf	tablat,w,c
  9333  001704  0A20               	xorlw	32
  9334  001706  B4D8               	btfsc	status,2,c
  9335  001708  EF88  F00B         	goto	u3831
  9336  00170C  EF8A  F00B         	goto	u3830
  9337  001710                     u3831:
  9338  001710  EFA8  F00B         	goto	l4582
  9339  001714                     u3830:
  9340  001714  0EF7               	movlw	247
  9341  001716  6E1A               	movwf	??_atoi^0,c
  9342  001718  0EFF               	movlw	255
  9343  00171A  6E1B               	movwf	(??_atoi+1)^0,c
  9344  00171C  C018  FFF6         	movff	atoi@s,tblptrl
  9345  001720  C019  FFF7         	movff	atoi@s+1,tblptrh
  9346  001724                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9347  001724  6AF8               	clrf	tblptru,c
  9348  001726                     	endif
  9349  001726                     	if	0	;tblptru may be non-zero
  9350  001726                     	endif
  9351  001726  0008               	tblrd		*
  9352  001728  50F5               	movf	tablat,w,c
  9353  00172A  6E1C               	movwf	(??_atoi+2)^0,c
  9354  00172C  6A1D               	clrf	(??_atoi+3)^0,c
  9355  00172E  501A               	movf	??_atoi^0,w,c
  9356  001730  261C               	addwf	(??_atoi+2)^0,f,c
  9357  001732  501B               	movf	(??_atoi+1)^0,w,c
  9358  001734  221D               	addwfc	(??_atoi+3)^0,f,c
  9359  001736  501D               	movf	(??_atoi+3)^0,w,c
  9360  001738  E109               	bnz	u3840
  9361  00173A  0E05               	movlw	5
  9362  00173C  5C1C               	subwf	(??_atoi+2)^0,w,c
  9363  00173E  A0D8               	btfss	status,0,c
  9364  001740  EFA4  F00B         	goto	u3841
  9365  001744  EFA6  F00B         	goto	u3840
  9366  001748                     u3841:
  9367  001748  EFA8  F00B         	goto	l4582
  9368  00174C                     u3840:
  9369  00174C  0E00               	movlw	0
  9370  00174E  6E24               	movwf	_atoi$1838^0,c
  9371  001750                     l4582:
  9372  001750  C024  F020         	movff	_atoi$1838,_atoi$1837
  9373  001754  6A21               	clrf	(_atoi$1837+1)^0,c
  9374  001756  5020               	movf	_atoi$1837^0,w,c
  9375  001758  1021               	iorwf	(_atoi$1837+1)^0,w,c
  9376  00175A  A4D8               	btfss	status,2,c
  9377  00175C  EFB2  F00B         	goto	u3851
  9378  001760  EFB4  F00B         	goto	u3850
  9379  001764                     u3851:
  9380  001764  EF77  F00B         	goto	l4572
  9381  001768                     u3850:
  9382  001768  EFBE  F00B         	goto	l4592
  9383  00176C                     l4588:
  9384  00176C  0E00               	movlw	0
  9385  00176E  6E1F               	movwf	(atoi@neg+1)^0,c
  9386  001770  0E01               	movlw	1
  9387  001772  6E1E               	movwf	atoi@neg^0,c
  9388  001774                     l4590:
  9389  001774  4A18               	infsnz	atoi@s^0,f,c
  9390  001776  2A19               	incf	(atoi@s+1)^0,f,c
  9391  001778  EFF5  F00B         	goto	l4598
  9392  00177C                     l4592:
  9393  00177C  C018  FFF6         	movff	atoi@s,tblptrl
  9394  001780  C019  FFF7         	movff	atoi@s+1,tblptrh
  9395  001784                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9396  001784  6AF8               	clrf	tblptru,c
  9397  001786                     	endif
  9398  001786                     	if	0	;tblptru may be non-zero
  9399  001786                     	endif
  9400  001786  0008               	tblrd		*
  9401  001788  50F5               	movf	tablat,w,c
  9402  00178A  6E1A               	movwf	??_atoi^0,c
  9403  00178C  6A1B               	clrf	(??_atoi+1)^0,c
  9404                           
  9405                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9406                           ; Switch size 1, requested type "simple"
  9407                           ; Number of cases is 1, Range of values is 0 to 0
  9408                           ; switch strategies available:
  9409                           ; Name         Instructions Cycles
  9410                           ; simple_byte            4     3 (average)
  9411                           ;	Chosen strategy is simple_byte
  9412  00178E  501B               	movf	(??_atoi+1)^0,w,c
  9413  001790  0A00               	xorlw	0	; case 0
  9414  001792  B4D8               	btfsc	status,2,c
  9415  001794  EFCE  F00B         	goto	l5276
  9416  001798  EFF5  F00B         	goto	l4598
  9417  00179C                     l5276:
  9418                           
  9419                           ; Switch size 1, requested type "simple"
  9420                           ; Number of cases is 2, Range of values is 43 to 45
  9421                           ; switch strategies available:
  9422                           ; Name         Instructions Cycles
  9423                           ; simple_byte            7     4 (average)
  9424                           ;	Chosen strategy is simple_byte
  9425  00179C  501A               	movf	??_atoi^0,w,c
  9426  00179E  0A2B               	xorlw	43	; case 43
  9427  0017A0  B4D8               	btfsc	status,2,c
  9428  0017A2  EFBA  F00B         	goto	l4590
  9429  0017A6  0A06               	xorlw	6	; case 45
  9430  0017A8  B4D8               	btfsc	status,2,c
  9431  0017AA  EFB6  F00B         	goto	l4588
  9432  0017AE  EFF5  F00B         	goto	l4598
  9433  0017B2                     l4594:
  9434  0017B2  C025  F011         	movff	atoi@n,___wmul@multiplier
  9435  0017B6  C026  F012         	movff	atoi@n+1,___wmul@multiplier+1
  9436  0017BA  0E00               	movlw	0
  9437  0017BC  6E14               	movwf	(___wmul@multiplicand+1)^0,c
  9438  0017BE  0E0A               	movlw	10
  9439  0017C0  6E13               	movwf	___wmul@multiplicand^0,c
  9440  0017C2  EC26  F013         	call	___wmul	;wreg free
  9441  0017C6  C018  FFF6         	movff	atoi@s,tblptrl
  9442  0017CA  C019  FFF7         	movff	atoi@s+1,tblptrh
  9443  0017CE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9444  0017CE  6AF8               	clrf	tblptru,c
  9445  0017D0                     	endif
  9446  0017D0                     	if	0	;tblptru may be non-zero
  9447  0017D0                     	endif
  9448  0017D0  0008               	tblrd		*
  9449  0017D2  50F5               	movf	tablat,w,c
  9450  0017D4  5E11               	subwf	?___wmul^0,f,c
  9451  0017D6  0E00               	movlw	0
  9452  0017D8  5A12               	subwfb	(?___wmul+1)^0,f,c
  9453  0017DA  0E30               	movlw	48
  9454  0017DC  2411               	addwf	?___wmul^0,w,c
  9455  0017DE  6E25               	movwf	atoi@n^0,c
  9456  0017E0  0E00               	movlw	0
  9457  0017E2  2012               	addwfc	(?___wmul+1)^0,w,c
  9458  0017E4  6E26               	movwf	(atoi@n+1)^0,c
  9459  0017E6  EFBA  F00B         	goto	l4590
  9460  0017EA                     l4598:
  9461  0017EA  0ED0               	movlw	208
  9462  0017EC  6E1A               	movwf	??_atoi^0,c
  9463  0017EE  0EFF               	movlw	255
  9464  0017F0  6E1B               	movwf	(??_atoi+1)^0,c
  9465  0017F2  C018  FFF6         	movff	atoi@s,tblptrl
  9466  0017F6  C019  FFF7         	movff	atoi@s+1,tblptrh
  9467  0017FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9468  0017FA  6AF8               	clrf	tblptru,c
  9469  0017FC                     	endif
  9470  0017FC                     	if	0	;tblptru may be non-zero
  9471  0017FC                     	endif
  9472  0017FC  0008               	tblrd		*
  9473  0017FE  50F5               	movf	tablat,w,c
  9474  001800  6E1C               	movwf	(??_atoi+2)^0,c
  9475  001802  6A1D               	clrf	(??_atoi+3)^0,c
  9476  001804  501A               	movf	??_atoi^0,w,c
  9477  001806  261C               	addwf	(??_atoi+2)^0,f,c
  9478  001808  501B               	movf	(??_atoi+1)^0,w,c
  9479  00180A  221D               	addwfc	(??_atoi+3)^0,f,c
  9480  00180C  501D               	movf	(??_atoi+3)^0,w,c
  9481  00180E  E10A               	bnz	u3860
  9482  001810  0E0A               	movlw	10
  9483  001812  5C1C               	subwf	(??_atoi+2)^0,w,c
  9484  001814  A0D8               	btfss	status,0,c
  9485  001816  EF0F  F00C         	goto	u3861
  9486  00181A  EF12  F00C         	goto	u3860
  9487  00181E                     u3861:
  9488  00181E  0E01               	movlw	1
  9489  001820  EF13  F00C         	goto	u3870
  9490  001824                     u3860:
  9491  001824  0E00               	movlw	0
  9492  001826                     u3870:
  9493  001826  6E22               	movwf	_atoi$1839^0,c
  9494  001828  6A23               	clrf	(_atoi$1839+1)^0,c
  9495  00182A  5022               	movf	_atoi$1839^0,w,c
  9496  00182C  1023               	iorwf	(_atoi$1839+1)^0,w,c
  9497  00182E  A4D8               	btfss	status,2,c
  9498  001830  EF1C  F00C         	goto	u3881
  9499  001834  EF1E  F00C         	goto	u3880
  9500  001838                     u3881:
  9501  001838  EFD9  F00B         	goto	l4594
  9502  00183C                     u3880:
  9503  00183C  501E               	movf	atoi@neg^0,w,c
  9504  00183E  101F               	iorwf	(atoi@neg+1)^0,w,c
  9505  001840  A4D8               	btfss	status,2,c
  9506  001842  EF25  F00C         	goto	u3891
  9507  001846  EF27  F00C         	goto	u3890
  9508  00184A                     u3891:
  9509  00184A  EF35  F00C         	goto	l1423
  9510  00184E                     u3890:
  9511  00184E  C025  F01A         	movff	atoi@n,??_atoi
  9512  001852  C026  F01B         	movff	atoi@n+1,??_atoi+1
  9513  001856  1E1A               	comf	??_atoi^0,f,c
  9514  001858  1E1B               	comf	(??_atoi+1)^0,f,c
  9515  00185A  4A1A               	infsnz	??_atoi^0,f,c
  9516  00185C  2A1B               	incf	(??_atoi+1)^0,f,c
  9517  00185E  C01A  F018         	movff	??_atoi,?_atoi
  9518  001862  C01B  F019         	movff	??_atoi+1,?_atoi+1
  9519  001866  EF39  F00C         	goto	l1426
  9520  00186A                     l1423:
  9521  00186A  C025  F018         	movff	atoi@n,?_atoi
  9522  00186E  C026  F019         	movff	atoi@n+1,?_atoi+1
  9523  001872                     l1426:
  9524  001872  0012               	return		;funcret
  9525  001874                     __end_of_atoi:
  9526                           	opt callstack 0
  9527                           
  9528 ;; *************** function _isspace *****************
  9529 ;; Defined at:
  9530 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  9531 ;; Parameters:    Size  Location     Type
  9532 ;;  c               2   16[COMRAM] int 
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;		None
  9535 ;; Return value:  Size  Location     Type
  9536 ;;                  2   16[COMRAM] int 
  9537 ;; Registers used:
  9538 ;;		wreg, status,2, status,0
  9539 ;; Tracked objects:
  9540 ;;		On entry : 0/0
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9546 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9547 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9548 ;;Total ram usage:        7 bytes
  9549 ;; Hardware stack levels used:    1
  9550 ;; Hardware stack levels required when called:    4
  9551 ;; This function calls:
  9552 ;;		Nothing
  9553 ;; This function is called by:
  9554 ;;		_atoi
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           	psect	text42
  9559  002300                     __ptext42:
  9560                           	opt callstack 0
  9561  002300                     _isspace:
  9562                           	opt callstack 22
  9563  002300  0E01               	movlw	1
  9564  002302  6E17               	movwf	_isspace$1864^0,c
  9565  002304  0E20               	movlw	32
  9566  002306  1811               	xorwf	isspace@c^0,w,c
  9567  002308  1012               	iorwf	(isspace@c+1)^0,w,c
  9568  00230A  B4D8               	btfsc	status,2,c
  9569  00230C  EF8A  F011         	goto	u3481
  9570  002310  EF8C  F011         	goto	u3480
  9571  002314                     u3481:
  9572  002314  EFA5  F011         	goto	l4424
  9573  002318                     u3480:
  9574  002318  0EF7               	movlw	247
  9575  00231A  6E13               	movwf	??_isspace^0,c
  9576  00231C  0EFF               	movlw	255
  9577  00231E  6E14               	movwf	(??_isspace+1)^0,c
  9578  002320  C011  F015         	movff	isspace@c,??_isspace+2
  9579  002324  C012  F016         	movff	isspace@c+1,??_isspace+3
  9580  002328  5013               	movf	??_isspace^0,w,c
  9581  00232A  2615               	addwf	(??_isspace+2)^0,f,c
  9582  00232C  5014               	movf	(??_isspace+1)^0,w,c
  9583  00232E  2216               	addwfc	(??_isspace+3)^0,f,c
  9584  002330  5016               	movf	(??_isspace+3)^0,w,c
  9585  002332  E109               	bnz	u3490
  9586  002334  0E05               	movlw	5
  9587  002336  5C15               	subwf	(??_isspace+2)^0,w,c
  9588  002338  A0D8               	btfss	status,0,c
  9589  00233A  EFA1  F011         	goto	u3491
  9590  00233E  EFA3  F011         	goto	u3490
  9591  002342                     u3491:
  9592  002342  EFA5  F011         	goto	l4424
  9593  002346                     u3490:
  9594  002346  0E00               	movlw	0
  9595  002348  6E17               	movwf	_isspace$1864^0,c
  9596  00234A                     l4424:
  9597  00234A  C017  F011         	movff	_isspace$1864,?_isspace
  9598  00234E  6A12               	clrf	(?_isspace+1)^0,c
  9599  002350  0012               	return		;funcret
  9600  002352                     __end_of_isspace:
  9601                           	opt callstack 0
  9602                           
  9603 ;; *************** function _isdigit *****************
  9604 ;; Defined at:
  9605 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  9606 ;; Parameters:    Size  Location     Type
  9607 ;;  c               2   16[COMRAM] int 
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;		None
  9610 ;; Return value:  Size  Location     Type
  9611 ;;                  2   16[COMRAM] int 
  9612 ;; Registers used:
  9613 ;;		wreg, status,2, status,0
  9614 ;; Tracked objects:
  9615 ;;		On entry : 0/0
  9616 ;;		On exit  : 0/0
  9617 ;;		Unchanged: 0/0
  9618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9621 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9622 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9623 ;;Total ram usage:        6 bytes
  9624 ;; Hardware stack levels used:    1
  9625 ;; Hardware stack levels required when called:    4
  9626 ;; This function calls:
  9627 ;;		Nothing
  9628 ;; This function is called by:
  9629 ;;		_vfpfcnvrt
  9630 ;;		_atoi
  9631 ;; This function uses a non-reentrant model
  9632 ;;
  9633                           
  9634                           	psect	text43
  9635  0024F8                     __ptext43:
  9636                           	opt callstack 0
  9637  0024F8                     _isdigit:
  9638                           	opt callstack 23
  9639  0024F8  0ED0               	movlw	208
  9640  0024FA  6E13               	movwf	??_isdigit^0,c
  9641  0024FC  0EFF               	movlw	255
  9642  0024FE  6E14               	movwf	(??_isdigit+1)^0,c
  9643  002500  C011  F015         	movff	isdigit@c,??_isdigit+2
  9644  002504  C012  F016         	movff	isdigit@c+1,??_isdigit+3
  9645  002508  5013               	movf	??_isdigit^0,w,c
  9646  00250A  2615               	addwf	(??_isdigit+2)^0,f,c
  9647  00250C  5014               	movf	(??_isdigit+1)^0,w,c
  9648  00250E  2216               	addwfc	(??_isdigit+3)^0,f,c
  9649  002510  5016               	movf	(??_isdigit+3)^0,w,c
  9650  002512  E10A               	bnz	u3330
  9651  002514  0E0A               	movlw	10
  9652  002516  5C15               	subwf	(??_isdigit+2)^0,w,c
  9653  002518  A0D8               	btfss	status,0,c
  9654  00251A  EF91  F012         	goto	u3331
  9655  00251E  EF94  F012         	goto	u3330
  9656  002522                     u3331:
  9657  002522  0E01               	movlw	1
  9658  002524  EF95  F012         	goto	u3340
  9659  002528                     u3330:
  9660  002528  0E00               	movlw	0
  9661  00252A                     u3340:
  9662  00252A  6E11               	movwf	?_isdigit^0,c
  9663  00252C  6A12               	clrf	(?_isdigit+1)^0,c
  9664  00252E  0012               	return		;funcret
  9665  002530                     __end_of_isdigit:
  9666                           	opt callstack 0
  9667                           
  9668 ;; *************** function ___wmul *****************
  9669 ;; Defined at:
  9670 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  9671 ;; Parameters:    Size  Location     Type
  9672 ;;  multiplier      2   16[COMRAM] unsigned int 
  9673 ;;  multiplicand    2   18[COMRAM] unsigned int 
  9674 ;; Auto vars:     Size  Location     Type
  9675 ;;  product         2   20[COMRAM] unsigned int 
  9676 ;; Return value:  Size  Location     Type
  9677 ;;                  2   16[COMRAM] unsigned int 
  9678 ;; Registers used:
  9679 ;;		wreg, status,2, status,0, prodl, prodh
  9680 ;; Tracked objects:
  9681 ;;		On entry : 0/0
  9682 ;;		On exit  : 0/0
  9683 ;;		Unchanged: 0/0
  9684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9685 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9686 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9688 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9689 ;;Total ram usage:        6 bytes
  9690 ;; Hardware stack levels used:    1
  9691 ;; Hardware stack levels required when called:    4
  9692 ;; This function calls:
  9693 ;;		Nothing
  9694 ;; This function is called by:
  9695 ;;		_atoi
  9696 ;; This function uses a non-reentrant model
  9697 ;;
  9698                           
  9699                           	psect	text44
  9700  00264C                     __ptext44:
  9701                           	opt callstack 0
  9702  00264C                     ___wmul:
  9703                           	opt callstack 22
  9704  00264C  5011               	movf	___wmul@multiplier^0,w,c
  9705  00264E  0213               	mulwf	___wmul@multiplicand^0,c
  9706  002650  CFF3 F015          	movff	prodl,___wmul@product
  9707  002654  CFF4 F016          	movff	prodh,___wmul@product+1
  9708  002658  5011               	movf	___wmul@multiplier^0,w,c
  9709  00265A  0214               	mulwf	(___wmul@multiplicand+1)^0,c
  9710  00265C  50F3               	movf	243,w,c
  9711  00265E  2616               	addwf	(___wmul@product+1)^0,f,c
  9712  002660  5012               	movf	(___wmul@multiplier+1)^0,w,c
  9713  002662  0213               	mulwf	___wmul@multiplicand^0,c
  9714  002664  50F3               	movf	243,w,c
  9715  002666  2616               	addwf	(___wmul@product+1)^0,f,c
  9716  002668  C015  F011         	movff	___wmul@product,?___wmul
  9717  00266C  C016  F012         	movff	___wmul@product+1,?___wmul+1
  9718  002670  0012               	return		;funcret
  9719  002672                     __end_of___wmul:
  9720                           	opt callstack 0
  9721                           
  9722 ;; *************** function _SPI2_ExchangeByte *****************
  9723 ;; Defined at:
  9724 ;;		line 92 in file "mcc_generated_files/spi2.c"
  9725 ;; Parameters:    Size  Location     Type
  9726 ;;  data            1    wreg     unsigned char 
  9727 ;; Auto vars:     Size  Location     Type
  9728 ;;  data            1   16[COMRAM] unsigned char 
  9729 ;; Return value:  Size  Location     Type
  9730 ;;                  1    wreg      unsigned char 
  9731 ;; Registers used:
  9732 ;;		wreg, status,2
  9733 ;; Tracked objects:
  9734 ;;		On entry : 0/0
  9735 ;;		On exit  : 0/0
  9736 ;;		Unchanged: 0/0
  9737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9741 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9742 ;;Total ram usage:        1 bytes
  9743 ;; Hardware stack levels used:    1
  9744 ;; Hardware stack levels required when called:    4
  9745 ;; This function calls:
  9746 ;;		Nothing
  9747 ;; This function is called by:
  9748 ;;		_SDCARD_ReadBlock
  9749 ;;		_SDCARD_WriteBlock
  9750 ;;		_SDCARD_PollWriteComplete
  9751 ;;		_SDCARD_HCInitialize
  9752 ;;		_SDCARD_SetIdle
  9753 ;;		_SPI2_WriteBlock
  9754 ;;		_SPI2_ReadBlock
  9755 ;;		_SDCARD_Initialize
  9756 ;;		_SDCARD_SetBlockLength
  9757 ;; This function uses a non-reentrant model
  9758 ;;
  9759                           
  9760                           	psect	text45
  9761  0026CA                     __ptext45:
  9762                           	opt callstack 0
  9763  0026CA                     _SPI2_ExchangeByte:
  9764                           	opt callstack 25
  9765                           
  9766                           ;incstack = 0
  9767                           ;SPI2_ExchangeByte@data stored from wreg
  9768  0026CA  6E11               	movwf	SPI2_ExchangeByte@data^0,c
  9769  0026CC                     
  9770                           ;mcc_generated_files/spi2.c: 92: uint8_t SPI2_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi2.c: 93: {;mcc_generated_files/spi2.c: 94:     SSP2BUF = data;
  9771  0026CC  C011  FF6F         	movff	SPI2_ExchangeByte@data,3951	;volatile
  9772  0026D0                     l77:
  9773  0026D0  AEA4               	btfss	164,7,c	;volatile
  9774  0026D2  EF6D  F013         	goto	u2521
  9775  0026D6  EF6F  F013         	goto	u2520
  9776  0026DA                     u2521:
  9777  0026DA  EF68  F013         	goto	l77
  9778  0026DE                     u2520:
  9779  0026DE                     
  9780                           ;mcc_generated_files/spi2.c: 96:     PIR3bits.SSP2IF = 0;
  9781  0026DE  9EA4               	bcf	164,7,c	;volatile
  9782                           
  9783                           ;mcc_generated_files/spi2.c: 97:     return SSP2BUF;
  9784  0026E0  506F               	movf	111,w,c	;volatile
  9785  0026E2  0012               	return		;funcret
  9786  0026E4                     __end_of_SPI2_ExchangeByte:
  9787                           	opt callstack 0
  9788                           
  9789 ;; *************** function _EUSART1_is_rx_ready *****************
  9790 ;; Defined at:
  9791 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  9792 ;; Parameters:    Size  Location     Type
  9793 ;;		None
  9794 ;; Auto vars:     Size  Location     Type
  9795 ;;		None
  9796 ;; Return value:  Size  Location     Type
  9797 ;;                  1    wreg      _Bool 
  9798 ;; Registers used:
  9799 ;;		wreg
  9800 ;; Tracked objects:
  9801 ;;		On entry : 0/0
  9802 ;;		On exit  : 0/0
  9803 ;;		Unchanged: 0/0
  9804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9809 ;;Total ram usage:        0 bytes
  9810 ;; Hardware stack levels used:    1
  9811 ;; Hardware stack levels required when called:    4
  9812 ;; This function calls:
  9813 ;;		Nothing
  9814 ;; This function is called by:
  9815 ;;		_main
  9816 ;; This function uses a non-reentrant model
  9817 ;;
  9818                           
  9819                           	psect	text46
  9820  002710                     __ptext46:
  9821                           	opt callstack 0
  9822  002710                     _EUSART1_is_rx_ready:
  9823                           	opt callstack 26
  9824  002710                     
  9825                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  9826  002710  BA9E               	btfsc	158,5,c	;volatile
  9827  002712  EF8D  F013         	goto	u2631
  9828  002716  EF90  F013         	goto	u2630
  9829  00271A                     u2631:
  9830  00271A  0E01               	movlw	1
  9831  00271C  EF91  F013         	goto	u2636
  9832  002720                     u2630:
  9833  002720  0E00               	movlw	0
  9834  002722                     u2636:
  9835  002722  0012               	return		;funcret
  9836  002724                     __end_of_EUSART1_is_rx_ready:
  9837                           	opt callstack 0
  9838                           
  9839 ;; *************** function _EUSART1_Read *****************
  9840 ;; Defined at:
  9841 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  9842 ;; Parameters:    Size  Location     Type
  9843 ;;		None
  9844 ;; Auto vars:     Size  Location     Type
  9845 ;;		None
  9846 ;; Return value:  Size  Location     Type
  9847 ;;                  1    wreg      unsigned char 
  9848 ;; Registers used:
  9849 ;;		wreg, status,2
  9850 ;; Tracked objects:
  9851 ;;		On entry : 0/0
  9852 ;;		On exit  : 0/0
  9853 ;;		Unchanged: 0/0
  9854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9859 ;;Total ram usage:        0 bytes
  9860 ;; Hardware stack levels used:    1
  9861 ;; Hardware stack levels required when called:    4
  9862 ;; This function calls:
  9863 ;;		Nothing
  9864 ;; This function is called by:
  9865 ;;		_main
  9866 ;;		_getch
  9867 ;; This function uses a non-reentrant model
  9868 ;;
  9869                           
  9870                           	psect	text47
  9871  002624                     __ptext47:
  9872                           	opt callstack 0
  9873  002624                     _EUSART1_Read:
  9874                           	opt callstack 26
  9875  002624                     l167:
  9876                           
  9877                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  9878  002624  AA9E               	btfss	158,5,c	;volatile
  9879  002626  EF17  F013         	goto	u2641
  9880  00262A  EF19  F013         	goto	u2640
  9881  00262E                     u2641:
  9882  00262E  EF12  F013         	goto	l167
  9883  002632                     u2640:
  9884  002632                     
  9885                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  9886  002632  0E00               	movlw	0
  9887  002634  6E4D               	movwf	_eusart1RxLastError^0,c	;volatile
  9888  002636                     
  9889                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  9890  002636  A2AB               	btfss	171,1,c	;volatile
  9891  002638  EF20  F013         	goto	u2651
  9892  00263C  EF22  F013         	goto	u2650
  9893  002640                     u2651:
  9894  002640  EF24  F013         	goto	l3582
  9895  002644                     u2650:
  9896  002644                     
  9897                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  9898  002644  98AB               	bcf	171,4,c	;volatile
  9899                           
  9900                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  9901  002646  88AB               	bsf	171,4,c	;volatile
  9902  002648                     l3582:
  9903                           
  9904                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  9905  002648  50AE               	movf	174,w,c	;volatile
  9906  00264A  0012               	return		;funcret
  9907  00264C                     __end_of_EUSART1_Read:
  9908                           	opt callstack 0
  9909                           
  9910 ;; *************** function _INTERRUPT_InterruptManager *****************
  9911 ;; Defined at:
  9912 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  9913 ;; Parameters:    Size  Location     Type
  9914 ;;		None
  9915 ;; Auto vars:     Size  Location     Type
  9916 ;;		None
  9917 ;; Return value:  Size  Location     Type
  9918 ;;                  1    wreg      void 
  9919 ;; Registers used:
  9920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9921 ;; Tracked objects:
  9922 ;;		On entry : 0/0
  9923 ;;		On exit  : 0/0
  9924 ;;		Unchanged: 0/0
  9925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9928 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9929 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9930 ;;Total ram usage:        4 bytes
  9931 ;; Hardware stack levels used:    1
  9932 ;; Hardware stack levels required when called:    3
  9933 ;; This function calls:
  9934 ;;		_TMR0_ISR
  9935 ;; This function is called by:
  9936 ;;		Interrupt level 2
  9937 ;; This function uses a non-reentrant model
  9938 ;;
  9939                           
  9940                           	psect	intcode
  9941  000008                     __pintcode:
  9942                           	opt callstack 0
  9943  000008                     _INTERRUPT_InterruptManager:
  9944                           	opt callstack 16
  9945                           
  9946                           ;incstack = 0
  9947  000008  824F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9948  00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
  9949  00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  9950  000012  CFD9 F00F          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  9951  000016  CFDA F010          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  9952  00001A                     
  9953                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  9954  00001A  AAF2               	btfss	242,5,c	;volatile
  9955  00001C  EF12  F000         	goto	i2u286_41
  9956  000020  EF14  F000         	goto	i2u286_40
  9957  000024                     i2u286_41:
  9958  000024  EF1D  F000         	goto	i2l217
  9959  000028                     i2u286_40:
  9960  000028  A4F2               	btfss	242,2,c	;volatile
  9961  00002A  EF19  F000         	goto	i2u287_41
  9962  00002E  EF1B  F000         	goto	i2u287_40
  9963  000032                     i2u287_41:
  9964  000032  EF1D  F000         	goto	i2l217
  9965  000036                     i2u287_40:
  9966  000036                     
  9967                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  9968  000036  ECB3  F012         	call	_TMR0_ISR	;wreg free
  9969  00003A                     i2l217:
  9970  00003A  C010  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  9971  00003E  C00F  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  9972  000042  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  9973  000046  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  9974  00004A  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9975  00004C  0011               	retfie		f
  9976  00004E                     __end_of_INTERRUPT_InterruptManager:
  9977                           	opt callstack 0
  9978                           
  9979 ;; *************** function _TMR0_ISR *****************
  9980 ;; Defined at:
  9981 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  9982 ;; Parameters:    Size  Location     Type
  9983 ;;		None
  9984 ;; Auto vars:     Size  Location     Type
  9985 ;;		None
  9986 ;; Return value:  Size  Location     Type
  9987 ;;                  1    wreg      void 
  9988 ;; Registers used:
  9989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9990 ;; Tracked objects:
  9991 ;;		On entry : 0/0
  9992 ;;		On exit  : 0/0
  9993 ;;		Unchanged: 0/0
  9994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9999 ;;Total ram usage:        0 bytes
 10000 ;; Hardware stack levels used:    1
 10001 ;; Hardware stack levels required when called:    2
 10002 ;; This function calls:
 10003 ;;		Absolute function
 10004 ;;		_TMR0_DefaultInterruptHandler
 10005 ;;		_myTMR0ISR
 10006 ;; This function is called by:
 10007 ;;		_INTERRUPT_InterruptManager
 10008 ;; This function uses a non-reentrant model
 10009 ;;
 10010                           
 10011                           	psect	text49
 10012  002566                     __ptext49:
 10013                           	opt callstack 0
 10014  002566                     _TMR0_ISR:
 10015                           	opt callstack 16
 10016  002566                     
 10017                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
 10018  002566  94F2               	bcf	242,2,c	;volatile
 10019  002568                     
 10020                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
 10021  002568  5049               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
 10022  00256A  6ED7               	movwf	215,c	;volatile
 10023  00256C                     
 10024                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
 10025  00256C  C048  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 10026  002570                     
 10027                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
 10028  002570  504A               	movf	_TMR0_InterruptHandler^0,w,c
 10029  002572  104B               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
 10030  002574  B4D8               	btfsc	status,2,c
 10031  002576  EFBF  F012         	goto	i2u260_41
 10032  00257A  EFC1  F012         	goto	i2u260_40
 10033  00257E                     i2u260_41:
 10034  00257E  EFCD  F012         	goto	i2l40
 10035  002582                     i2u260_40:
 10036  002582                     
 10037                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
 10038  002582  D802               	call	i2u261_48
 10039  002584  EFCD  F012         	goto	i2u261_49
 10040  002588                     i2u261_48:
 10041  002588  0005               	push	
 10042  00258A  6EFA               	movwf	pclath,c
 10043  00258C  504A               	movf	_TMR0_InterruptHandler^0,w,c
 10044  00258E  6EFD               	movwf	tosl,c
 10045  002590  504B               	movf	(_TMR0_InterruptHandler+1)^0,w,c
 10046  002592  6EFE               	movwf	tosh,c
 10047  002594  6AFF               	clrf	tosu,c
 10048  002596  50FA               	movf	pclath,w,c
 10049  002598  0012               	return		;indir
 10050  00259A                     i2u261_49:
 10051  00259A                     i2l40:
 10052  00259A  0012               	return		;funcret
 10053  00259C                     __end_of_TMR0_ISR:
 10054                           	opt callstack 0
 10055                           
 10056 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 10057 ;; Defined at:
 10058 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 10059 ;; Parameters:    Size  Location     Type
 10060 ;;		None
 10061 ;; Auto vars:     Size  Location     Type
 10062 ;;		None
 10063 ;; Return value:  Size  Location     Type
 10064 ;;                  1    wreg      void 
 10065 ;; Registers used:
 10066 ;;		None
 10067 ;; Tracked objects:
 10068 ;;		On entry : 0/0
 10069 ;;		On exit  : 0/0
 10070 ;;		Unchanged: 0/0
 10071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10076 ;;Total ram usage:        0 bytes
 10077 ;; Hardware stack levels used:    1
 10078 ;; This function calls:
 10079 ;;		Nothing
 10080 ;; This function is called by:
 10081 ;;		_TMR0_Initialize
 10082 ;;		_TMR0_ISR
 10083 ;; This function uses a non-reentrant model
 10084 ;;
 10085                           
 10086                           	psect	text50
 10087  002786                     __ptext50:
 10088                           	opt callstack 0
 10089  002786                     _TMR0_DefaultInterruptHandler:
 10090                           	opt callstack 17
 10091  002786  0012               	return		;funcret
 10092  002788                     __end_of_TMR0_DefaultInterruptHandler:
 10093                           	opt callstack 0
 10094                           
 10095 ;; *************** function _myTMR0ISR *****************
 10096 ;; Defined at:
 10097 ;;		line 299 in file "main.c"
 10098 ;; Parameters:    Size  Location     Type
 10099 ;;		None
 10100 ;; Auto vars:     Size  Location     Type
 10101 ;;		None
 10102 ;; Return value:  Size  Location     Type
 10103 ;;                  1    wreg      void 
 10104 ;; Registers used:
 10105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10106 ;; Tracked objects:
 10107 ;;		On entry : 0/0
 10108 ;;		On exit  : 0/0
 10109 ;;		Unchanged: 0/0
 10110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10113 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10114 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10115 ;;Total ram usage:        2 bytes
 10116 ;; Hardware stack levels used:    1
 10117 ;; Hardware stack levels required when called:    1
 10118 ;; This function calls:
 10119 ;;		_TMR0_ReadTimer
 10120 ;;		i2_TMR0_WriteTimer
 10121 ;; This function is called by:
 10122 ;;		_main
 10123 ;;		_TMR0_ISR
 10124 ;; This function uses a non-reentrant model
 10125 ;;
 10126                           
 10127                           	psect	text51
 10128  001CE6                     __ptext51:
 10129                           	opt callstack 0
 10130  001CE6                     _myTMR0ISR:
 10131                           	opt callstack 16
 10132  001CE6                     
 10133                           ;main.c: 300:             }else if(activeBuffer == BLUE){;main.c: 301:                 a
      +                          ctiveBuffer = RED;;main.c: 303:             }
 10134  001CE6  504C               	movf	_collectSamples^0,w,c
 10135  001CE8  B4D8               	btfsc	status,2,c
 10136  001CEA  EF79  F00E         	goto	i2u254_41
 10137  001CEE  EF7B  F00E         	goto	i2u254_40
 10138  001CF2                     i2u254_41:
 10139  001CF2  EFD2  F00E         	goto	i2l3510
 10140  001CF6                     i2u254_40:
 10141  001CF6  EF91  F00E         	goto	i2l3496
 10142  001CFA                     i2l3490:
 10143                           
 10144                           ;main.c: 306:     }
 10145  001CFA  0EF4               	movlw	low _sdCardBufferRed
 10146  001CFC  2446               	addwf	myTMR0ISR@bufferIndex^0,w,c
 10147  001CFE  6ED9               	movwf	fsr2l,c
 10148  001D00  0E02               	movlw	high _sdCardBufferRed
 10149  001D02  2047               	addwfc	(myTMR0ISR@bufferIndex+1)^0,w,c
 10150  001D04  6EDA               	movwf	fsr2h,c
 10151  001D06  CFC4 FFDF          	movff	4036,indf2	;volatile
 10152                           
 10153                           ;main.c: 307: 
 10154  001D0A  EFA6  F00E         	goto	i2l3498
 10155  001D0E                     i2l3492:
 10156                           
 10157                           ;main.c: 309:     ADCON0bits.GO_NOT_DONE = 1;
 10158  001D0E  0EF4               	movlw	low _sdCardBufferBlue
 10159  001D10  2446               	addwf	myTMR0ISR@bufferIndex^0,w,c
 10160  001D12  6ED9               	movwf	fsr2l,c
 10161  001D14  0E00               	movlw	high _sdCardBufferBlue
 10162  001D16  2047               	addwfc	(myTMR0ISR@bufferIndex+1)^0,w,c
 10163  001D18  6EDA               	movwf	fsr2h,c
 10164  001D1A  CFC4 FFDF          	movff	4036,indf2	;volatile
 10165                           
 10166                           ;main.c: 310:     INTCONbits.TMR0IF = 0;
 10167  001D1E  EFA6  F00E         	goto	i2l3498
 10168  001D22                     i2l3496:
 10169  001D22  504E               	movf	myTMR0ISR@activeBuffer^0,w,c
 10170  001D24  6E0B               	movwf	??_myTMR0ISR^0,c
 10171  001D26  6A0C               	clrf	(??_myTMR0ISR+1)^0,c
 10172                           
 10173                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10174                           ; Switch size 1, requested type "simple"
 10175                           ; Number of cases is 1, Range of values is 0 to 0
 10176                           ; switch strategies available:
 10177                           ; Name         Instructions Cycles
 10178                           ; simple_byte            4     3 (average)
 10179                           ;	Chosen strategy is simple_byte
 10180  001D28  500C               	movf	(??_myTMR0ISR+1)^0,w,c
 10181  001D2A  0A00               	xorlw	0	; case 0
 10182  001D2C  B4D8               	btfsc	status,2,c
 10183  001D2E  EF9B  F00E         	goto	i2l5278
 10184  001D32  EFA6  F00E         	goto	i2l3498
 10185  001D36                     i2l5278:
 10186                           
 10187                           ; Switch size 1, requested type "simple"
 10188                           ; Number of cases is 2, Range of values is 0 to 1
 10189                           ; switch strategies available:
 10190                           ; Name         Instructions Cycles
 10191                           ; simple_byte            7     4 (average)
 10192                           ;	Chosen strategy is simple_byte
 10193  001D36  500B               	movf	??_myTMR0ISR^0,w,c
 10194  001D38  0A00               	xorlw	0	; case 0
 10195  001D3A  B4D8               	btfsc	status,2,c
 10196  001D3C  EF87  F00E         	goto	i2l3492
 10197  001D40  0A01               	xorlw	1	; case 1
 10198  001D42  B4D8               	btfsc	status,2,c
 10199  001D44  EF7D  F00E         	goto	i2l3490
 10200  001D48  EFA6  F00E         	goto	i2l3498
 10201  001D4C                     i2l3498:
 10202  001D4C  4A46               	infsnz	myTMR0ISR@bufferIndex^0,f,c
 10203  001D4E  2A47               	incf	(myTMR0ISR@bufferIndex+1)^0,f,c
 10204  001D50  0E02               	movlw	2
 10205  001D52  1847               	xorwf	(myTMR0ISR@bufferIndex+1)^0,w,c
 10206  001D54  1046               	iorwf	myTMR0ISR@bufferIndex^0,w,c
 10207  001D56  A4D8               	btfss	status,2,c
 10208  001D58  EFB0  F00E         	goto	i2u255_41
 10209  001D5C  EFB2  F00E         	goto	i2u255_40
 10210  001D60                     i2u255_41:
 10211  001D60  EFD2  F00E         	goto	i2l3510
 10212  001D64                     i2u255_40:
 10213  001D64  044E               	decf	myTMR0ISR@activeBuffer^0,w,c
 10214  001D66  A4D8               	btfss	status,2,c
 10215  001D68  EFB8  F00E         	goto	i2u256_41
 10216  001D6C  EFBA  F00E         	goto	i2u256_40
 10217  001D70                     i2u256_41:
 10218  001D70  EFC1  F00E         	goto	i2l3506
 10219  001D74                     i2u256_40:
 10220  001D74  0E00               	movlw	0
 10221  001D76  6E4E               	movwf	myTMR0ISR@activeBuffer^0,c
 10222  001D78  0E01               	movlw	1
 10223  001D7A  0100               	movlb	0	; () banked
 10224  001D7C  6FD1               	movwf	_redBufferFull& (0+255),b
 10225  001D7E  EFCE  F00E         	goto	i2l457
 10226  001D82                     i2l3506:
 10227  001D82  504E               	movf	myTMR0ISR@activeBuffer^0,w,c
 10228  001D84  A4D8               	btfss	status,2,c
 10229  001D86  EFC7  F00E         	goto	i2u257_41
 10230  001D8A  EFC9  F00E         	goto	i2u257_40
 10231  001D8E                     i2u257_41:
 10232  001D8E  EFCE  F00E         	goto	i2l457
 10233  001D92                     i2u257_40:
 10234  001D92  0E01               	movlw	1
 10235  001D94  6E4E               	movwf	myTMR0ISR@activeBuffer^0,c
 10236  001D96  0E01               	movlw	1
 10237  001D98  0100               	movlb	0	; () banked
 10238  001D9A  6FD0               	movwf	_blueBufferFull& (0+255),b
 10239  001D9C                     i2l457:
 10240  001D9C  0E00               	movlw	0
 10241  001D9E  6E47               	movwf	(myTMR0ISR@bufferIndex+1)^0,c
 10242  001DA0  0E00               	movlw	0
 10243  001DA2  6E46               	movwf	myTMR0ISR@bufferIndex^0,c
 10244  001DA4                     i2l3510:
 10245  001DA4  EC48  F013         	call	_TMR0_ReadTimer	;wreg free
 10246  001DA8  0100               	movlb	0	; () banked
 10247  001DAA  51F2               	movf	_sampleRate& (0+255),w,b
 10248  001DAC  5C01               	subwf	?_TMR0_ReadTimer^0,w,c
 10249  001DAE  6E09               	movwf	i2TMR0_WriteTimer@timerVal^0,c
 10250  001DB0  51F3               	movf	(_sampleRate+1)& (0+255),w,b
 10251  001DB2  5802               	subwfb	(?_TMR0_ReadTimer+1)^0,w,c
 10252  001DB4  6E0A               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
 10253  001DB6  ECB9  F013         	call	i2_TMR0_WriteTimer	;wreg free
 10254  001DBA  82C2               	bsf	194,1,c	;volatile
 10255  001DBC  94F2               	bcf	242,2,c	;volatile
 10256  001DBE  0012               	return		;funcret
 10257  001DC0                     __end_of_myTMR0ISR:
 10258                           	opt callstack 0
 10259                           
 10260 ;; *************** function i2_TMR0_WriteTimer *****************
 10261 ;; Defined at:
 10262 ;;		line 122 in file "mcc_generated_files/tmr0.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;  timerVal        2    8[COMRAM] unsigned short 
 10265 ;; Auto vars:     Size  Location     Type
 10266 ;;		None
 10267 ;; Return value:  Size  Location     Type
 10268 ;;                  1    wreg      void 
 10269 ;; Registers used:
 10270 ;;		wreg, status,2
 10271 ;; Tracked objects:
 10272 ;;		On entry : 0/0
 10273 ;;		On exit  : 0/0
 10274 ;;		Unchanged: 0/0
 10275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10279 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10280 ;;Total ram usage:        2 bytes
 10281 ;; Hardware stack levels used:    1
 10282 ;; This function calls:
 10283 ;;		Nothing
 10284 ;; This function is called by:
 10285 ;;		_myTMR0ISR
 10286 ;; This function uses a non-reentrant model
 10287 ;;
 10288                           
 10289                           	psect	text52
 10290  002772                     __ptext52:
 10291                           	opt callstack 0
 10292  002772                     i2_TMR0_WriteTimer:
 10293                           	opt callstack 16
 10294  002772                     
 10295                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
 10296  002772  500A               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
 10297  002774  6ED7               	movwf	215,c	;volatile
 10298  002776                     
 10299                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
 10300  002776  C009  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
 10301  00277A  0012               	return		;funcret
 10302  00277C                     __end_ofi2_TMR0_WriteTimer:
 10303                           	opt callstack 0
 10304                           
 10305 ;; *************** function _TMR0_ReadTimer *****************
 10306 ;; Defined at:
 10307 ;;		line 109 in file "mcc_generated_files/tmr0.c"
 10308 ;; Parameters:    Size  Location     Type
 10309 ;;		None
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;  readVal         2    4[COMRAM] unsigned short 
 10312 ;;  readValHigh     1    7[COMRAM] unsigned char 
 10313 ;;  readValLow      1    6[COMRAM] unsigned char 
 10314 ;; Return value:  Size  Location     Type
 10315 ;;                  2    0[COMRAM] unsigned short 
 10316 ;; Registers used:
 10317 ;;		wreg, status,2
 10318 ;; Tracked objects:
 10319 ;;		On entry : 0/0
 10320 ;;		On exit  : 0/0
 10321 ;;		Unchanged: 0/0
 10322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10324 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10325 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10326 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10327 ;;Total ram usage:        8 bytes
 10328 ;; Hardware stack levels used:    1
 10329 ;; This function calls:
 10330 ;;		Nothing
 10331 ;; This function is called by:
 10332 ;;		_myTMR0ISR
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           
 10336                           	psect	text53
 10337  002690                     __ptext53:
 10338                           	opt callstack 0
 10339  002690                     _TMR0_ReadTimer:
 10340                           	opt callstack 16
 10341  002690                     
 10342                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
 10343  002690  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 10344                           
 10345                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
 10346  002694  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 10347  002698                     
 10348                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
 10349  002698  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
 10350  00269A  6E03               	movwf	??_TMR0_ReadTimer^0,c
 10351  00269C  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
 10352  00269E  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
 10353  0026A0  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
 10354  0026A4                     
 10355                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
 10356  0026A4  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 10357  0026A8  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 10358  0026AC  0012               	return		;funcret
 10359  0026AE                     __end_of_TMR0_ReadTimer:
 10360                           	opt callstack 0
 10361                           
 10362                           	psect	text54
 10363  000000                     __ptext54:
 10364                           	opt callstack 0
 10365  000000                     
 10366                           	psect	rparam
 10367  0000                     
 10368                           	psect	temp
 10369  00004F                     btemp:
 10370                           	opt callstack 0
 10371  00004F                     	ds	1
 10372  0000                     int$flags	set	btemp
 10373  0000                     wtemp8	set	btemp+1
 10374  0000                     ttemp5	set	btemp+1
 10375  0000                     ttemp6	set	btemp+4
 10376  0000                     ttemp7	set	btemp+8
 10377                           tosu	equ	0xFFF
 10378                           tosh	equ	0xFFE
 10379                           tosl	equ	0xFFD
 10380                           stkptr	equ	0xFFC
 10381                           pclatu	equ	0xFFB
 10382                           pclath	equ	0xFFA
 10383                           pcl	equ	0xFF9
 10384                           tblptru	equ	0xFF8
 10385                           tblptrh	equ	0xFF7
 10386                           tblptrl	equ	0xFF6
 10387                           tablat	equ	0xFF5
 10388                           prodh	equ	0xFF4
 10389                           prodl	equ	0xFF3
 10390                           indf0	equ	0xFEF
 10391                           postinc0	equ	0xFEE
 10392                           postdec0	equ	0xFED
 10393                           preinc0	equ	0xFEC
 10394                           plusw0	equ	0xFEB
 10395                           fsr0h	equ	0xFEA
 10396                           fsr0l	equ	0xFE9
 10397                           wreg	equ	0xFE8
 10398                           indf1	equ	0xFE7
 10399                           postinc1	equ	0xFE6
 10400                           postdec1	equ	0xFE5
 10401                           preinc1	equ	0xFE4
 10402                           plusw1	equ	0xFE3
 10403                           fsr1h	equ	0xFE2
 10404                           fsr1l	equ	0xFE1
 10405                           bsr	equ	0xFE0
 10406                           indf2	equ	0xFDF
 10407                           postinc2	equ	0xFDE
 10408                           postdec2	equ	0xFDD
 10409                           preinc2	equ	0xFDC
 10410                           plusw2	equ	0xFDB
 10411                           fsr2h	equ	0xFDA
 10412                           fsr2l	equ	0xFD9
 10413                           status	equ	0xFD8


Data Sizes:
    Strings     1524
    Constant    30
    Data        3
    BSS         1082
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     63      78
    BANK0           160    102     148
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 78
		 -> STR_105(CODE[3]), STR_104(CODE[3]), STR_103(CODE[2]), STR_102(CODE[4]), 
		 -> STR_101(CODE[6]), STR_100(CODE[3]), STR_99(CODE[3]), STR_98(CODE[2]), 
		 -> STR_97(CODE[3]), STR_96(CODE[2]), STR_95(CODE[4]), STR_94(CODE[27]), 
		 -> STR_93(CODE[29]), STR_92(CODE[35]), STR_91(CODE[23]), STR_90(CODE[22]), 
		 -> STR_89(CODE[21]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[28]), 
		 -> STR_85(CODE[26]), STR_84(CODE[17]), STR_83(CODE[20]), STR_82(CODE[24]), 
		 -> STR_81(CODE[22]), STR_80(CODE[33]), STR_79(CODE[58]), STR_78(CODE[3]), 
		 -> STR_77(CODE[47]), STR_76(CODE[35]), STR_75(CODE[5]), STR_74(CODE[25]), 
		 -> STR_73(CODE[20]), STR_72(CODE[71]), STR_71(CODE[50]), STR_70(CODE[22]), 
		 -> STR_69(CODE[33]), STR_68(CODE[58]), STR_67(CODE[3]), STR_66(CODE[68]), 
		 -> STR_65(CODE[57]), STR_64(CODE[3]), STR_63(CODE[5]), STR_62(CODE[2]), 
		 -> STR_61(CODE[5]), STR_60(CODE[17]), STR_59(CODE[15]), STR_58(CODE[3]), 
		 -> STR_57(CODE[5]), STR_56(CODE[2]), STR_55(CODE[5]), STR_54(CODE[17]), 
		 -> STR_53(CODE[15]), STR_52(CODE[78]), STR_51(CODE[44]), STR_50(CODE[3]), 
		 -> STR_49(CODE[5]), STR_48(CODE[2]), STR_47(CODE[5]), STR_46(CODE[17]), 
		 -> STR_45(CODE[15]), STR_44(CODE[3]), STR_43(CODE[5]), STR_42(CODE[2]), 
		 -> STR_41(CODE[5]), STR_40(CODE[17]), STR_39(CODE[15]), STR_38(CODE[3]), 
		 -> STR_37(CODE[5]), STR_36(CODE[2]), STR_35(CODE[5]), STR_34(CODE[19]), 
		 -> STR_33(CODE[11]), STR_32(CODE[11]), STR_31(CODE[29]), STR_30(CODE[42]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_27(CODE[8]), STR_26(CODE[52]), 
		 -> STR_25(CODE[32]), STR_24(CODE[42]), STR_23(CODE[50]), STR_22(CODE[52]), 
		 -> STR_21(CODE[55]), STR_20(CODE[43]), STR_19(CODE[37]), STR_18(CODE[52]), 
		 -> STR_17(CODE[24]), STR_16(CODE[52]), STR_15(CODE[24]), STR_14(CODE[21]), 
		 -> STR_13(CODE[7]), STR_12(CODE[15]), STR_11(CODE[52]), STR_10(CODE[3]), 
		 -> STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[19]), 
		 -> STR_5(CODE[54]), STR_4(CODE[5]), STR_3(CODE[18]), STR_2(CODE[20]), 
		 -> STR_1(CODE[20]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1877_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 78
		 -> STR_105(CODE[3]), STR_104(CODE[3]), STR_103(CODE[2]), STR_102(CODE[4]), 
		 -> STR_101(CODE[6]), STR_100(CODE[3]), STR_99(CODE[3]), STR_98(CODE[2]), 
		 -> STR_97(CODE[3]), STR_96(CODE[2]), STR_95(CODE[4]), STR_94(CODE[27]), 
		 -> STR_93(CODE[29]), STR_92(CODE[35]), STR_91(CODE[23]), STR_90(CODE[22]), 
		 -> STR_89(CODE[21]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[28]), 
		 -> STR_85(CODE[26]), STR_84(CODE[17]), STR_83(CODE[20]), STR_82(CODE[24]), 
		 -> STR_81(CODE[22]), STR_80(CODE[33]), STR_79(CODE[58]), STR_78(CODE[3]), 
		 -> STR_77(CODE[47]), STR_76(CODE[35]), STR_75(CODE[5]), STR_74(CODE[25]), 
		 -> STR_73(CODE[20]), STR_72(CODE[71]), STR_71(CODE[50]), STR_70(CODE[22]), 
		 -> STR_69(CODE[33]), STR_68(CODE[58]), STR_67(CODE[3]), STR_66(CODE[68]), 
		 -> STR_65(CODE[57]), STR_64(CODE[3]), STR_63(CODE[5]), STR_62(CODE[2]), 
		 -> STR_61(CODE[5]), STR_60(CODE[17]), STR_59(CODE[15]), STR_58(CODE[3]), 
		 -> STR_57(CODE[5]), STR_56(CODE[2]), STR_55(CODE[5]), STR_54(CODE[17]), 
		 -> STR_53(CODE[15]), STR_52(CODE[78]), STR_51(CODE[44]), STR_50(CODE[3]), 
		 -> STR_49(CODE[5]), STR_48(CODE[2]), STR_47(CODE[5]), STR_46(CODE[17]), 
		 -> STR_45(CODE[15]), STR_44(CODE[3]), STR_43(CODE[5]), STR_42(CODE[2]), 
		 -> STR_41(CODE[5]), STR_40(CODE[17]), STR_39(CODE[15]), STR_38(CODE[3]), 
		 -> STR_37(CODE[5]), STR_36(CODE[2]), STR_35(CODE[5]), STR_34(CODE[19]), 
		 -> STR_33(CODE[11]), STR_32(CODE[11]), STR_31(CODE[29]), STR_30(CODE[42]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_27(CODE[8]), STR_26(CODE[52]), 
		 -> STR_25(CODE[32]), STR_24(CODE[42]), STR_23(CODE[50]), STR_22(CODE[52]), 
		 -> STR_21(CODE[55]), STR_20(CODE[43]), STR_19(CODE[37]), STR_18(CODE[52]), 
		 -> STR_17(CODE[24]), STR_16(CODE[52]), STR_15(CODE[24]), STR_14(CODE[21]), 
		 -> STR_13(CODE[7]), STR_12(CODE[15]), STR_11(CODE[52]), STR_10(CODE[3]), 
		 -> STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[19]), 
		 -> STR_5(CODE[54]), STR_4(CODE[5]), STR_3(CODE[18]), STR_2(CODE[20]), 
		 -> STR_1(CODE[20]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 78
		 -> STR_105(CODE[3]), STR_104(CODE[3]), STR_103(CODE[2]), STR_102(CODE[4]), 
		 -> STR_101(CODE[6]), STR_100(CODE[3]), STR_99(CODE[3]), STR_98(CODE[2]), 
		 -> STR_97(CODE[3]), STR_96(CODE[2]), STR_95(CODE[4]), STR_94(CODE[27]), 
		 -> STR_93(CODE[29]), STR_92(CODE[35]), STR_91(CODE[23]), STR_90(CODE[22]), 
		 -> STR_89(CODE[21]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[28]), 
		 -> STR_85(CODE[26]), STR_84(CODE[17]), STR_83(CODE[20]), STR_82(CODE[24]), 
		 -> STR_81(CODE[22]), STR_80(CODE[33]), STR_79(CODE[58]), STR_78(CODE[3]), 
		 -> STR_77(CODE[47]), STR_76(CODE[35]), STR_75(CODE[5]), STR_74(CODE[25]), 
		 -> STR_73(CODE[20]), STR_72(CODE[71]), STR_71(CODE[50]), STR_70(CODE[22]), 
		 -> STR_69(CODE[33]), STR_68(CODE[58]), STR_67(CODE[3]), STR_66(CODE[68]), 
		 -> STR_65(CODE[57]), STR_64(CODE[3]), STR_63(CODE[5]), STR_62(CODE[2]), 
		 -> STR_61(CODE[5]), STR_60(CODE[17]), STR_59(CODE[15]), STR_58(CODE[3]), 
		 -> STR_57(CODE[5]), STR_56(CODE[2]), STR_55(CODE[5]), STR_54(CODE[17]), 
		 -> STR_53(CODE[15]), STR_52(CODE[78]), STR_51(CODE[44]), STR_50(CODE[3]), 
		 -> STR_49(CODE[5]), STR_48(CODE[2]), STR_47(CODE[5]), STR_46(CODE[17]), 
		 -> STR_45(CODE[15]), STR_44(CODE[3]), STR_43(CODE[5]), STR_42(CODE[2]), 
		 -> STR_41(CODE[5]), STR_40(CODE[17]), STR_39(CODE[15]), STR_38(CODE[3]), 
		 -> STR_37(CODE[5]), STR_36(CODE[2]), STR_35(CODE[5]), STR_34(CODE[19]), 
		 -> STR_33(CODE[11]), STR_32(CODE[11]), STR_31(CODE[29]), STR_30(CODE[42]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_27(CODE[8]), STR_26(CODE[52]), 
		 -> STR_25(CODE[32]), STR_24(CODE[42]), STR_23(CODE[50]), STR_22(CODE[52]), 
		 -> STR_21(CODE[55]), STR_20(CODE[43]), STR_19(CODE[37]), STR_18(CODE[52]), 
		 -> STR_17(CODE[24]), STR_16(CODE[52]), STR_15(CODE[24]), STR_14(CODE[21]), 
		 -> STR_13(CODE[7]), STR_12(CODE[15]), STR_11(CODE[52]), STR_10(CODE[3]), 
		 -> STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[19]), 
		 -> STR_5(CODE[54]), STR_4(CODE[5]), STR_3(CODE[18]), STR_2(CODE[20]), 
		 -> STR_1(CODE[20]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 78
		 -> STR_105(CODE[3]), STR_104(CODE[3]), STR_103(CODE[2]), STR_102(CODE[4]), 
		 -> STR_101(CODE[6]), STR_100(CODE[3]), STR_99(CODE[3]), STR_98(CODE[2]), 
		 -> STR_97(CODE[3]), STR_96(CODE[2]), STR_95(CODE[4]), STR_94(CODE[27]), 
		 -> STR_93(CODE[29]), STR_92(CODE[35]), STR_91(CODE[23]), STR_90(CODE[22]), 
		 -> STR_89(CODE[21]), STR_88(CODE[3]), STR_87(CODE[3]), STR_86(CODE[28]), 
		 -> STR_85(CODE[26]), STR_84(CODE[17]), STR_83(CODE[20]), STR_82(CODE[24]), 
		 -> STR_81(CODE[22]), STR_80(CODE[33]), STR_79(CODE[58]), STR_78(CODE[3]), 
		 -> STR_77(CODE[47]), STR_76(CODE[35]), STR_75(CODE[5]), STR_74(CODE[25]), 
		 -> STR_73(CODE[20]), STR_72(CODE[71]), STR_71(CODE[50]), STR_70(CODE[22]), 
		 -> STR_69(CODE[33]), STR_68(CODE[58]), STR_67(CODE[3]), STR_66(CODE[68]), 
		 -> STR_65(CODE[57]), STR_64(CODE[3]), STR_63(CODE[5]), STR_62(CODE[2]), 
		 -> STR_61(CODE[5]), STR_60(CODE[17]), STR_59(CODE[15]), STR_58(CODE[3]), 
		 -> STR_57(CODE[5]), STR_56(CODE[2]), STR_55(CODE[5]), STR_54(CODE[17]), 
		 -> STR_53(CODE[15]), STR_52(CODE[78]), STR_51(CODE[44]), STR_50(CODE[3]), 
		 -> STR_49(CODE[5]), STR_48(CODE[2]), STR_47(CODE[5]), STR_46(CODE[17]), 
		 -> STR_45(CODE[15]), STR_44(CODE[3]), STR_43(CODE[5]), STR_42(CODE[2]), 
		 -> STR_41(CODE[5]), STR_40(CODE[17]), STR_39(CODE[15]), STR_38(CODE[3]), 
		 -> STR_37(CODE[5]), STR_36(CODE[2]), STR_35(CODE[5]), STR_34(CODE[19]), 
		 -> STR_33(CODE[11]), STR_32(CODE[11]), STR_31(CODE[29]), STR_30(CODE[42]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_27(CODE[8]), STR_26(CODE[52]), 
		 -> STR_25(CODE[32]), STR_24(CODE[42]), STR_23(CODE[50]), STR_22(CODE[52]), 
		 -> STR_21(CODE[55]), STR_20(CODE[43]), STR_19(CODE[37]), STR_18(CODE[52]), 
		 -> STR_17(CODE[24]), STR_16(CODE[52]), STR_15(CODE[24]), STR_14(CODE[21]), 
		 -> STR_13(CODE[7]), STR_12(CODE[15]), STR_11(CODE[52]), STR_10(CODE[3]), 
		 -> STR_9(CODE[5]), STR_8(CODE[2]), STR_7(CODE[5]), STR_6(CODE[19]), 
		 -> STR_5(CODE[54]), STR_4(CODE[5]), STR_3(CODE[18]), STR_2(CODE[20]), 
		 -> STR_1(CODE[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    hexDumpBuffer@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBufferRed(BIGRAM[512]), 

    SDCARD_WriteBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBufferBlue(BIGRAM[512]), sdCardBufferRed(BIGRAM[512]), 

    SDCARD_ReadBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBufferRed(BIGRAM[512]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _SDCARD_WriteBlock->_SPI2_ExchangeByte
    _SDCARD_ReadBlock->_SPI2_ExchangeByte
    _SDCARD_PollWriteComplete->_SPI2_ExchangeByte
    _vfpfcnvrt->_dtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer
    i2_TMR0_WriteTimer->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_hexDumpBuffer
    _hexDumpBuffer->_printf
    _SDCARD_HCInitialize->_SDCARD_SetIdle
    _SDCARD_SetIdle->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0  128659
                                             87 BANK0     15    15      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                _SDCARD_HCInitialize
           _SDCARD_PollWriteComplete
                   _SDCARD_ReadBlock
                  _SDCARD_WriteBlock
                         _SPI2_Close
                          _SPI2_Open
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                      _hexDumpBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _hexDumpBuffer                                       10     8      2   31832
                                             77 BANK0     10     8      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     170
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             18 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Open                                            2     2      0      88
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SDCARD_WriteBlock                                    8     2      6     657
                                             17 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_ReadBlock                                     8     2      6     505
                                             17 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_PollWriteComplete                             1     1      0      67
                                             17 COMRAM     1     1      0
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_HCInitialize                                  5     5      0   62524
                                             81 BANK0      5     5      0
                     _SDCARD_SetIdle
                  _SPI2_ExchangeByte
                             _printf
 ---------------------------------------------------------------------------------
 (2) _SDCARD_SetIdle                                       4     4      0   31197
                                             77 BANK0      4     4      0
                  _SPI2_ExchangeByte
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   31042
                                             67 BANK0     10     4      6
                  _SPI2_ExchangeByte (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   21493
                                             59 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   20939
                                             28 BANK0     31    25      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    5925
                                             45 COMRAM    11     0     11
                                              0 BANK0     28    28      0
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             22 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6161
                                             45 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             34 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             16 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             16 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    4174
                                             45 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3895
                                             34 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1506
                                             27 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1006
                                             18 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                             17 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1765
                                             23 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             16 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     662
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPI2_ExchangeByte                                    1     1      0      22
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          4     4      0     139
                                             12 COMRAM     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR0_ISR                                            0     0      0     139
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (14) _myTMR0ISR                                           2     2      0     139
                                             10 COMRAM     2     2      0
                     _TMR0_ReadTimer
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (15) i2_TMR0_WriteTimer                                   2     0      2      70
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (15) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (14) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SDCARD_HCInitialize
     _SDCARD_SetIdle
       _SPI2_ExchangeByte
       _printf
         _SPI2_ExchangeByte (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
             _fputc
               _putch
                 _EUSART1_Write
             _isdigit
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _EUSART1_Write
                 _fputs
                   _fputc
                     _putch
                       _EUSART1_Write
                 _strlen
               _toupper
                 _islower
     _SPI2_ExchangeByte
     _printf
       _SPI2_ExchangeByte (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _SDCARD_PollWriteComplete
     _SPI2_ExchangeByte
   _SDCARD_ReadBlock
     _SPI2_ExchangeByte
   _SDCARD_WriteBlock
     _SPI2_ExchangeByte
   _SPI2_Close
   _SPI2_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _hexDumpBuffer
     _printf
       _SPI2_ExchangeByte (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _printf
     _SPI2_ExchangeByte (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       _TMR0_ReadTimer
       i2_TMR0_WriteTimer
         _TMR0_ReadTimer (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     400      37       26.3%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     66      94       5       92.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3F      4E       1       83.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E2      12        0.0%
DATA                 0      0     4E2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Mar 11 12:07:44 2020

                                            l21 25CE                                              l33 273E  
                                            l43 2748                                              l71 1F2C  
                                            l80 26E2                                              l74 2782  
                                            l67 2734                                              l77 26D0  
                                            l79 26DE                            myTMR0ISR@bufferIndex 0046  
                          SDCARD_ReadBlock@addr 0012                             ___wmul@multiplicand 0013  
                               _timer0ReloadVal 0048                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                    __CFG_CP2$OFF 000000  
                                  __CFG_CP3$OFF 000000                                     __CFG_LVP$ON 000000  
                                hexDumpBuffer@i 00B5                                  hexDumpBuffer@j 00B1  
                                           l201 2766                                             l210 277E  
                                           l150 2412                                             l242 268E  
                                           l171 264A                                             l245 26BA  
                                           l158 2722                                             l174 26FC  
                                           l167 2624                                             l183 2770  
                                           l407 04E4                                             l504 2486  
                                           l248 26C8                                             l177 270E  
                                           l611 1E80                                             l195 275C  
                                           l275 25FA                                             l524 1A98  
                                           l701 0F30                                             l533 1B80  
                                           l606 1E04                                             l198 2752  
                                           l543 205E                                             l624 0FD2  
                                           l609 1E46                                             l713 21DE  
                                           l297 26F8                                             l377 0078  
                                           l618 22FE                                             l626 0FDA  
                                           l714 21E6                                             l538 1FFE  
                                           l651 1254                                             l644 1212  
                                           l484 1FC6                                             l388 02A0  
                                           l717 2670                                             l494 2180  
                                           l558 1608                                             l831 19FA  
                                           l672 148A                                             l496 2182  
                                           l649 124C                                             l569 16D8  
                                           l674 14EC                                             l658 12EC  
                                           l499 2450                                             l844 1CE4  
                                           l688 0B4C                                    __CFG_CPB$OFF 000000  
                                  __CFG_CPD$OFF 000000                                             _abs 2396  
                                           _pad 1DC0                                             _sin F9ED  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            ?_abs 0023  
                                          l1501 24BE                                            l1423 186A  
                                          l1426 1872                                            l1435 252E  
                                          l1443 2350                                            l1429 244E  
                                          l1464 20F4                                            l1472 2394  
                                          l1392 23CC                                            l5000 0492  
                                          l1449 24F6                                            l1490 229C  
                                          l5010 04D4                                            l1395 23D4  
                                          l4300 1E68                                            l5100 08A2  
                                          l5020 052E                                            l5012 04E0  
                                          l1485 2564                                            l3430 274A  
                                          l5102 08A6                                            l5030 05D0  
                                          l5022 05A4                                            l5014 04E8  
                                          l5006 049C                                            l1495 22A4  
                                          l1479 2622                                            l4240 26FC  
                                          l4400 1C2E                                            l4304 2396  
                                          l4312 2414                                            l4320 227E  
                                          l3432 275E                                            l3416 2740  
                                          l5120 0922                                            l5104 08BA  
                                          l5040 0622                                            l5032 05E8  
                                          l5024 05B6                                            l5016 04FA  
                                          l5008 04C0                                            l3426 26CC  
                                          l4330 264C                                            l4242 270A  
                                          l4250 2084                                            l4410 1CA4  
                                          l4402 1C5C                                            l4306 23B0  
                                          l4322 2290                                            l3450 25BA  
                                          l5114 08E8                                            l5106 08C2  
                                          l5122 0924                                            l5050 0660  
                                          l5042 062E                                            l5034 05F4  
                                          l5018 0516                                            l5026 05B8  
                                          l5130 09D0                                            l4332 2668  
                                          l4420 2318                                            l4244 276A  
                                          l4252 208E                                            l4260 2352  
                                          l4340 1886                                            l4412 1CC4  
                                          l4404 1C7C                                            l4500 11EA  
                                          l4308 24C0                                            l4316 2248  
                                          l3700 1F8E                                            l3428 2754  
                                          l3460 2730                                            l3452 25BC  
                                          l3444 259C                                            l3540 2736  
                                          l5124 0938                                            l5116 090A  
                                          l5108 08DE                                            l5052 067C  
                                          l5060 0724                                            l5044 0642  
                                          l5036 060A                                            l5028 05CC  
                                          l4326 24F8                                            l4422 2346  
                                          l4254 20AC                                            l4246 2060  
                                          l4262 235E                                            l4270 253C  
                                          l4430 22B8                                            l4350 18DC  
                                          l4342 18A6                                            l4406 1C8E  
                                          l4510 123E                                            l3702 1FA2  
                                          l3470 2402                                            l3462 2732  
                                          l3454 25BE                                            l3446 25A0  
                                          l3542 273A                                            l5126 09BA  
                                          l5118 0910                                            l5070 07F0  
                                          l5062 0734                                            l5054 0694  
                                          l5046 0646                                            l5038 0616  
                                          l4424 234A                                            l4416 2300  
                                          l4256 20E2                                            l4248 2072  
                                          l4264 2370                                            l4272 2540  
                                          l4432 22C4                                            l4360 1930  
                                          l4352 18E8                                            l4344 18AA  
                                          l4336 1874                                            l4408 1C94  
                                          l4520 12A6                                            l4512 126A  
                                          l4504 1214                                            l3800 245A  
                                          l3704 1FA6                                            l3560 1ED6  
                                          l3472 240E                                            l3464 23D6  
                                          l3480 25F8                                            l3456 25CA  
                                          l3448 25A4                                            l5080 0818  
                                          l5064 0750                                            l5056 070A  
                                          l5048 064E                                            l5072 07F4  
                                          l3570 2710                                            l4418 2304  
                                          l4602 182A                                            l4266 2374  
                                          l4274 2558                                            l4290 1DFC  
                                          l4282 1DC0                                            l4434 22D0  
                                          l4370 19A4                                            l4362 1942  
                                          l4354 1906                                            l4346 18B8  
                                          l4338 1878                                            l4450 0FAA  
                                          l4442 0F32                                            l4522 12AC  
                                          l4514 1274                                            l4506 1222  
                                          l3810 2472                                            l3802 245C  
                                          l3706 1FB8                                            l3562 1EFA  
                                          l3554 1E84                                            l3466 23EA  
                                          l3474 277C                                            l3482 26AE  
                                          l3458 2724                                            l5090 085C  
                                          l5082 0824                                            l5074 0808  
                                          l5066 0768                                            l5058 071C  
                                          l3580 2644                                            l4604 183C  
                                          l4268 2530                                            l4292 1E10  
                                          l4284 1DCE                                            l4436 22D4  
                                          l4428 22A6                                            l4364 1970  
                                          l4356 190E                                            l4372 19AA  
                                          l4348 18D8                                            l4380 1B82  
                                          l4460 1002                                            l4452 0FAC  
                                          l4444 0F52                                            l4540 137E  
                                          l4532 1320                                            l4524 12B4  
                                          l4516 1294                                            l4508 1224  
                                          l4620 0A9E                                            l4612 0A56  
                                          l3812 2484                                            l3804 246C  
                                          l3708 1FC4                                            l3564 1F2A  
                                          l3556 1E92                                            l3484 26E4  
                                          l3468 23F6                                            l3476 25D0  
                                          l5092 086A                                            l5084 0832  
                                          l5076 080C                                            l5068 07DE  
                                          l3582 2648                                            l3574 2624  
                                          l4606 184E                                            l4294 1E24  
                                          l4286 1DE2                                            l4438 22DA  
                                          l4374 19BA                                            l4366 1990  
                                          l4358 1922                                            l4390 1BC6  
                                          l4382 1B86                                            l4470 10A0  
                                          l4462 1008                                            l4454 0FC6  
                                          l4446 0F7C                                            l4278 2488  
                                          l4534 1332                                            l4542 1392  
                                          l4526 12D0                                            l4550 140E  
                                          l4518 129E                                            l4702 0E88  
                                          l4630 0AC6                                            l4622 0AAC  
                                          l4614 0A7C                                            l3558 1ED2  
                                          l3478 25DC                                            l3590 267A  
                                          l5094 0878                                            l5086 0840  
                                          l5078 0814                                            ?_pad 0023  
                                          l3576 2632                                            l4296 1E28  
                                          l4288 1DF0                                            l4376 19DA  
                                          l4368 1992                                            l4392 1BE6  
                                          l4384 1B94                                            l4480 114C  
                                          l4472 10A8                                            l4464 1010  
                                          l4456 0FE2                                            l4448 0F9C  
                                          l4560 1498                                            l4552 142A  
                                          l4544 13A4                                            l4528 12E0  
                                          l4720 0F1E                                            l4704 0EAE  
                                          l4712 0EDE                                            l4624 0AAE  
                                          l4616 0A8A                                            l4800 1A6E  
                                          l3680 1F3C                                            l3672 1F2E  
                                          l3568 2780                                            l3592 267E  
                                          l5272 09E4                                            l5096 0886  
                                          l5088 084E                                            l3578 2636  
                                          l4570 16DA                                            l4298 1E54  
                                          l4394 1C04                                            l4386 1BB4  
                                          l4490 11AE                                            l4482 1166  
                                          l4474 10AE                                            l4466 1018  
                                          l4458 0FF4                                            l4562 149E  
                                          l4554 1448                                            l4546 13AA  
                                          l4538 136C                                            l4714 0EEC  
                                          l4706 0EBC                                            l4650 0B5A  
                                          l5274 0B0C                                            l4642 0AD8  
                                          l4634 0ACC                                            l4626 0AC0  
                                          l4618 0A9A                                            l4810 1AB4  
                                          l4802 1A8A                                            l3690 1F5A  
                                          l3682 1F42                                            l3674 1F2E  
                                          l3770 20FE                                            l3594 2682  
                                          l3586 2672                                            l5098 0894  
                                          l5276 179C                                            l4580 174C  
                                          l4572 16EE                                            l4396 1C0C  
                                          l4388 1BB8                                            l4492 11B4  
                                          l4484 1180                                            l4468 101E  
                                          l4476 1112                                            l4564 14AE  
                                          l4556 1462                                            l4548 13B0  
                                          l4708 0ED0                                            l4660 0BD4  
                                          l4652 0B5C                                            l4740 21C0  
                                          l4820 1AD2                                            l4812 1ABA  
                                          l4804 1A96                                            l3692 1F70  
                                          l3684 1F48                                            l3676 1F30  
                                          l3780 211C                                            l3772 2104  
                                          l3764 20F6                                            l3596 2686  
                                          l3588 2676                                            l4900 006A  
                                          l4590 1774                                            l4582 1750  
                                          l4574 16F2                                            l4398 1C20  
                                          l4494 11C6                                            l4478 112E  
                                          l4486 118E                                            l4566 14C4  
                                          l4558 147C                                            l4662 0BF4  
                                          l4670 0C5E                                            l4654 0B82  
                                          l4646 0AE4                                            l4638 0AD2  
                                          l4718 0EF8                                            l4734 2184  
                                          l4742 25FC                                            l4830 1B30  
                                          l4822 1AD8                                            l4814 1AC0  
                                          l4806 1AAC                                            l3694 1F86  
                                          l3686 1F4E                                            l3678 1F36  
                                          l3782 2122                                            l3774 210A  
                                          l3766 20F6                                            l3598 268A  
                                          l4910 0096                                            l4902 0076  
                                          l4592 177C                                            l4576 16F6  
                                          l4496 11D2                                            l4488 11A0  
                                          l4680 0CF8                                            l4672 0C84  
                                          l4664 0C02                                            l4656 0BB8  
                                          l4648 0B3A                                            l4736 218C  
                                          l4744 2606                                            l4760 2000  
                                          l4832 1B42                                            l4824 1ADE  
                                          l4816 1AC6                                            l4808 1AAE  
                                          l3688 1F54                                            l3792 2158  
                                          l3784 2138                                            l3776 2110  
                                          l3768 20F8                                            l4840 14EE  
                                          l4920 00E2                                            l4912 00A4  
                                          l4904 0086                                            l4594 17B2  
                                          l4586 1756                                            l4578 1714  
                                          l4498 11DA                                            l4690 0DC4  
                                          l4682 0D1E                                            l4674 0CB6  
                                          l4658 0BC6                                            l4738 219A  
                                          l4762 203A                                            l4754 1FD6  
                                          l4834 1B54                                            l4826 1AE8  
                                          l4818 1ACC                                            l4770 1A08  
                                          l3794 216A                                            l3786 2150  
                                          l3778 2116                                            l4850 1518  
                                          l4842 14FC                                            l4922 00EE  
                                          l4914 00B2                                            l4906 0092  
                                          l4588 176C                                            l4692 0DEA  
                                          l4684 0D66                                            l4668 0C4C  
                                          l4764 203C                                            l4756 1FDC  
                                          l4748 1FCC                                            l4836 1B64  
                                          l4828 1B2E                                            l4780 1A22  
                                          l4772 1A0A                                            l3796 216E  
                                          l4860 1580                                            l4852 1536  
                                          l4932 0278                                            l4924 0260  
                                          l4916 00C0                                            l4908 0094  
                                          l4598 17EA                                            l4694 0E02  
                                          l4678 0CD2                                            l4766 204C  
                                          l4758 1FE2                                            l4838 1B74  
                                          l4790 1A44                                            l4782 1A28  
                                          l4774 1A10                                            l3798 2452  
                                          l4862 1592                                            l4870 15E6  
                                          l4854 1542                                            l4950 02DA  
                                          l4934 0284                                            l4926 0270  
                                          l4918 00CE                                            l4696 0E10  
                                          l4688 0D9E                                            l4784 1A2E  
                                          l4776 1A16                                            l4768 1A00  
                                          l4880 1650                                            l4872 15FC  
                                          l4864 15AE                                            l4856 1556  
                                          l4848 1506                                            l4960 0316  
                                          l4952 02F4                                            l4944 02AE  
                                          l4936 028A                                            l4698 0E4C  
                                          l4786 1A34                                            l4778 1A1C  
                                          l4882 1662                                            l4890 16B6  
                                          l4874 162C                                            l4866 15BE  
                                          l4858 1574                                            l4970 0362  
                                          l4962 0320                                            l4954 02F8  
                                          l4946 02BA                                            l4938 02A6  
                                          l4796 1A4C                                            l4788 1A3A  
                                          l4892 16CC                                            l4884 167E  
                                          l4876 1632                                            l4868 15E0  
                                          l4980 03CA                                            l4972 036E  
                                          l4964 0332                                            l4956 02FE  
                                          l4948 02C0                                            l4798 1A68  
                                          l4886 168E                                            l4878 1644  
                                          l4990 042E                                            l4982 03DC  
                                          l4974 037C                                            l4966 0342  
                                          l4958 0312                                            l4894 0052  
                                          l4888 16B0                                            l4992 043C  
                                          l4984 03F8                                            l4976 0396  
                                          l4968 0352                                            l4896 0064  
                                          l4994 0462                                            l4986 0406  
                                          l4978 03A4                                            l4898 0068  
                                          l4996 0470                                            l4988 0414  
                                          l4998 0482                                            STR_1 FF07  
                                          STR_2 FF1B                                            STR_3 FF56  
                                          STR_4 FFE7                                            STR_5 FB8E  
                                          STR_6 FF43                                            STR_7 FFEC  
                                          STR_8 FFFD                                            STR_9 FFEC  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            u3120 270A  
                                          u3200 24BA                                            u4000 0D1E  
                                          u3121 2706                                            u4001 0D1A  
                                          u3130 2072                                            u3210 1DCE  
                                          u4010 0DC4                                            u3131 206E  
                                          u3211 1DCA                                            u4011 0DC0  
                                          u3140 2084                                            u3220 1DF0  
                                          u3300 2278                                            u4020 0DEA  
                                          u4100 1518                                            u3141 2080  
                                          u3221 1DEC                                            u3301 2272  
                                          u4021 0DE6                                            u4101 1514  
                                          u3150 20AC                                            u3230 1E46  
                                          u3310 227A                                            u4030 0EAE  
                                          u4110 1536                                            u3151 20A8  
                                          u3231 1E42                                            u4031 0EAA  
                                          u4111 1532                                            u2520 26DE  
                                          u3160 20E2                                            u3240 1E54  
                                          u3400 1970                                            u3320 2290  
                                          u4040 21DE                                            u4120 1556  
                                          u4200 00E2                                            u2521 26DA  
                                          u3161 20DE                                            u3241 1E50  
                                          u3401 196C                                            u3321 228C  
                                          u4041 21DA                                            u4121 1552  
                                          u4201 00DE                                            u3330 2528  
                                          u3170 2394                                            u3410 19BA  
                                          u3250 23B0                                            u4050 1FFE  
                                          u2530 26C8                                            u4130 1574  
                                          u4210 02A0                                            u3331 2522  
                                          u3171 2390                                            u3411 19B6  
                                          u3251 23AC                                            u4051 1FFA  
                                          u2531 26C4                                            u4131 1570  
                                          u4211 029C                                            u3340 252A  
                                          u3180 2558                                            u3500 22B8  
                                          u3420 1B94                                            u3260 24F0  
                                          u4060 204C                                            u2700 1F86  
                                          u2620 1E92                                            u4140 15AE  
                                          u4300 0642                                            u4220 02D6  
                                          u3181 2554                                            u3501 22B4  
                                          u3421 1B90                                            u3261 24EA  
                                          u4061 2048                                            u2701 1F82  
                                          u2621 1E8E                                            u4141 15AA  
                                          u4301 063E                                            u4221 02D2  
                                          u2630 2720                                            u3350 1886  
                                          u3430 1BC6                                            u3510 0F64  
                                          u3270 24F2                                            u3190 24B8  
                                          u4070 1A8A                                            u2710 1FB8  
                                          u4150 15FC                                            u4310 0660  
                                          u4230 0312                                            u2631 271A  
                                          u3351 1882                                            u3431 1BC2  
                                          u3511 0F5E                                            u3191 24B2  
                                          u4071 1A86                                            u2711 1FB4  
                                          u4151 15F8                                            u4311 065C  
                                          u4231 030E                                            u2640 2632  
                                          u3360 18B8                                            u3440 1C04  
                                          u3600 1166                                            u3520 0F66  
                                          u3280 2448                                            u4080 1B54  
                                          u4160 1644                                            u4320 0694  
                                          u4240 0332                                            u2641 262E  
                                          u3361 18B4                                            u3441 1C00  
                                          u3601 1162                                            u3281 2442  
                                          u4081 1B50                                            u4161 1640  
                                          u4321 0690                                            u4241 032E  
                                          u2650 2644                                            u3450 1C2E  
                                          u3610 1180                                            u3530 0F7C  
                                          u3290 244A                                            u4090 1B64  
                                          u2810 2138                                            u4170 167E  
                                          u4330 0734                                            u4250 04D4  
                                          u2651 2640                                            u3371 18E2  
                                          u3451 1C2A                                            u3611 117C  
                                          u3531 0F78                                            u4091 1B60  
                                          u2811 2134                                            u4171 167A  
                                          u4331 0730                                            u4251 04D0  
                                          u2636 2722                                            u3380 1906  
                                          u3460 1C5C                                            u3620 118E  
                                          u3540 0FAA                                            u3700 131A  
                                          u2820 2180                                            u4180 16CC  
                                          u4340 0768                                            u4260 04FA  
                                          u3381 1902                                            u3461 1C58  
                                          u3621 118A                                            u3541 0FA6  
                                          u3701 1314                                            u2821 217C  
                                          u4181 16C8                                            u4341 0764  
                                          u4261 04F6                                            u3390 1930  
                                          u3470 1CA4                                            u3630 11A0  
                                          u3550 0FC6                                            u3710 131C  
                                          u2830 246C                                            u4350 0808  
                                          u4270 052E                                            u4190 0086  
                                          u3391 192C                                            u3471 1CA0  
                                          u3631 119C                                            u3551 0FC2  
                                          u2831 2468                                            u4351 0804  
                                          u4271 052A                                            u4191 0082  
                                          u3480 2318                                            u3640 11AE  
                                          u3560 0FF4                                            u3800 147C  
                                          u3720 1332                                            u4360 08BA  
                                          u4280 05CC                                            u3481 2314  
                                          u3641 11AA                                            u3561 0FF0  
                                          u3801 1478                                            u3721 132E  
                                          u4361 08B6                                            u4281 05C8  
                                          u3490 2346                                            u3650 11C6  
                                          u3570 1002                                            u3810 148A  
                                          u3730 1366                                            u2690 1F70  
                                          u4370 0922                                            u4290 060A  
                                          u3491 2342                                            u3651 11C2  
                                          u3571 0FFE                                            u3811 1486  
                                          u3731 1360                                            u2691 1F6C  
                                          u4371 091E                                            u4291 0606  
                                          u3580 112E                                            u3820 1498  
                                          u3740 1368                                            u3660 1222  
                                          u3900 0A7C                                            u4380 0938  
                                          u3581 112A                                            u3821 1494  
                                          u3661 121E                                            u3901 0A78  
                                          u4381 0934                                            u3830 1714  
                                          u3590 114C                                            u3750 137E  
                                          u3670 123E                                            u3910 0B4C  
                                          u3831 1710                                            u3591 1148  
                                          u3751 137A                                            u3671 123A  
                                          u3911 0B48                                            u3840 174C  
                                          u3760 13E8                                            u3680 126A  
                                          u3920 0B5A                                            u3841 1748  
                                          u3681 1266                                            u3921 0B56  
                                          u3850 1768                                            u3770 142A  
                                          u3690 12D0                                            u3930 0B82  
                                          u3851 1764                                            u3771 1426  
                                          u3691 12CC                                            u3931 0B7E  
                                          u3860 1824                                            u3780 1448  
                                          u3940 0BC6                                            u3861 181E  
                                          u3781 1444                                            u3765 13D6  
                                          u3941 0BC2                                            i2l30 26AC  
                                          u3870 1826                                            u3790 1462  
                                          u3950 0C46                                            u3791 145E  
                                          u3951 0C40                                            i2l40 259A  
                                          u3880 183C                                            u3960 0C48  
                                          i2l33 277A                                            u3881 1838  
                                          u3890 184E                                            u3970 0C5E  
                                          u3891 184A                                            u3971 0C5A  
                                          u3980 0C84                                            u3981 0C80  
                                          i2l46 2786                                            u3990 0CF8  
                                          u3991 0CF4                                            _WPUB 000F61  
                                 _EUSART1_Write 26FA                                            abs@a 0023  
                                          _dbuf 00D2                                            _atoi 16DA  
                                          _ctoa 22A6                                            _main 0052  
                                          _dtoa 0F32                                   ?_EUSART1_Read 0001  
                                          _prec 0042                                            _nout 00C6  
                                          pad@i 002A                                            pad@p 0027  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 002C                                            fsr2l 000FD9  
                                          btemp 004F                                   __CFG_BORV$190 000000  
                                          _xtoa 1214                                            prodh 000FF4  
                                          prodl 000FF3                                 ??_hexDumpBuffer 00AF  
                                          start 004E                                   __CFG_IESO$OFF 000000  
                     __size_of_SDCARD_ReadBlock 009A                                    ___param_bank 000000  
                                         ??_abs 0025                                           ??_pad 0029  
                          SDCARD_HCInitialize@i 00B3                         __end_of_TMR0_Initialize 25D0  
                ??_TMR0_DefaultInterruptHandler 0001                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize 26CA                                 __end_of___aodiv 19FC  
                                         ?_atoi 0018                                     ?_SPI2_Close 0001  
                                         ?_ctoa 002E                                           ?_main 0001  
                                         ?_dtoa 002E                                 __end_of___aomod 1CE6  
                                         STR_10 FF96                                           STR_11 FB90  
                                         STR_12 FFA8                                           STR_20 FC83  
                                         STR_13 FFD5                                           STR_21 FB57  
                                         STR_22 FB90                                           STR_14 FEF2  
                                         STR_30 FCAE                                           STR_15 FE82  
                                         STR_31 FDCB                                           STR_23 FBC4  
                                         STR_16 FB90                                           STR_32 FFB7  
                                         STR_40 FF79                                           STR_24 FCD8  
                                         STR_41 FFEC                                           STR_33 FFC2  
                                         STR_17 FE52                                           STR_25 FD8E  
                                         STR_50 FF96                                           STR_26 FB90  
                                         STR_18 FB90                                           STR_34 FF43  
                                         STR_42 FFFD                                           STR_43 FFEC  
                                         STR_35 FFEC                                           STR_27 FFCD  
                                         STR_19 FD02                                           STR_51 FC57  
                                         STR_28 FFF3                                           STR_44 FF96  
                                         STR_60 FF79                                           STR_36 FFFD  
                                         STR_52 FA0B                                           STR_29 FFF3  
                                         STR_53 FF99                                           STR_61 FFEC  
                                         STR_37 FFEC                                           STR_45 FF99  
                                         STR_38 FF96                                           STR_54 FF79  
                                         STR_46 FF79                                           STR_62 FFFD  
                                         STR_70 FEC7                                           STR_63 FFEC  
                                         STR_55 FFEC                                           STR_47 FFEC  
                                         STR_39 FF8A                                           STR_71 FBF6  
                                         STR_64 FF96                                           STR_80 FD6D  
                                         STR_56 FFFD                                           STR_48 FFFD  
                                         STR_72 FA59                                           STR_81 FEC7  
                                         STR_57 FFEC                                           STR_49 FFEC  
                                         STR_73 FF2F                                           STR_65 FB1E  
                                         STR_58 FF96                                           STR_90 FEB1  
                                         STR_82 FE6A                                           STR_74 FE39  
                                         STR_66 FAA0                                           STR_67 FF96  
                                         STR_59 FF99                                           STR_83 FF2F  
                                         STR_75 FFE2                                           STR_91 FE9A  
                                         STR_84 FF68                                           STR_76 FD4A  
                                         STR_92 FD27                                           STR_68 FAE4  
                                         STR_85 FE1F                                           STR_93 FDAE  
                                         STR_69 FD6D                                           STR_77 FC28  
                                         STR_78 FF96                                           STR_94 FE04  
                                         STR_86 FDE8                                           STR_79 FAE4  
                                         STR_87 FFF8                                           STR_95 FFF1  
                                         STR_88 FF96                                           STR_96 FF88  
                                         STR_97 FF87                                           STR_89 FEDD  
                                         STR_98 FFFB                                           STR_99 FFF5  
                     TMR0_ReadTimer@readValHigh 0008                                           _T0CON 000FD5  
                                         ?_xtoa 002E                                  __CFG_DEBUG$OFF 000000  
                                         i2l217 003A                                 _TMR0_WriteTimer 2736  
                                         i2l457 1D9C                                           i2l459 1DBE  
                                  vfpfcnvrt@fmt 007E                                           _TMR0H 000FD7  
                                  vfpfcnvrt@llu 008E                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94               __size_of_TMR0_SetInterruptHandler 000A  
                                 __CFG_WRT0$OFF 000000                              __size_of_SPI2_Open 00AC  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                     ?_TMR0_SetInterruptHandler 0011                                   __CFG_WRT3$OFF 000000  
                                __CFG_EBTR0$OFF 000000                                  __CFG_FCMEN$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                __end_of_TMR0_ISR 259C  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                  __CFG_EBTRB$OFF 000000  
                                         _flags 0044                                           _fputc 2060  
                               __end_of_isalpha 2450                                           _fputs 2352  
                               __end_of_isdigit 2530                              __CFG_MCLRE$EXTMCLR 000000  
                                         atoi@n 0025                                           pad@fp 0023  
                                         atoi@s 0018                                           _width 0040  
                                         ctoa@c 0030                                           _putch 2768  
                                         ctoa@w 0031                                           main@i 00C0  
                                         main@j 00BD                                           dtoa@d 0030  
                                         dtoa@i 0070                                           dtoa@n 0068  
                                         dtoa@p 0062                                           dtoa@s 0066  
                                         dtoa@w 0064                                 __end_of_islower 24C0  
                               __end_of_isspace 2352                                  ?_EUSART1_Write 0001  
                               __end_of_isupper 24F8                                           pclath 000FFA  
                                         tablat 000FF5                      SDCARD_HCInitialize@verbose 00B2  
                                ??_EUSART1_Read 0011                                           ttemp5 0050  
                                         ttemp6 0053                                           ttemp7 0057  
                                         status 000FD8                                           wtemp8 0050  
                                         xtoa@c 007A                                           xtoa@d 0030  
                                         xtoa@i 0078                                           xtoa@n 0070  
                                         xtoa@p 006C                                           xtoa@w 006E  
                                         xtoa@x 0038                                  __CFG_HFOFST$ON 000000  
                               __end_of_toupper 22A6                         __size_of_SDCARD_SetIdle 0098  
            _EUSART1_DefaultFramingErrorHandler 000000                                  __CFG_PBADEN$ON 000000  
                           _SDCARD_HCInitialize 19FC                                    _toupper$1929 001D  
                               __initialization 21E8                    SDCARD_ReadBlock@sdCardBuffer 0016  
                                  __end_of_atoi 1874                                    __end_of_ctoa 2300  
                    __end_of_EUSART1_Initialize 2414                                    __end_of_main 0A56  
                                  __end_of_dtoa 1214                               _SPI2_ExchangeByte 26CA  
                                  __end_of_xtoa 14EE               __size_of_SDCARD_PollWriteComplete 0038  
                     ?_SDCARD_PollWriteComplete 0001                     ?_INTERRUPT_InterruptManager 0001  
                            ?_SPI2_ExchangeByte 0001                                          ??_atoi 001A  
                                        ??_ctoa 0031                                          ??_main 00B7  
                                        ??_dtoa 0038                                          ??_xtoa 0060  
                                 __activetblptr 000003                            ?_SDCARD_HCInitialize 0001  
                      __size_of_SPI2_Initialize 0012                             ??_SPI2_ExchangeByte 0011  
                         SDCARD_SetIdle@verbose 00AD                                          _ADCON0 000FC2  
                                        _ADCON1 000FC1                                          _ADCON2 000FC0  
                                        ?_fputc 0013                                          STR_100 FF96  
                                        STR_101 FFDC                                          STR_102 FF86  
                                        ?_fputs 001C                                          STR_103 FFFB  
                                        STR_104 FFF5                                          STR_105 FF96  
                                        _ADRESH 000FC4                                          _ADRESL 000FC3  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                  __size_of_EUSART1_is_rx_ready 0014                                          i2l3420 2698  
                                        i2l3500 1D50                                          i2l3422 26A4  
                                        i2l3502 1D64                                          i2l3510 1DA4  
                                __CFG_WDTEN$OFF 000000                                          i2l3440 2772  
                                        i2l3512 1DBA                                          i2l3504 1D74  
                                        i2l3418 2690                                          i2l3442 2776  
                                        i2l3514 1DBC                                          i2l3506 1D82  
                                        i2l3508 1D92                                          i2l3550 2570  
                                        i2l3552 2582                                          i2l3544 2566  
                                        i2l3490 1CFA                                          i2l3546 2568  
                                        i2l3492 1D0E                                          i2l3548 256C  
                                        i2l3486 1CE6                                          i2l3496 1D22  
                                        i2l3840 0036                                          i2l3498 1D4C  
                                        i2l3836 001A                                          i2l5278 1D36  
                                        i2l3838 0028                                   _redBufferFull 00D1  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 vfpfcnvrt@done 0096                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                           __size_of_SPI2_Close 0004                                  __CFG_XINST$OFF 000000  
                             __end_of_SPI2_Open 1F2E                       __end_of_SPI2_ExchangeByte 26E4  
                                  vfprintf@cfmt 00A1                                       ??___aodiv 0021  
                                     ??___aomod 0021                                          ___wmul 264C  
                                __CFG_STVREN$ON 000000                         __end_of_TMR0_WriteTimer 2740  
                     i2TMR0_WriteTimer@timerVal 0009                        ?_EUSART1_SetErrorHandler 0011  
                              ?_TMR0_Initialize 0001                                          clear_0 221A  
                                        clear_1 222C                                          clear_2 2238  
                                        _printf 25FC                                          pad@buf 0025  
              ??_EUSART1_SetOverrunErrorHandler 0013                 ?_EUSART1_SetOverrunErrorHandler 0011  
                                        ctoa@fp 002E                                          dtoa@fp 002E  
                                        _strlen 2530                           ??_SDCARD_HCInitialize 00B1  
                                        fputc@c 0013                     SDCARD_HCInitialize@response 00B5  
                                        fputs@c 0020                                          fputs@i 0021  
                                  __pdataCOMRAM 004E                                          fputs@s 001C  
                                     ??_isalpha 0013                                       ??_isdigit 0013  
                                     ??_islower 0013                                    __mediumconst F9EC  
                                     ??_isspace 0013                                          tblptrh 000FF7  
                                     ??_isupper 0013                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 21E8  
                               ??_EUSART1_Write 0011        TMR0_SetInterruptHandler@InterruptHandler 0011  
                                        xtoa@fp 002E                                       ??_toupper 0019  
                 __size_of_INTERRUPT_Initialize 0004                               _SYSTEM_Initialize 2672  
                                    __accesstop 0060                         __end_of__initialization 223E  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                              _SDCARD_ReadBlock 1F2E                      __end_of_spi2_configuration FA0B  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 2784  
                           ??_SYSTEM_Initialize 0015                                       ?_TMR0_ISR 0001  
                                 __end_of_fputc 20F6                                   __end_of_fputs 2396  
                                 __end_of_putch 2772                         __size_of_TMR0_ReadTimer 001E  
                          __end_of_EUSART1_Read 264C                                         ??_fputc 0017  
                     __end_of_SYSTEM_Initialize 2690                                         ??_fputs 0020  
                            __size_of_myTMR0ISR 00DA                                         ??_putch 0012  
                            SDCARD_WriteBlock@i 0018                               ??_SPI2_Initialize 0011  
                                    __pbssBANK0 00C6                                 __CFG_PLLCFG$OFF 000000  
                                _SDCARD_SetIdle 1FC8                          SDCARD_SetIdle@response 00AE  
                    __size_of_SPI2_ExchangeByte 001A                 __end_of_EUSART1_SetErrorHandler 2768  
                            __CFG_CCP2MX$PORTC1 000000                __end_of_TMR0_SetInterruptHandler 274A  
                                       ?___wmul 0011                                      ??_TMR0_ISR 000D  
                            __CFG_CCP3MX$PORTB5 000000                                ?_TMR0_WriteTimer 0011  
                                       ?_printf 00A3                                    ??_SPI2_Close 0011  
                       __size_of_ADC_Initialize 0016                                         ?_strlen 0011  
        __end_of_EUSART1_SetFramingErrorHandler 275E         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 2754                                 SDCARD_SetIdle@i 00AF  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 04DC  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                                main@readBlocks 00BC                                         _SSP2ADD 000F6E  
                                       _SSP2BUF 000F6F                               SDCARD_ReadBlock@i 0018  
                        __end_of_SDCARD_SetIdle 2060                __end_of_SDCARD_PollWriteComplete 2488  
                               __CFG_PWRTEN$OFF 000000                              __end_of_SPI2_Close 2784  
                          _ADC_InterruptHandler 00C8                                         __Hparam 0000  
                                       __Lparam 0000                           __end_of_hexDumpBuffer 16DA  
                                       ___aodiv 1874                                         ___aomod 1B82  
                               __size_of___wmul 0026                               __end_of_myTMR0ISR 1DC0  
                                     ?_vfprintf 009B                             _EUSART1_is_rx_ready 2710  
                                       __pcinit 21E8                                         __ramtop 1000  
                                       __ptext0 0052                                         __ptext1 14EE  
                                       __ptext2 2736                                         __ptext3 2672  
                                       __ptext4 259C                                         __ptext5 2740  
                                       __ptext6 2724                                         __ptext7 25D0  
                                       __ptext8 26AE                                         __ptext9 277C  
                               __size_of_printf 0028                                       _T0CONbits 000FD5  
                               __size_of_strlen 0036                           _OSCILLATOR_Initialize 26AE  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                                       _isalpha 2414                                         _isdigit 24F8  
                            _EUSART1_Initialize 23D6                                         _islower 2488  
                      ??_PIN_MANAGER_Initialize 0011                                         _isspace 2300  
                                       _isupper 24C0                                         atoi@neg 001E  
                                       main@cmd 00BF                      __size_of_SYSTEM_Initialize 001E  
                                       _toupper 2248                            end_of_initialization 223E  
                          ?_EUSART1_is_rx_ready 0001                                 ?_SDCARD_SetIdle 0001  
                           ?_EUSART1_Initialize 0001                                      _sampleRate 00F2  
                                       fputc@fp 0015                     _EUSART1_OverrunErrorHandler 00CC  
                                       fputs@fp 001E                   SDCARD_WriteBlock@sdCardBuffer 0016  
                             __end_of_vfpfcnvrt 0F32                           TMR0_ReadTimer@readVal 0005  
                                _blueBufferFull 00D0                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0028                                      ??_vfprintf 0040  
                                     _SPI2_Open 1E82                                  _TMR0_ReadTimer 2690  
                          ??_EUSART1_Initialize 0013                           SDCARD_WriteBlock@addr 0012  
                                       strlen@a 0013                                         strlen@s 0011  
                      _TMR0_SetInterruptHandler 2740                                 _sdCardBufferRed 02F4  
                      __end_of_SDCARD_ReadBlock 1FC8                              main@recordedBlocks 00BB  
                                     _TRISBbits 000F93                __size_of_EUSART1_SetErrorHandler 000A  
                SDCARD_PollWriteComplete@status 0012                             EUSART1_Write@txData 0011  
                         ??_EUSART1_is_rx_ready 0011                                    _EUSART1_Read 2624  
                                    main@status 00BA                        _SDCARD_PollWriteComplete 2450  
                        __end_of_TMR0_ReadTimer 26AE                    __end_of_INTERRUPT_Initialize 2780  
                   __end_of_SDCARD_HCInitialize 1B82                                      ?_SPI2_Open 0001  
                                   vfpfcnvrt@ap 0080                                     vfpfcnvrt@fp 007C  
                                   vfpfcnvrt@ll 0086                                  __end_of___wmul 2672  
                                 __pidataCOMRAM 2788                               __size_of_TMR0_ISR 0036  
                                _ADC_Initialize 26E4                          ?_OSCILLATOR_Initialize 0001  
                               _SPI2_Initialize 2724                                  __end_of_printf 2624  
                                __end_of_strlen 2566                              _spi2_configuration FA07  
                           start_initialization 21E8                        __size_of_TMR0_Initialize 0034  
               __size_of_PIN_MANAGER_Initialize 002C                                     __end_of_abs 23D6  
                                   __end_of_pad 1E82                                     __end_of_sin FA07  
                                   putch@txData 0012                           __end_of_EUSART1_Write 2710  
                             main@sdCardAddress 00C2                                     vfprintf@fmt 009D  
                               ?_TMR0_ReadTimer 0001                                        ??___wmul 0015  
                        __end_of_ADC_Initialize 26FA                                     __pdataBANK0 00F2  
                                      ??_printf 0040                           SPI2_ExchangeByte@data 0011  
                                      ??_strlen 0013                                     __pbssBIGRAM 00F4  
                                   __pbssCOMRAM 0040                                   __pcstackBANK0 0060  
                           hexDumpBuffer@j_1271 00B3                                ___aodiv@dividend 0011  
              ??_EUSART1_SetFramingErrorHandler 0013                 ?_EUSART1_SetFramingErrorHandler 0011  
                                     _atoi$1837 0020                                       _atoi$1838 0024  
                                     _atoi$1839 0022                           _TMR0_InterruptHandler 004A  
                        _PIN_MANAGER_Initialize 25D0                                       _dtoa$1353 0060  
                             _SDCARD_WriteBlock 20F6                                       __pintcode 0008  
                                 __pmediumconst F9EC                         __end_of_SPI2_Initialize 2736  
                                      ?___aodiv 0011                                        ?___aomod 0011  
                              ___aodiv@quotient 0023                              ?_SDCARD_WriteBlock 0012  
                               ?_ADC_Initialize 0001                                     ??_SPI2_Open 0011  
              SPI2_Open@spi2UniqueConfiguration 0012                    ??_INTERRUPT_InterruptManager 000D  
                              __CFG_PRICLKEN$ON 000000                               __size_of_vfprintf 0064  
                                     _myTMR0ISR 1CE6                             ??_SDCARD_WriteBlock 0018  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      ?_isalpha 0011                                        ?_isdigit 0011  
                      __size_of_TMR0_WriteTimer 000A                            _EUSART1_ErrorHandler 00CA  
                                      ?_islower 0011                                        ?_isspace 0011  
                              ??_SDCARD_SetIdle 0040                                        ?_isupper 0011  
                       _EUSART1_SetErrorHandler 275E                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                        ?_toupper 0017  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 277C  
                             ??_TMR0_Initialize 0013                                  ___wmul@product 0015  
       EUSART1_SetErrorHandler@interruptHandler 0011                                        _LATBbits 000F8A  
                     __end_of_SDCARD_WriteBlock 2184             __size_of_INTERRUPT_InterruptManager 0046  
                                      i2u260_40 2582                                        i2u260_41 257E  
                    ??_TMR0_SetInterruptHandler 0013                                        i2u254_40 1CF6  
                                      i2u261_48 2588                                        i2u254_41 1CF2  
                                      i2u261_49 259A                                        i2u255_40 1D64  
                                      i2u255_41 1D60                                        i2u256_40 1D74  
                                      i2u256_41 1D70                                        i2u257_40 1D92  
                                      i2u257_41 1D8E                                        _PIR1bits 000F9E  
                                      _PIR3bits 000FA4                                        i2u286_40 0028  
                                      i2u286_41 0024                                        i2u287_40 0036  
                                      i2u287_41 0032                                        _RCONbits 000FD0  
                              __CFG_WDTPS$32768 000000                                        _SSP2CON1 000F6C  
                                      _SSP2CON2 000F6B                                        _TMR0_ISR 2566  
                                      _SSP2STAT 000F6D                                       _vfpfcnvrt 0A56  
                      TMR0_ReadTimer@readValLow 0007                                       _xtoa$1363 0068  
                                     _xtoa$1364 006A                                      _ADCON0bits 000FC2  
                             ___wmul@multiplier 0011                                      ?_myTMR0ISR 0001  
                             i2_TMR0_WriteTimer 2772                               ?_SDCARD_ReadBlock 0012  
                                  _isspace$1864 0017                          __size_of_hexDumpBuffer 01EC  
                                    vfpfcnvrt@c 009A                              ?i2_TMR0_WriteTimer 0009  
                                   _INTCON2bits 000FF1                           ?_INTERRUPT_Initialize 0001  
                            ??_SDCARD_ReadBlock 0018                      ??_SDCARD_PollWriteComplete 0012  
                           ??i2_TMR0_WriteTimer 000B                                        __Hrparam 0000  
                                    vfprintf@ap 009F                                        __Lrparam 0000  
                                    vfprintf@fp 009B                              __CFG_BOREN$SBORDIS 000000  
                             __CFG_P2BMX$PORTB5 000000                                ?_SPI2_Initialize 0001  
                       ??_OSCILLATOR_Initialize 0011                                __size_of___aodiv 0188  
                              __size_of___aomod 0164                     __size_of_EUSART1_Initialize 003E  
                                    ?_vfpfcnvrt 007C                                 ___aodiv@divisor 0019  
                               ___aodiv@counter 0021                       __end_ofi2_TMR0_WriteTimer 277C  
                     ??_EUSART1_SetErrorHandler 0013                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 2724                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                                __size_of_islower 0038  
                              __size_of_isspace 0052                                        __ptext10 23D6  
                                      __ptext11 274A                                        __ptext20 19FC  
                                      __ptext12 2754                                        __ptext21 1FC8  
                                      __ptext13 275E                                        __ptext30 0F32  
                                      __ptext22 25FC                                        __ptext14 26E4  
                                      __ptext31 2396                                        __ptext23 2184  
                                      __ptext15 1E82                                        __ptext40 26FA  
                                      __ptext32 1B82                                        __ptext24 0A56  
                                      __ptext16 2780                                        __ptext41 16DA  
                                      __ptext33 1874                                        __ptext25 1214  
                                      __ptext17 20F6                                        __ptext50 2786  
                                      __ptext42 2300                                        __ptext34 22A6  
                                      __ptext26 2248                                        __ptext18 1F2E  
                                      __ptext51 1CE6                                        __ptext43 24F8  
                                      __ptext35 1DC0                                        __ptext27 2488  
                                      __ptext19 2450                                        __ptext52 2772  
                                      __ptext44 264C                                        __ptext36 2530  
                                      __ptext28 24C0                                        __ptext53 2690  
                                      __ptext45 26CA                                        __ptext37 2352  
                                      __ptext29 2414                                        __ptext54 0000  
                                      __ptext46 2710                                        __ptext38 2060  
                                      __ptext47 2624                                        __ptext39 2768  
                                      __ptext49 2566                                __size_of_isupper 0038  
                         myTMR0ISR@activeBuffer 004E                                    _SSP2CON1bits 000F6C  
                       TMR0_WriteTimer@timerVal 0011                               ??_TMR0_WriteTimer 0013  
                              __size_of_toupper 005E                                  _collectSamples 004C  
                                 __size_of_atoi 019A                                   __size_of_ctoa 005A  
                                 __size_of_main 0A04                                   __size_of_dtoa 02E2  
                              ??_TMR0_ReadTimer 0003                                   __size_of_xtoa 02DA  
                    __size_of_SDCARD_WriteBlock 008E            __end_of_TMR0_DefaultInterruptHandler 2788  
         __size_of_TMR0_DefaultInterruptHandler 0002                    _TMR0_DefaultInterruptHandler 2786  
EUSART1_SetOverrunErrorHandler@interruptHandler 0011                                   _hexDumpBuffer 14EE  
                                      int$flags 004F                                        _vfprintf 2184  
            __end_of_INTERRUPT_InterruptManager 004E                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 00A3                     _EUSART1_FramingErrorHandler 00CE  
                              ___aomod@dividend 0011                                     ??_myTMR0ISR 000B  
                                _vfpfcnvrt$1378 0098                    __size_of_SDCARD_HCInitialize 0186  
                                    _INTCONbits 000FF2                                        isalpha@c 0011  
                                      isdigit@c 0011                          ??_INTERRUPT_Initialize 0011  
                                      intlevel2 0000                                        islower@c 0011  
                                      isspace@c 0011                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 2754         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 274A                                      _RCSTA1bits 000FAB  
                                      isupper@c 0011                                ??_ADC_Initialize 0011  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                ?_hexDumpBuffer 00AD                                        printf@ap 00AB  
EUSART1_SetFramingErrorHandler@interruptHandler 0011                                 ___aomod@divisor 0019  
                                   ??_vfpfcnvrt 0082                                 ___aomod@counter 0021  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 004D  
                                    _SPI2_Close 2780                      __size_ofi2_TMR0_WriteTimer 000A  
                               _TMR0_Initialize 259C                                        toupper@c 0017  
                             __CFG_T3CMX$PORTC0 000000                                _sdCardBufferBlue 00F4  
                                  ___aodiv@sign 0022                  __end_of_PIN_MANAGER_Initialize 25FC  
                             __CFG_FOSC$INTIO67 000000                       hexDumpBuffer@sdCardBuffer 00AD  
                                  ___aomod@sign 0022                                    fp__myTMR0ISR 0000  
